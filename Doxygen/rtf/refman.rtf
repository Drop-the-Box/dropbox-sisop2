{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Drop The Box }Drop The Box}
{\comment Generated by doxygen 1.9.8.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Drop The Box}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all namespaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b alx} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail::meta} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::util} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::AscDump\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ClientContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ClientFileSync\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ClientPublisher\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ClientSession\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ClientSessionManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ClientSubscriber\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Command\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Connection\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::CsvFormatterImpl< useUtcTime >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::CsvFormatterImpl< false >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::CsvFormatter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
plog::CsvFormatterImpl< true >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWB \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::CsvFormatterUtcTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Device\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::detail::meta::enableIf< B, T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::detail::meta::enableIf< true, T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Event\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::EventLogAppenderRegistry\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FileHandler\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FileMetadata\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FileSync\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::FuncMessageFormatter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::HexDump\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::IAppender\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::AndroidAppender< Formatter >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::ArduinoAppender< Formatter >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::ConsoleAppender< Formatter >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::ColorConsoleAppender< Formatter >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
plog::DebugOutputAppender< Formatter >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::DynamicAppender\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::EventLogAppender< Formatter >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::Logger< instanceId >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::RollingFileAppender< Formatter, Converter >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Inotify\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
alx::Inquirer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::detail::meta::isContainer< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::detail::meta::isConvertible< From, To >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::detail::meta::isConvertible< T, std::string >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::detail::meta::isConvertibleToString< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
plog::detail::meta::isConvertible< T, util::nstring >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::detail::meta::isConvertibleToNString< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
plog::detail::meta::isFilesystemPath< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::MessageOnlyFormatter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::detail::meta::No\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::util::NonCopyable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::util::Singleton< Logger< instanceId > >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBL \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::Logger< instanceId >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
plog::util::File\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::util::Mutex\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::util::MutexLock\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::util::Singleton< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Packet\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
alx::Question\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::Record\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ServerContext\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ServerEventPublisher\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ServerEventSubscriber\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Session\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SessionManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SessionRequest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Socket\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::util::Time\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::TxtFormatterImpl< useUtcTime >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::TxtFormatterImpl< false >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::TxtFormatter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
plog::TxtFormatterImpl< true >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::TxtFormatterUtcTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
UserStore\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
plog::UTF8Converter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
plog::NativeEOLConverter< NextConverter >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
plog::detail::meta::Yes\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b plog::AndroidAppender< Formatter >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::ArduinoAppender< Formatter >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::AscDump} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientFileSync} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientPublisher} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientSession} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientSessionManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ClientSubscriber} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::ColorConsoleAppender< Formatter >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Command} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Connection} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::ConsoleAppender< Formatter >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::CsvFormatter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::CsvFormatterImpl< useUtcTime >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::CsvFormatterUtcTime} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::DebugOutputAppender< Formatter >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Device} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::DynamicAppender} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail::meta::enableIf< B, T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail::meta::enableIf< true, T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Event} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::EventLogAppender< Formatter >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::EventLogAppenderRegistry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::util::File} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FileHandler} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FileMetadata} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FileSync} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::FuncMessageFormatter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::HexDump} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::IAppender} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Inotify} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b alx::Inquirer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail::meta::isContainer< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail::meta::isConvertible< From, To >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail::meta::isConvertibleToNString< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail::meta::isConvertibleToString< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail::meta::isFilesystemPath< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::Logger< instanceId >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::MessageOnlyFormatter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::util::Mutex} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::util::MutexLock} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::NativeEOLConverter< NextConverter >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail::meta::No} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::util::NonCopyable} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Packet} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b alx::Question} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::Record} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::RollingFileAppender< Formatter, Converter >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ServerContext} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ServerEventPublisher} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ServerEventSubscriber} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Session} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SessionRequest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::util::Singleton< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Socket} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::util::Time} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::TxtFormatter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::TxtFormatterImpl< useUtcTime >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::TxtFormatterUtcTime} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b UserStore} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::UTF8Converter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b plog::detail::meta::Yes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b src/client/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/client/eventhub/{\b file_exchange.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/client/eventhub/{\b file_exchange.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/client/eventhub/{\b publisher.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/client/eventhub/{\b publisher.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/client/eventhub/{\b subscriber.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/client/eventhub/{\b subscriber.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/client/session/{\b session.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/client/session/{\b session.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/{\b vars.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/eventhub/{\b models.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/eventhub/{\b models.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/file_io/{\b file_io.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/file_io/{\b file_io.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/file_io/{\b inotify.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/file_io/{\b inotify.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/session/{\b models.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/session/{\b models.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/socket_io/{\b socket.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/common/socket_io/{\b socket.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/cpp-inquirer/{\b inquirer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/{\b Init.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/{\b Log.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/{\b Logger.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/{\b Record.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/{\b Severity.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/{\b Util.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/{\b WinApi.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Appenders/{\b AndroidAppender.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Appenders/{\b ArduinoAppender.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Appenders/{\b ColorConsoleAppender.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Appenders/{\b ConsoleAppender.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Appenders/{\b DebugOutputAppender.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Appenders/{\b DynamicAppender.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Appenders/{\b EventLogAppender.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Appenders/{\b IAppender.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Appenders/{\b RollingFileAppender.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Converters/{\b NativeEOLConverter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Converters/{\b UTF8Converter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Formatters/{\b CsvFormatter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Formatters/{\b FuncMessageFormatter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Formatters/{\b MessageOnlyFormatter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Formatters/{\b TxtFormatter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Helpers/{\b AscDump.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Helpers/{\b HexDump.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Helpers/{\b PrintVar.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Initializers/{\b ConsoleInitializer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/plog/Initializers/{\b RollingFileInitializer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/eventhub/{\b file_sync.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/eventhub/{\b file_sync.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/eventhub/{\b publisher.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/eventhub/{\b publisher.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/eventhub/{\b subscriber.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/eventhub/{\b subscriber.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/file_io/{\b file_io.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/file_io/{\b file_io.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/session/{\b models.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/session/{\b models.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/session/{\b session.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/session/{\b session.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/userland/{\b models.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/server/userland/{\b models.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
alx Namespace Reference\par \pard\plain 
{\tc\tcl2 \v alx}
{\xe \v alx}
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Inquirer}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Question}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum class {\b Type} \{ {\b text} = 0
, {\b integer} = 1
, {\b decimal} = 2
, {\b yesNo} = 3
, {\b confirm} = 4
, {\b options} = 5
, {\b regex} = 6
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v Type\:alx}
{\xe \v alx\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum class {\b alx::Type}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v text\:alx}
{\xe \v alx\:text}
{\qr text{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\cell }{\cell }{\row }
{\xe \v integer\:alx}
{\xe \v alx\:integer}
{\qr integer{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
\cell }{\cell }{\row }
{\xe \v decimal\:alx}
{\xe \v alx\:decimal}
{\qr decimal{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
\cell }{\cell }{\row }
{\xe \v yesNo\:alx}
{\xe \v alx\:yesNo}
{\qr yesNo{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
\cell }{\cell }{\row }
{\xe \v confirm\:alx}
{\xe \v alx\:confirm}
{\qr confirm{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
\cell }{\cell }{\row }
{\xe \v options\:alx}
{\xe \v alx\:options}
{\qr options{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\cell }{\cell }{\row }
{\xe \v regex\:alx}
{\xe \v alx\:regex}
{\qr regex{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 35} of file {\b inquirer.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog Namespace Reference\par \pard\plain 
{\tc\tcl2 \v plog}
{\xe \v plog}
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b detail}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b util}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AndroidAppender}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ArduinoAppender}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AscDump}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ColorConsoleAppender}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ConsoleAppender}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CsvFormatter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CsvFormatterImpl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CsvFormatterUtcTime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DebugOutputAppender}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DynamicAppender}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EventLogAppender}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EventLogAppenderRegistry}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FuncMessageFormatter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b HexDump}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b IAppender}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Logger}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MessageOnlyFormatter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NativeEOLConverter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Record}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RollingFileAppender}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TxtFormatter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TxtFormatterImpl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TxtFormatterUtcTime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UTF8Converter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b OutputStream} \{ {\b streamStdOut}
, {\b streamStdErr}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Severity} \{ {\b none} = 0
, {\b fatal} = 1
, {\b error} = 2
, {\b warning} = 3
, {\b info} = 4
, {\b debug} = 5
, {\b verbose} = 6
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b util::nostringstream} & {\b operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b AscDump} &{\b ascDump})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AscDump} {\b ascdump} ({\b const} {\b void} *{\b ptr}, {\b size_t} size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Container} > {\b AscDump} {\b ascdump} ({\b const} {\b Container} &{\b container})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T} , {\b size_t} N> {\b AscDump} {\b ascdump} ({\b const} {\b T}(&{\b arr})[{\b N}])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b util::nostringstream} & {\b operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b HexDump} &{\b hexDump})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HexDump} {\b hexdump} ({\b const} {\b void} *{\b ptr}, {\b size_t} size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Container} > {\b HexDump} {\b hexdump} ({\b const} {\b Container} &{\b container})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T} , {\b size_t} N> {\b HexDump} {\b hexdump} ({\b const} {\b T}(&{\b arr})[{\b N}])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b int} instanceId> {\b PLOG_LINKAGE_HIDDEN} {\b Logger}< {\b instanceId} > & {\b init} ({\b Severity} {\b maxSeverity}={\b none}, {\b IAppender} *{\b appender}={\b NULL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & {\b init} ({\b Severity} {\b maxSeverity}={\b none}, {\b IAppender} *{\b appender}={\b NULL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Formatter} , {\b int} instanceId> {\b PLOG_LINKAGE_HIDDEN} {\b Logger}< {\b instanceId} > & {\b init} ({\b Severity} {\b maxSeverity}, {\b OutputStream} {\b outputStream})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Formatter} > {\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & {\b init} ({\b Severity} {\b maxSeverity}, {\b OutputStream} {\b outputStream})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Formatter} , {\b int} instanceId> {\b PLOG_LINKAGE_HIDDEN} {\b Logger}< {\b instanceId} > & {\b init} ({\b Severity} {\b maxSeverity}, {\b const} {\b util::nchar} *{\b fileName}, {\b size_t} {\b maxFileSize}=0, {\b int} {\b maxFiles}=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Formatter} > {\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & {\b init} ({\b Severity} {\b maxSeverity}, {\b const} {\b util::nchar} *{\b fileName}, {\b size_t} {\b maxFileSize}=0, {\b int} {\b maxFiles}=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b int} instanceId> {\b Logger}< {\b instanceId} > & {\b init} ({\b Severity} {\b maxSeverity}, {\b const} {\b util::nchar} *{\b fileName}, {\b size_t} {\b maxFileSize}=0, {\b int} {\b maxFiles}=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & {\b init} ({\b Severity} {\b maxSeverity}, {\b const} {\b util::nchar} *{\b fileName}, {\b size_t} {\b maxFileSize}=0, {\b int} {\b maxFiles}=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b int} instanceId> {\b Logger}< {\b instanceId} > * {\b get} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > * {\b get} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b severityToString} ({\b Severity} {\b severity})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Severity} {\b severityFromString} ({\b const} {\b char} *{\b str})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v OutputStream\:plog}
{\xe \v plog\:OutputStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b enum} {\b plog::OutputStream}}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v streamStdOut\:plog}
{\xe \v plog\:streamStdOut}
{\qr streamStdOut{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\cell }{\cell }{\row }
{\xe \v streamStdErr\:plog}
{\xe \v plog\:streamStdErr}
{\qr streamStdErr{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 9} of file {\b ConsoleAppender.h}.}\par
}
{\xe \v Severity\:plog}
{\xe \v plog\:Severity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b enum} {\b plog::Severity}}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v none\:plog}
{\xe \v plog\:none}
{\qr none{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{\cell }{\row }
{\xe \v fatal\:plog}
{\xe \v plog\:fatal}
{\qr fatal{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\cell }{\cell }{\row }
{\xe \v error\:plog}
{\xe \v plog\:error}
{\qr error{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
\cell }{\cell }{\row }
{\xe \v warning\:plog}
{\xe \v plog\:warning}
{\qr warning{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
\cell }{\cell }{\row }
{\xe \v info\:plog}
{\xe \v plog\:info}
{\qr info{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
\cell }{\cell }{\row }
{\xe \v debug\:plog}
{\xe \v plog\:debug}
{\qr debug{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\cell }{\cell }{\row }
{\xe \v verbose\:plog}
{\xe \v plog\:verbose}
{\qr verbose{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 6} of file {\b Severity.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ascdump\:plog}
{\xe \v plog\:ascdump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Container} > {\b AscDump} plog::ascdump ({\b const} {\b Container} &  {\i container}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b AscDump.h}.}\par
}
{\xe \v ascdump\:plog}
{\xe \v plog\:ascdump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} , {\b size_t} N> {\b AscDump} plog::ascdump ({\b const} {\b T}(&)  {\i arr}[N]){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b AscDump.h}.}\par
}
{\xe \v ascdump\:plog}
{\xe \v plog\:ascdump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AscDump} plog::ascdump ({\b const} {\b void} *  {\i ptr}, {\b size_t}  {\i size}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b AscDump.h}.}\par
}
{\xe \v get\:plog}
{\xe \v plog\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b int} instanceId> {\b Logger}< {\b instanceId} > * plog::get (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b Logger.h}.}\par
}
{\xe \v get\:plog}
{\xe \v plog\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > * plog::get (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b Logger.h}.}\par
}
{\xe \v hexdump\:plog}
{\xe \v plog\:hexdump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Container} > {\b HexDump} plog::hexdump ({\b const} {\b Container} &  {\i container}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b HexDump.h}.}\par
}
{\xe \v hexdump\:plog}
{\xe \v plog\:hexdump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} , {\b size_t} N> {\b HexDump} plog::hexdump ({\b const} {\b T}(&)  {\i arr}[N]){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 78} of file {\b HexDump.h}.}\par
}
{\xe \v hexdump\:plog}
{\xe \v plog\:hexdump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HexDump} plog::hexdump ({\b const} {\b void} *  {\i ptr}, {\b size_t}  {\i size}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b HexDump.h}.}\par
}
{\xe \v init\:plog}
{\xe \v plog\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} , {\b int} instanceId> {\b PLOG_LINKAGE_HIDDEN} {\b Logger}< {\b instanceId} > & plog::init ({\b Severity}  {\i maxSeverity}, {\b const} {\b util::nchar} *  {\i fileName}, {\b size_t}  {\i maxFileSize} = {\f2 0}, {\b int}  {\i maxFiles} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b RollingFileInitializer.h}.}\par
}
{\xe \v init\:plog}
{\xe \v plog\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & plog::init ({\b Severity}  {\i maxSeverity}, {\b const} {\b util::nchar} *  {\i fileName}, {\b size_t}  {\i maxFileSize} = {\f2 0}, {\b int}  {\i maxFiles} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b RollingFileInitializer.h}.}\par
}
{\xe \v init\:plog}
{\xe \v plog\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b int} instanceId> {\b Logger}< {\b instanceId} > & plog::init ({\b Severity}  {\i maxSeverity}, {\b const} {\b util::nchar} *  {\i fileName}, {\b size_t}  {\i maxFileSize} = {\f2 0}, {\b int}  {\i maxFiles} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b RollingFileInitializer.h}.}\par
}
{\xe \v init\:plog}
{\xe \v plog\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & plog::init ({\b Severity}  {\i maxSeverity}, {\b const} {\b util::nchar} *  {\i fileName}, {\b size_t}  {\i maxFileSize} = {\f2 0}, {\b int}  {\i maxFiles} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b RollingFileInitializer.h}.}\par
}
{\xe \v init\:plog}
{\xe \v plog\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} , {\b int} instanceId> {\b PLOG_LINKAGE_HIDDEN} {\b Logger}< {\b instanceId} > & plog::init ({\b Severity}  {\i maxSeverity}, {\b OutputStream}  {\i outputStream}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b ConsoleInitializer.h}.}\par
}
{\xe \v init\:plog}
{\xe \v plog\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & plog::init ({\b Severity}  {\i maxSeverity}, {\b OutputStream}  {\i outputStream}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b ConsoleInitializer.h}.}\par
}
{\xe \v init\:plog}
{\xe \v plog\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b int} instanceId> {\b PLOG_LINKAGE_HIDDEN} {\b Logger}< {\b instanceId} > & plog::init ({\b Severity}  {\i maxSeverity} = {\f2 {\b none}}, {\b IAppender} *  {\i appender} = {\f2 {\b NULL}}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b Init.h}.}\par
}
{\xe \v init\:plog}
{\xe \v plog\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & plog::init ({\b Severity}  {\i maxSeverity} = {\f2 {\b none}}, {\b IAppender} *  {\i appender} = {\f2 {\b NULL}}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b Init.h}.}\par
}
{\xe \v operator<<\:plog}
{\xe \v plog\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b util::nostringstream} & {\b plog::operator}<< ({\b util::nostringstream} &  {\i stream}, {\b const} {\b AscDump} &  {\i ascDump}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b AscDump.h}.}\par
}
{\xe \v operator<<\:plog}
{\xe \v plog\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b util::nostringstream} & {\b plog::operator}<< ({\b util::nostringstream} &  {\i stream}, {\b const} {\b HexDump} &  {\i hexDump}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b HexDump.h}.}\par
}
{\xe \v severityFromString\:plog}
{\xe \v plog\:severityFromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Severity} plog::severityFromString ({\b const} {\b char} *  {\i str}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b Severity.h}.}\par
}
{\xe \v severityToString\:plog}
{\xe \v plog\:severityToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b char} * plog::severityToString ({\b Severity}  {\i severity}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b Severity.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail Namespace Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail}
{\xe \v plog::detail}
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b meta}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b char} *{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b operator<<} ({\b util::nostringstream} &{\b stream}, {\b char} *{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} std::string &{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T1} , {\b class} {\b T2} > {\b void} {\b operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} std::pair< {\b T1}, {\b T2} > &{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T} > {\b meta::enableIf}< {\b meta::isConvertibleToNString}< {\b T} >::value, {\b void} >::type {\b operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b T} &{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T} > {\b meta::enableIf}< {\b meta::isContainer}< {\b T} >::value &&!{\b meta::isConvertibleToNString}< {\b T} >::value &&!{\b meta::isConvertibleToString}< {\b T} >::value &&!{\b meta::isFilesystemPath}< {\b T} >::value, {\b void} >::type {\b operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b T} &{\b data})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v operator<<\:plog::detail}
{\xe \v plog::detail\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} plog::detail::operator<< ({\b util::nostringstream} &  {\i stream}, {\b char} *  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 139} of file {\b Record.h}.}\par
}
{\xe \v operator<<\:plog::detail}
{\xe \v plog::detail\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} plog::detail::operator<< ({\b util::nostringstream} &  {\i stream}, {\b const} {\b char} *  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 118} of file {\b Record.h}.}\par
}
{\xe \v operator<<\:plog::detail}
{\xe \v plog::detail\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T1} , {\b class} {\b T2} > {\b void} plog::detail::operator<< ({\b util::nostringstream} &  {\i stream}, {\b const} std::pair< {\b T1}, {\b T2} > &  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 162} of file {\b Record.h}.}\par
}
{\xe \v operator<<\:plog::detail}
{\xe \v plog::detail\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} plog::detail::operator<< ({\b util::nostringstream} &  {\i stream}, {\b const} std::string &  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 144} of file {\b Record.h}.}\par
}
{\xe \v operator<<\:plog::detail}
{\xe \v plog::detail\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > {\b meta::enableIf}< {\b meta::isConvertibleToNString}< {\b T} >::value, {\b void} >::type plog::detail::operator<< ({\b util::nostringstream} &  {\i stream}, {\b const} {\b T} &  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 173} of file {\b Record.h}.}\par
}
{\xe \v operator<<\:plog::detail}
{\xe \v plog::detail\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > {\b meta::enableIf}< {\b meta::isContainer}< {\b T} >::value &&!{\b meta::isConvertibleToNString}< {\b T} >::value &&!{\b meta::isConvertibleToString}< {\b T} >::value &&!{\b meta::isFilesystemPath}< {\b T} >::value, {\b void} >::type plog::detail::operator<< ({\b util::nostringstream} &  {\i stream}, {\b const} {\b T} &  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 183} of file {\b Record.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail::meta Namespace Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail::meta}
{\xe \v plog::detail::meta}
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b enableIf}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b enableIf< true, T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b isContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b isConvertible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b isConvertibleToNString}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b isConvertibleToString}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b isFilesystemPath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b No}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yes}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T} > {\b T} & {\b declval} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v declval\:plog::detail::meta}
{\xe \v plog::detail::meta\:declval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > {\b T} & plog::detail::meta::declval (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b Record.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::util Namespace Reference\par \pard\plain 
{\tc\tcl2 \v plog::util}
{\xe \v plog::util}
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b File}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Mutex}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MutexLock}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NonCopyable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Singleton}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Time}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} std::string {\b nstring}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} std::ostringstream {\b nostringstream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} std::istringstream {\b nistringstream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} std::ostream {\b nostream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b char} {\b nchar}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b localtime_s} ({\b struct} {\b tm} *{\b t}, {\b const} {\b time_t} *time)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b gmtime_s} ({\b struct} {\b tm} *{\b t}, {\b const} {\b time_t} *time)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b ftime} ({\b Time} *{\b t})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b unsigned} {\b int} {\b gettid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b vasprintf} ({\b char} **{\b strp}, {\b const} {\b char} *format, {\b va_list} {\b ap})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b processFuncName} ({\b const} {\b char} *{\b func})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b nchar} * {\b findExtensionDot} ({\b const} {\b nchar} *{\b fileName})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b splitFileName} ({\b const} {\b nchar} *{\b fileName}, {\b nstring} &{\b fileNameNoExt}, {\b nstring} &{\b fileExt})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v nchar\:plog::util}
{\xe \v plog::util\:nchar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b char} {\b plog::util::nchar}}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 112} of file {\b Util.h}.}\par
}
{\xe \v nistringstream\:plog::util}
{\xe \v plog::util\:nistringstream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} std::istringstream {\b plog::util::nistringstream}}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 110} of file {\b Util.h}.}\par
}
{\xe \v nostream\:plog::util}
{\xe \v plog::util\:nostream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} std::ostream {\b plog::util::nostream}}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 111} of file {\b Util.h}.}\par
}
{\xe \v nostringstream\:plog::util}
{\xe \v plog::util\:nostringstream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} std::ostringstream {\b plog::util::nostringstream}}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 109} of file {\b Util.h}.}\par
}
{\xe \v nstring\:plog::util}
{\xe \v plog::util\:nstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} std::string {\b plog::util::nstring}}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 108} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v findExtensionDot\:plog::util}
{\xe \v plog::util\:findExtensionDot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b nchar} * plog::util::findExtensionDot ({\b const} {\b nchar} *  {\i fileName}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 371} of file {\b Util.h}.}\par
}
{\xe \v ftime\:plog::util}
{\xe \v plog::util\:ftime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} plog::util::ftime ({\b Time} *  {\i t}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 161} of file {\b Util.h}.}\par
}
{\xe \v gettid\:plog::util}
{\xe \v plog::util\:gettid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b unsigned} {\b int} plog::util::gettid (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 171} of file {\b Util.h}.}\par
}
{\xe \v gmtime_s\:plog::util}
{\xe \v plog::util\:gmtime_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} plog::util::gmtime_s ({\b struct} {\b tm} *  {\i t}, {\b const} {\b time_t} *  {\i time}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 134} of file {\b Util.h}.}\par
}
{\xe \v localtime_s\:plog::util}
{\xe \v plog::util\:localtime_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} plog::util::localtime_s ({\b struct} {\b tm} *  {\i t}, {\b const} {\b time_t} *  {\i time}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 121} of file {\b Util.h}.}\par
}
{\xe \v processFuncName\:plog::util}
{\xe \v plog::util\:processFuncName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string plog::util::processFuncName ({\b const} {\b char} *  {\i func}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 336} of file {\b Util.h}.}\par
}
{\xe \v splitFileName\:plog::util}
{\xe \v plog::util\:splitFileName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} plog::util::splitFileName ({\b const} {\b nchar} *  {\i fileName}, {\b nstring} &  {\i fileNameNoExt}, {\b nstring} &  {\i fileExt}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 380} of file {\b Util.h}.}\par
}
{\xe \v vasprintf\:plog::util}
{\xe \v plog::util\:vasprintf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} plog::util::vasprintf ({\b char} **  {\i strp}, {\b const} {\b char} *  {\i format}, {\b va_list}  {\i ap}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 193} of file {\b Util.h}.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::AndroidAppender< Formatter > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::AndroidAppender< Formatter >}
{\xe \v plog::AndroidAppender< Formatter >}
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
\par
{
{\f2 #include <AndroidAppender.h>}}\par
Inheritance diagram for plog::AndroidAppender< Formatter >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_android_appender.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AndroidAppender} ({\b const} {\b char} *{\b tag})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b write} ({\b const} {\b Record} &{\b record}) {\b PLOG_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::IAppender}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~IAppender} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b Formatter}>\par
class plog::AndroidAppender< Formatter >\par
}
\par
{
Definition at line {\b 8} of file {\b AndroidAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AndroidAppender\:plog::AndroidAppender< Formatter >}
{\xe \v plog::AndroidAppender< Formatter >\:AndroidAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b plog::AndroidAppender}< {\b Formatter} >::AndroidAppender ({\b const} {\b char} *  {\i tag}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b AndroidAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v write\:plog::AndroidAppender< Formatter >}
{\xe \v plog::AndroidAppender< Formatter >\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b virtual} {\b void} {\b plog::AndroidAppender}< {\b Formatter} >::write ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b plog::IAppender} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 15} of file {\b AndroidAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Appenders/{\b AndroidAppender.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::ArduinoAppender< Formatter > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::ArduinoAppender< Formatter >}
{\xe \v plog::ArduinoAppender< Formatter >}
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
\par
{
{\f2 #include <ArduinoAppender.h>}}\par
Inheritance diagram for plog::ArduinoAppender< Formatter >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_arduino_appender.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ArduinoAppender} ({\b Stream} &{\b stream})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b write} ({\b const} {\b Record} &{\b record}) {\b PLOG_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::IAppender}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~IAppender} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b Formatter}>\par
class plog::ArduinoAppender< Formatter >\par
}
\par
{
Definition at line {\b 8} of file {\b ArduinoAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ArduinoAppender\:plog::ArduinoAppender< Formatter >}
{\xe \v plog::ArduinoAppender< Formatter >\:ArduinoAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b plog::ArduinoAppender}< {\b Formatter} >::ArduinoAppender ({\b Stream} &  {\i stream}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b ArduinoAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v write\:plog::ArduinoAppender< Formatter >}
{\xe \v plog::ArduinoAppender< Formatter >\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b virtual} {\b void} {\b plog::ArduinoAppender}< {\b Formatter} >::write ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b plog::IAppender} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 15} of file {\b ArduinoAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Appenders/{\b ArduinoAppender.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::AscDump Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::AscDump}
{\xe \v plog::AscDump}
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\par
{
{\f2 #include <AscDump.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AscDump} ({\b const} {\b void} *{\b ptr}, {\b size_t} size)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b util::nostringstream} & {\b operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b AscDump} &{\b ascDump})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b AscDump.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AscDump\:plog::AscDump}
{\xe \v plog::AscDump\:AscDump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plog::AscDump::AscDump ({\b const} {\b void} *  {\i ptr}, {\b size_t}  {\i size}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b AscDump.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v operator<<\:plog::AscDump}
{\xe \v plog::AscDump\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b util::nostringstream} & {\b operator}<< ({\b util::nostringstream} &  {\i stream}, {\b const} {\b AscDump} &  {\i ascDump}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b AscDump.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Helpers/{\b AscDump.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientContext Class Reference\par \pard\plain 
{\tc\tcl2 \v ClientContext}
{\xe \v ClientContext}
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\par
{
{\f2 #include <session.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientContext} (string {\b server_addr}, int {\b server_port}, string {\b username}, string {\b sync_dir}, {\b SessionType} {\b session_type})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b get_folder_path} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b server_addr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b server_port}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b username}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionType} {\b session_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b sync_dir}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 10} of file {\b session.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ClientContext\:ClientContext}
{\xe \v ClientContext\:ClientContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ClientContext::ClientContext (string  {\i server_addr}, int  {\i server_port}, string  {\i username}, string  {\i sync_dir}, {\b SessionType}  {\i session_type})}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b session.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_folder_path\:ClientContext}
{\xe \v ClientContext\:get_folder_path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string ClientContext::get_folder_path (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b session.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v server_addr\:ClientContext}
{\xe \v ClientContext\:server_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string ClientContext::server_addr}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b session.hpp}.}\par
}
{\xe \v server_port\:ClientContext}
{\xe \v ClientContext\:server_port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ClientContext::server_port}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b session.hpp}.}\par
}
{\xe \v session_type\:ClientContext}
{\xe \v ClientContext\:session_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionType} ClientContext::session_type}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b session.hpp}.}\par
}
{\xe \v sync_dir\:ClientContext}
{\xe \v ClientContext\:sync_dir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string ClientContext::sync_dir}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b session.hpp}.}\par
}
{\xe \v username\:ClientContext}
{\xe \v ClientContext\:username}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string ClientContext::username}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b session.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/session/{\b session.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/session/{\b session.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientFileSync Class Reference\par \pard\plain 
{\tc\tcl2 \v ClientFileSync}
{\xe \v ClientFileSync}
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
\par
{
{\f2 #include <file_exchange.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientFileSync} (shared_ptr< {\b ClientContext} > context, shared_ptr< {\b Socket} > socket)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loop} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_event} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 9} of file {\b file_exchange.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ClientFileSync\:ClientFileSync}
{\xe \v ClientFileSync\:ClientFileSync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ClientFileSync::ClientFileSync (shared_ptr< {\b ClientContext} >  {\i context}, shared_ptr< {\b Socket} >  {\i socket})}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this->file_handler = make_shared<FileHandler>();\par
}{
Definition at line {\b 10} of file {\b file_exchange.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_event\:ClientFileSync}
{\xe \v ClientFileSync\:get_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ClientFileSync::get_event ()}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v loop\:ClientFileSync}
{\xe \v ClientFileSync\:loop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ClientFileSync::loop ()}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b file_exchange.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/eventhub/{\b file_exchange.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/eventhub/{\b file_exchange.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientPublisher Class Reference\par \pard\plain 
{\tc\tcl2 \v ClientPublisher}
{\xe \v ClientPublisher}
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\par
{
{\f2 #include <publisher.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientPublisher} (shared_ptr< {\b ClientContext} > context, shared_ptr< {\b Socket} > socket)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loop} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b send_event} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 11} of file {\b publisher.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ClientPublisher\:ClientPublisher}
{\xe \v ClientPublisher\:ClientPublisher}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ClientPublisher::ClientPublisher (shared_ptr< {\b ClientContext} >  {\i context}, shared_ptr< {\b Socket} >  {\i socket})}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 91} of file {\b publisher.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v loop\:ClientPublisher}
{\xe \v ClientPublisher\:loop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ClientPublisher::loop ()}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 103} of file {\b publisher.cpp}.}\par
}
{\xe \v send_event\:ClientPublisher}
{\xe \v ClientPublisher\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ClientPublisher::send_event ()}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 135} of file {\b publisher.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/eventhub/{\b publisher.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/eventhub/{\b publisher.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientSession Class Reference\par \pard\plain 
{\tc\tcl2 \v ClientSession}
{\xe \v ClientSession}
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
\par
{
{\f2 #include <session.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientSession} (shared_ptr< {\b ClientContext} > context, shared_ptr< {\b Socket} > socket)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setup} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b run} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 32} of file {\b session.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ClientSession\:ClientSession}
{\xe \v ClientSession\:ClientSession}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ClientSession::ClientSession (shared_ptr< {\b ClientContext} >  {\i context}, shared_ptr< {\b Socket} >  {\i socket})}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 73} of file {\b session.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v run\:ClientSession}
{\xe \v ClientSession\:run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ClientSession::run ()}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 108} of file {\b session.cpp}.}\par
}
{\xe \v setup\:ClientSession}
{\xe \v ClientSession\:setup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ClientSession::setup ()}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b session.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/session/{\b session.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/session/{\b session.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientSessionManager Class Reference\par \pard\plain 
{\tc\tcl2 \v ClientSessionManager}
{\xe \v ClientSessionManager}
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
\par
{
{\f2 #include <session.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientSessionManager} (string address, int port, string username)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void * {\b handle_session} (void *request)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 26} of file {\b session.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ClientSessionManager\:ClientSessionManager}
{\xe \v ClientSessionManager\:ClientSessionManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ClientSessionManager::ClientSessionManager (string  {\i address}, int  {\i port}, string  {\i username})}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b session.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v handle_session\:ClientSessionManager}
{\xe \v ClientSessionManager\:handle_session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * ClientSessionManager::handle_session (void *  {\i request}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b session.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/session/{\b session.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/session/{\b session.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ClientSubscriber Class Reference\par \pard\plain 
{\tc\tcl2 \v ClientSubscriber}
{\xe \v ClientSubscriber}
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
\par
{
{\f2 #include <subscriber.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClientSubscriber} (shared_ptr< {\b ClientContext} > context, shared_ptr< {\b Socket} > socket)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loop} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_event} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 9} of file {\b subscriber.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ClientSubscriber\:ClientSubscriber}
{\xe \v ClientSubscriber\:ClientSubscriber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ClientSubscriber::ClientSubscriber (shared_ptr< {\b ClientContext} >  {\i context}, shared_ptr< {\b Socket} >  {\i socket})}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b subscriber.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_event\:ClientSubscriber}
{\xe \v ClientSubscriber\:get_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ClientSubscriber::get_event ()}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v loop\:ClientSubscriber}
{\xe \v ClientSubscriber\:loop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ClientSubscriber::loop ()}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b subscriber.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/eventhub/{\b subscriber.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/client/eventhub/{\b subscriber.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::ColorConsoleAppender< Formatter > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::ColorConsoleAppender< Formatter >}
{\xe \v plog::ColorConsoleAppender< Formatter >}
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
\par
{
{\f2 #include <ColorConsoleAppender.h>}}\par
Inheritance diagram for plog::ColorConsoleAppender< Formatter >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_color_console_appender.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ColorConsoleAppender} ({\b OutputStream} {\b outStream}={\b streamStdOut})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b write} ({\b const} {\b Record} &{\b record}) {\b PLOG_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::ConsoleAppender< Formatter >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleAppender} ({\b OutputStream} {\b outStream}={\b streamStdOut})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::IAppender}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~IAppender} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b setColor} ({\b Severity} {\b severity})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b resetColor} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Member Functions inherited from {\b plog::ConsoleAppender< Formatter >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b writestr} ({\b const} {\b util::nstring} &{\b str})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Protected Attributes inherited from {\b plog::ConsoleAppender< Formatter >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b util::Mutex} {\b m_mutex}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b bool} {\b m_isatty}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b m_outputStream}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b Formatter}>\par
class plog::ColorConsoleAppender< Formatter >\par
}
\par
{
Definition at line {\b 8} of file {\b ColorConsoleAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ColorConsoleAppender\:plog::ColorConsoleAppender< Formatter >}
{\xe \v plog::ColorConsoleAppender< Formatter >\:ColorConsoleAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b plog::ColorConsoleAppender}< {\b Formatter} >::ColorConsoleAppender ({\b OutputStream}  {\i outStream} = {\f2 {\b streamStdOut}}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b ColorConsoleAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v resetColor\:plog::ColorConsoleAppender< Formatter >}
{\xe \v plog::ColorConsoleAppender< Formatter >\:resetColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b void} {\b plog::ColorConsoleAppender}< {\b Formatter} >::resetColor (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 91} of file {\b ColorConsoleAppender.h}.}\par
}
{\xe \v setColor\:plog::ColorConsoleAppender< Formatter >}
{\xe \v plog::ColorConsoleAppender< Formatter >\:setColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b void} {\b plog::ColorConsoleAppender}< {\b Formatter} >::setColor ({\b Severity}  {\i severity}){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b ColorConsoleAppender.h}.}\par
}
{\xe \v write\:plog::ColorConsoleAppender< Formatter >}
{\xe \v plog::ColorConsoleAppender< Formatter >\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b virtual} {\b void} {\b plog::ColorConsoleAppender}< {\b Formatter} >::write ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b plog::ConsoleAppender< Formatter >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 33} of file {\b ColorConsoleAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Appenders/{\b ColorConsoleAppender.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Command Class Reference\par \pard\plain 
{\tc\tcl2 \v Command}
{\xe \v Command}
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
\par
{
{\f2 #include <models.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandType} {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 35} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v type\:Command}
{\xe \v Command\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CommandType} Command::type}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/eventhub/{\b models.hpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Connection Class Reference\par \pard\plain 
{\tc\tcl2 \v Connection}
{\xe \v Connection}
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
\par
{
{\f2 #include <models.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Connection} (char *{\b address}, int {\b port}, int {\b channel}, int *{\b pipe_fd})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_thread_id} (pthread_t *{\b thread_id})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b get_full_address} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_session_type} ({\b SessionType} {\b session_type})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_conection_info} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionType} {\b session_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b address}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b port}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pthread_t * {\b thread_id}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b channel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pipe_fd} [2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 15} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Connection\:Connection}
{\xe \v Connection\:Connection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Connection::Connection (char *  {\i address}, int  {\i port}, int  {\i channel}, int *  {\i pipe_fd})}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_conection_info\:Connection}
{\xe \v Connection\:get_conection_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Connection::get_conection_info ()}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b models.cpp}.}\par
}
{\xe \v get_full_address\:Connection}
{\xe \v Connection\:get_full_address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Connection::get_full_address ()}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b models.cpp}.}\par
}
{\xe \v set_session_type\:Connection}
{\xe \v Connection\:set_session_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Connection::set_session_type ({\b SessionType}  {\i session_type})}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b models.cpp}.}\par
}
{\xe \v set_thread_id\:Connection}
{\xe \v Connection\:set_thread_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Connection::set_thread_id (pthread_t *  {\i thread_id})}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v address\:Connection}
{\xe \v Connection\:address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Connection::address}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b models.hpp}.}\par
}
{\xe \v channel\:Connection}
{\xe \v Connection\:channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Connection::channel}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b models.hpp}.}\par
}
{\xe \v pipe_fd\:Connection}
{\xe \v Connection\:pipe_fd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Connection::pipe_fd[2]}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b models.hpp}.}\par
}
{\xe \v port\:Connection}
{\xe \v Connection\:port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Connection::port}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b models.hpp}.}\par
}
{\xe \v session_type\:Connection}
{\xe \v Connection\:session_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionType} Connection::session_type}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b models.hpp}.}\par
}
{\xe \v thread_id\:Connection}
{\xe \v Connection\:thread_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pthread_t* Connection::thread_id}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/session/{\b models.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/session/{\b models.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::ConsoleAppender< Formatter > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::ConsoleAppender< Formatter >}
{\xe \v plog::ConsoleAppender< Formatter >}
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
\par
{
{\f2 #include <ConsoleAppender.h>}}\par
Inheritance diagram for plog::ConsoleAppender< Formatter >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_console_appender.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleAppender} ({\b OutputStream} {\b outStream}={\b streamStdOut})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b write} ({\b const} {\b Record} &{\b record}) {\b PLOG_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::IAppender}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~IAppender} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b writestr} ({\b const} {\b util::nstring} &{\b str})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b util::Mutex} {\b m_mutex}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b bool} {\b m_isatty}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b m_outputStream}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b Formatter}>\par
class plog::ConsoleAppender< Formatter >\par
}
\par
{
Definition at line {\b 16} of file {\b ConsoleAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ConsoleAppender\:plog::ConsoleAppender< Formatter >}
{\xe \v plog::ConsoleAppender< Formatter >\:ConsoleAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b plog::ConsoleAppender}< {\b Formatter} >::ConsoleAppender ({\b OutputStream}  {\i outStream} = {\f2 {\b streamStdOut}}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b ConsoleAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v write\:plog::ConsoleAppender< Formatter >}
{\xe \v plog::ConsoleAppender< Formatter >\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b virtual} {\b void} {\b plog::ConsoleAppender}< {\b Formatter} >::write ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b plog::IAppender} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b plog::ColorConsoleAppender< Formatter >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 40} of file {\b ConsoleAppender.h}.}\par
}
{\xe \v writestr\:plog::ConsoleAppender< Formatter >}
{\xe \v plog::ConsoleAppender< Formatter >\:writestr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b void} {\b plog::ConsoleAppender}< {\b Formatter} >::writestr ({\b const} {\b util::nstring} &  {\i str}){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b ConsoleAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_isatty\:plog::ConsoleAppender< Formatter >}
{\xe \v plog::ConsoleAppender< Formatter >\:m_isatty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b const} {\b bool} {\b plog::ConsoleAppender}< {\b Formatter} >::m_isatty{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b ConsoleAppender.h}.}\par
}
{\xe \v m_mutex\:plog::ConsoleAppender< Formatter >}
{\xe \v plog::ConsoleAppender< Formatter >\:m_mutex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b util::Mutex} {\b plog::ConsoleAppender}< {\b Formatter} >::m_mutex{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b ConsoleAppender.h}.}\par
}
{\xe \v m_outputStream\:plog::ConsoleAppender< Formatter >}
{\xe \v plog::ConsoleAppender< Formatter >\:m_outputStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > std::ostream& {\b plog::ConsoleAppender}< {\b Formatter} >::m_outputStream{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 78} of file {\b ConsoleAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Appenders/{\b ConsoleAppender.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::CsvFormatter Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::CsvFormatter}
{\xe \v plog::CsvFormatter}
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
\par
{
{\f2 #include <CsvFormatter.h>}}\par
Inheritance diagram for plog::CsvFormatter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_csv_formatter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b plog::CsvFormatterImpl< false >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b header} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b format} ({\b const} {\b Record} &{\b record})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Attributes inherited from {\b plog::CsvFormatterImpl< false >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b size_t} {\b kMaxMessageSize}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 55} of file {\b CsvFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Formatters/{\b CsvFormatter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::CsvFormatterImpl< useUtcTime > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::CsvFormatterImpl< useUtcTime >}
{\xe \v plog::CsvFormatterImpl< useUtcTime >}
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
\par
{
{\f2 #include <CsvFormatter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b header} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b format} ({\b const} {\b Record} &{\b record})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b size_t} {\b kMaxMessageSize} = 32000\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b bool} useUtcTime>\par
class plog::CsvFormatterImpl< useUtcTime >\par
}
\par
{
Definition at line {\b 9} of file {\b CsvFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v format\:plog::CsvFormatterImpl< useUtcTime >}
{\xe \v plog::CsvFormatterImpl< useUtcTime >\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b bool} useUtcTime> {\b static} {\b util::nstring} {\b plog::CsvFormatterImpl}< {\b useUtcTime} >::format ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b CsvFormatter.h}.}\par
}
{\xe \v header\:plog::CsvFormatterImpl< useUtcTime >}
{\xe \v plog::CsvFormatterImpl< useUtcTime >\:header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b bool} useUtcTime> {\b static} {\b util::nstring} {\b plog::CsvFormatterImpl}< {\b useUtcTime} >::header (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b CsvFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v kMaxMessageSize\:plog::CsvFormatterImpl< useUtcTime >}
{\xe \v plog::CsvFormatterImpl< useUtcTime >\:kMaxMessageSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b bool} useUtcTime> {\b const} {\b size_t} {\b plog::CsvFormatterImpl}< {\b useUtcTime} >::kMaxMessageSize = 32000{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b CsvFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Formatters/{\b CsvFormatter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::CsvFormatterUtcTime Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::CsvFormatterUtcTime}
{\xe \v plog::CsvFormatterUtcTime}
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
\par
{
{\f2 #include <CsvFormatter.h>}}\par
Inheritance diagram for plog::CsvFormatterUtcTime:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_csv_formatter_utc_time.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b plog::CsvFormatterImpl< true >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b header} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b format} ({\b const} {\b Record} &{\b record})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Attributes inherited from {\b plog::CsvFormatterImpl< true >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b size_t} {\b kMaxMessageSize}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 56} of file {\b CsvFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Formatters/{\b CsvFormatter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::DebugOutputAppender< Formatter > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::DebugOutputAppender< Formatter >}
{\xe \v plog::DebugOutputAppender< Formatter >}
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
\par
{
{\f2 #include <DebugOutputAppender.h>}}\par
Inheritance diagram for plog::DebugOutputAppender< Formatter >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_debug_output_appender.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b write} ({\b const} {\b Record} &{\b record}) {\b PLOG_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::IAppender}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~IAppender} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b Formatter}>\par
class plog::DebugOutputAppender< Formatter >\par
}
\par
{
Definition at line {\b 8} of file {\b DebugOutputAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v write\:plog::DebugOutputAppender< Formatter >}
{\xe \v plog::DebugOutputAppender< Formatter >\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b virtual} {\b void} {\b plog::DebugOutputAppender}< {\b Formatter} >::write ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b plog::IAppender} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 11} of file {\b DebugOutputAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Appenders/{\b DebugOutputAppender.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Device Class Reference\par \pard\plain 
{\tc\tcl2 \v Device}
{\xe \v Device}
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
\par
{
{\f2 #include <models.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Device} (const string {\b username}, shared_ptr< {\b Connection} > connection)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b address}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b username}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map< int, shared_ptr< {\b Connection} > > {\b connections}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 14} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Device\:Device}
{\xe \v Device\:Device}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Device::Device (const string  {\i username}, shared_ptr< {\b Connection} >  {\i connection})}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v address\:Device}
{\xe \v Device\:address}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Device::address}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b models.hpp}.}\par
}
{\xe \v connections\:Device}
{\xe \v Device\:connections}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
map<int, shared_ptr<{\b Connection}> > Device::connections}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b models.hpp}.}\par
}
{\xe \v username\:Device}
{\xe \v Device\:username}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Device::username}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/userland/{\b models.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/userland/{\b models.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::DynamicAppender Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::DynamicAppender}
{\xe \v plog::DynamicAppender}
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
\par
{
{\f2 #include <DynamicAppender.h>}}\par
Inheritance diagram for plog::DynamicAppender:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_dynamic_appender.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DynamicAppender} & {\b addAppender} ({\b IAppender} *{\b appender})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DynamicAppender} & {\b removeAppender} ({\b IAppender} *{\b appender})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b write} ({\b const} {\b Record} &{\b record}) {\b PLOG_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::IAppender}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~IAppender} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b DynamicAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addAppender\:plog::DynamicAppender}
{\xe \v plog::DynamicAppender\:addAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DynamicAppender} & plog::DynamicAppender::addAppender ({\b IAppender} *  {\i appender}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b DynamicAppender.h}.}\par
}
{\xe \v removeAppender\:plog::DynamicAppender}
{\xe \v plog::DynamicAppender\:removeAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DynamicAppender} & plog::DynamicAppender::removeAppender ({\b IAppender} *  {\i appender}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b DynamicAppender.h}.}\par
}
{\xe \v write\:plog::DynamicAppender}
{\xe \v plog::DynamicAppender\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b void} plog::DynamicAppender::write ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b plog::IAppender} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 28} of file {\b DynamicAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Appenders/{\b DynamicAppender.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail::meta::enableIf< B, T > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail::meta::enableIf< B, T >}
{\xe \v plog::detail::meta::enableIf< B, T >}
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
\par
{
{\f2 #include <Record.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b bool} B, {\b class} {\b T} = void>\par
struct plog::detail::meta::enableIf< B, T >\par
}
\par
{
Definition at line {\b 27} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Record.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail::meta::enableIf< true, T > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail::meta::enableIf< true, T >}
{\xe \v plog::detail::meta::enableIf< true, T >}
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
\par
{
{\f2 #include <Record.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b T}>\par
struct plog::detail::meta::enableIf< true, T >\par
}
\par
{
Definition at line {\b 30} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Typedef Documentation\par
\pard\plain 
{\xe \v type\:plog::detail::meta::enableIf< true, T >}
{\xe \v plog::detail::meta::enableIf< true, T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > {\b typedef} {\b T} {\b plog::detail::meta::enableIf}< {\b true}, {\b T} >::type}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Record.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Event Class Reference\par \pard\plain 
{\tc\tcl2 \v Event}
{\xe \v Event}
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
\par
{
{\f2 #include <models.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Event} (uint8_t *bytes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Event} ({\b EventType} {\b type}, string {\b message})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b send} (shared_ptr< {\b Socket} >, int channel)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EventType} {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b message}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 40} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Event\:Event}
{\xe \v Event\:Event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Event::Event (uint8_t *  {\i bytes})}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b models.cpp}.}\par
}
{\xe \v Event\:Event}
{\xe \v Event\:Event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Event::Event ({\b EventType}  {\i type}, string  {\i message})}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v send\:Event}
{\xe \v Event\:send}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Event::send (shared_ptr< {\b Socket} >  {\i socket}, int  {\i channel})}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PLOGD << "Encoding msg:  " << message_buf.get() << endl;\par
}{
Definition at line {\b 40} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v message\:Event}
{\xe \v Event\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Event::message}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b models.hpp}.}\par
}
{\xe \v type\:Event}
{\xe \v Event\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EventType} Event::type}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/eventhub/{\b models.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/eventhub/{\b models.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::EventLogAppender< Formatter > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::EventLogAppender< Formatter >}
{\xe \v plog::EventLogAppender< Formatter >}
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
\par
{
{\f2 #include <EventLogAppender.h>}}\par
Inheritance diagram for plog::EventLogAppender< Formatter >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_event_log_appender.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EventLogAppender} ({\b const} {\b util::nchar} *{\b sourceName})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~EventLogAppender} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b write} ({\b const} {\b Record} &{\b record}) {\b PLOG_OVERRIDE}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::IAppender}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~IAppender} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b Formatter}>\par
class plog::EventLogAppender< Formatter >\par
}
\par
{
Definition at line {\b 8} of file {\b EventLogAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EventLogAppender\:plog::EventLogAppender< Formatter >}
{\xe \v plog::EventLogAppender< Formatter >\:EventLogAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b plog::EventLogAppender}< {\b Formatter} >::EventLogAppender ({\b const} {\b util::nchar} *  {\i sourceName}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b EventLogAppender.h}.}\par
}
{\xe \v ~EventLogAppender\:plog::EventLogAppender< Formatter >}
{\xe \v plog::EventLogAppender< Formatter >\:~EventLogAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b plog::EventLogAppender}< {\b Formatter} >::~{\b EventLogAppender} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b EventLogAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v write\:plog::EventLogAppender< Formatter >}
{\xe \v plog::EventLogAppender< Formatter >\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} > {\b virtual} {\b void} {\b plog::EventLogAppender}< {\b Formatter} >::write ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b plog::IAppender} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 20} of file {\b EventLogAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Appenders/{\b EventLogAppender.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::EventLogAppenderRegistry Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::EventLogAppenderRegistry}
{\xe \v plog::EventLogAppenderRegistry}
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
\par
{
{\f2 #include <EventLogAppender.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b add} ({\b const} {\b util::nchar} *{\b sourceName}, {\b const} {\b util::nchar} *{\b logName}={\b PLOG_NSTR}("Application"))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b exists} ({\b const} {\b util::nchar} *{\b sourceName}, {\b const} {\b util::nchar} *{\b logName}={\b PLOG_NSTR}("Application"))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b void} {\b remove} ({\b const} {\b util::nchar} *{\b sourceName}, {\b const} {\b util::nchar} *{\b logName}={\b PLOG_NSTR}("Application"))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 58} of file {\b EventLogAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v add\:plog::EventLogAppenderRegistry}
{\xe \v plog::EventLogAppenderRegistry\:add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} plog::EventLogAppenderRegistry::add ({\b const} {\b util::nchar} *  {\i sourceName}, {\b const} {\b util::nchar} *  {\i logName} = {\f2 {\b PLOG_NSTR}("Application")}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 61} of file {\b EventLogAppender.h}.}\par
}
{\xe \v exists\:plog::EventLogAppenderRegistry}
{\xe \v plog::EventLogAppenderRegistry\:exists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} plog::EventLogAppenderRegistry::exists ({\b const} {\b util::nchar} *  {\i sourceName}, {\b const} {\b util::nchar} *  {\i logName} = {\f2 {\b PLOG_NSTR}("Application")}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b EventLogAppender.h}.}\par
}
{\xe \v remove\:plog::EventLogAppenderRegistry}
{\xe \v plog::EventLogAppenderRegistry\:remove}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b void} plog::EventLogAppenderRegistry::remove ({\b const} {\b util::nchar} *  {\i sourceName}, {\b const} {\b util::nchar} *  {\i logName} = {\f2 {\b PLOG_NSTR}("Application")}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 99} of file {\b EventLogAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Appenders/{\b EventLogAppender.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::util::File Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::util::File}
{\xe \v plog::util::File}
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
\par
{
{\f2 #include <Util.h>}}\par
Inheritance diagram for plog::util::File:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1util_1_1_file.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b File} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~File} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b size_t} {\b open} ({\b const} {\b nstring} &{\b fileName})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b size_t} {\b write} ({\b const} {\b void} *{\b buf}, {\b size_t} {\b count})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b CharType} > {\b size_t} {\b write} ({\b const} std::basic_string< {\b CharType} > &{\b str})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b size_t} {\b seek} ({\b size_t} {\b offset}, {\b int} {\b whence})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b close} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b int} {\b unlink} ({\b const} {\b nstring} &{\b fileName})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b int} {\b rename} ({\b const} {\b nstring} &{\b oldFilename}, {\b const} {\b nstring} &{\b newFilename})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 408} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v File\:plog::util::File}
{\xe \v plog::util::File\:File}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plog::util::File::File (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 411} of file {\b Util.h}.}\par
}
{\xe \v ~File\:plog::util::File}
{\xe \v plog::util::File\:~File}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plog::util::File::~File (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 415} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v close\:plog::util::File}
{\xe \v plog::util::File\:close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} plog::util::File::close (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 464} of file {\b Util.h}.}\par
}
{\xe \v open\:plog::util::File}
{\xe \v plog::util::File\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b size_t} plog::util::File::open ({\b const} {\b nstring} &  {\i fileName}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 420} of file {\b Util.h}.}\par
}
{\xe \v rename\:plog::util::File}
{\xe \v plog::util::File\:rename}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b int} plog::util::File::rename ({\b const} {\b nstring} &  {\i oldFilename}, {\b const} {\b nstring} &  {\i newFilename}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 486} of file {\b Util.h}.}\par
}
{\xe \v seek\:plog::util::File}
{\xe \v plog::util::File\:seek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b size_t} plog::util::File::seek ({\b size_t}  {\i offset}, {\b int}  {\i whence}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 451} of file {\b Util.h}.}\par
}
{\xe \v unlink\:plog::util::File}
{\xe \v plog::util::File\:unlink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b int} plog::util::File::unlink ({\b const} {\b nstring} &  {\i fileName}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 477} of file {\b Util.h}.}\par
}
{\xe \v write\:plog::util::File}
{\xe \v plog::util::File\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b CharType} > {\b size_t} plog::util::File::write ({\b const} std::basic_string< {\b CharType} > &  {\i str}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 446} of file {\b Util.h}.}\par
}
{\xe \v write\:plog::util::File}
{\xe \v plog::util::File\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b size_t} plog::util::File::write ({\b const} {\b void} *  {\i buf}, {\b size_t}  {\i count}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 434} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FileHandler Class Reference\par \pard\plain 
{\tc\tcl2 \v FileHandler}
{\xe \v FileHandler}
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
\par
{
{\f2 #include <file_io.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileHandler} (const string work_dir)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FileHandler} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b open} (const string file_path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b close} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b send} (shared_ptr< {\b Socket} > socket, int channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b delete_self} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b get_digest} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listen_file} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b get_size} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b receive_file} (string work_dir, shared_ptr< {\b FileMetadata} > metadata, shared_ptr< {\b Socket} > socket, int channel)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static vector< string > {\b list_files} (const string directory)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b get_sync_dir} (string username, {\b SYNC_DIR_TYPE} mode={\b DIR_CLIENT})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b get_path_metadata} (const string path, struct stat *metadata)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b path_exists} (const string path)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 33} of file {\b file_io.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FileHandler\:FileHandler}
{\xe \v FileHandler\:FileHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileHandler::FileHandler (const string  {\i work_dir})}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 119} of file {\b file_io.cpp}.}\par
}
{\xe \v ~FileHandler\:FileHandler}
{\xe \v FileHandler\:~FileHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileHandler::~FileHandler ()}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 125} of file {\b file_io.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v close\:FileHandler}
{\xe \v FileHandler\:close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FileHandler::close ()}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 144} of file {\b file_io.cpp}.}\par
}
{\xe \v delete_self\:FileHandler}
{\xe \v FileHandler\:delete_self}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FileHandler::delete_self ()}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 209} of file {\b file_io.cpp}.}\par
}
{\xe \v get_digest\:FileHandler}
{\xe \v FileHandler\:get_digest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string FileHandler::get_digest ()}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 238} of file {\b file_io.cpp}.}\par
}
{\xe \v get_path_metadata\:FileHandler}
{\xe \v FileHandler\:get_path_metadata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FileHandler::get_path_metadata (const string  {\i path}, struct stat *  {\i metadata}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 229} of file {\b file_io.cpp}.}\par
}
{\xe \v get_size\:FileHandler}
{\xe \v FileHandler\:get_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long FileHandler::get_size ()}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 221} of file {\b file_io.cpp}.}\par
}
{\xe \v get_sync_dir\:FileHandler}
{\xe \v FileHandler\:get_sync_dir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string FileHandler::get_sync_dir (string  {\i username}, {\b SYNC_DIR_TYPE}  {\i mode} = {\f2 {\b DIR_CLIENT}}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 247} of file {\b file_io.cpp}.}\par
}
{\xe \v list_files\:FileHandler}
{\xe \v FileHandler\:list_files}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< string > FileHandler::list_files (const string  {\i directory}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 148} of file {\b file_io.cpp}.}\par
}
{\xe \v listen_file\:FileHandler}
{\xe \v FileHandler\:listen_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FileHandler::listen_file ()}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 243} of file {\b file_io.cpp}.}\par
}
{\xe \v open\:FileHandler}
{\xe \v FileHandler\:open}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FileHandler::open (const string  {\i file_path})}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 130} of file {\b file_io.cpp}.}\par
}
{\xe \v path_exists\:FileHandler}
{\xe \v FileHandler\:path_exists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FileHandler::path_exists (const string  {\i path}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 233} of file {\b file_io.cpp}.}\par
}
{\xe \v receive_file\:FileHandler}
{\xe \v FileHandler\:receive_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FileHandler::receive_file (string  {\i work_dir}, shared_ptr< {\b FileMetadata} >  {\i metadata}, shared_ptr< {\b Socket} >  {\i socket}, int  {\i channel})}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 270} of file {\b file_io.cpp}.}\par
}
{\xe \v send\:FileHandler}
{\xe \v FileHandler\:send}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FileHandler::send (shared_ptr< {\b Socket} >  {\i socket}, int  {\i channel})}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 167} of file {\b file_io.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/file_io/{\b file_io.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/file_io/{\b file_io.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FileMetadata Class Reference\par \pard\plain 
{\tc\tcl2 \v FileMetadata}
{\xe \v FileMetadata}
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\par
{
{\f2 #include <file_io.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileMetadata} (uint8_t *bytes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileMetadata} (string {\b name}, string file_path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileMetadata} (string full_path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b to_bytes} (uint8_t **bytes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b send} (shared_ptr< {\b Socket} > socket, int channel)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
off_t {\b size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
time_t {\b modified_at}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
time_t {\b accessed_at}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
time_t {\b stat_changed_at}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 18} of file {\b file_io.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FileMetadata\:FileMetadata}
{\xe \v FileMetadata\:FileMetadata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileMetadata::FileMetadata (uint8_t *  {\i bytes})}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b file_io.cpp}.}\par
}
{\xe \v FileMetadata\:FileMetadata}
{\xe \v FileMetadata\:FileMetadata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileMetadata::FileMetadata (string  {\i name}, string  {\i file_path})}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 59} of file {\b file_io.cpp}.}\par
}
{\xe \v FileMetadata\:FileMetadata}
{\xe \v FileMetadata\:FileMetadata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileMetadata::FileMetadata (string  {\i full_path})}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b file_io.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v send\:FileMetadata}
{\xe \v FileMetadata\:send}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FileMetadata::send (shared_ptr< {\b Socket} >  {\i socket}, int  {\i channel})}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 201} of file {\b file_io.cpp}.}\par
}
{\xe \v to_bytes\:FileMetadata}
{\xe \v FileMetadata\:to_bytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t FileMetadata::to_bytes (uint8_t **  {\i bytes})}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b file_io.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v accessed_at\:FileMetadata}
{\xe \v FileMetadata\:accessed_at}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_t FileMetadata::accessed_at}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b file_io.hpp}.}\par
}
{\xe \v modified_at\:FileMetadata}
{\xe \v FileMetadata\:modified_at}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_t FileMetadata::modified_at}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b file_io.hpp}.}\par
}
{\xe \v name\:FileMetadata}
{\xe \v FileMetadata\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string FileMetadata::name}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b file_io.hpp}.}\par
}
{\xe \v size\:FileMetadata}
{\xe \v FileMetadata\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
off_t FileMetadata::size}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b file_io.hpp}.}\par
}
{\xe \v stat_changed_at\:FileMetadata}
{\xe \v FileMetadata\:stat_changed_at}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_t FileMetadata::stat_changed_at}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b file_io.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/file_io/{\b file_io.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/file_io/{\b file_io.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FileSync Class Reference\par \pard\plain 
{\tc\tcl2 \v FileSync}
{\xe \v FileSync}
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\par
{
{\f2 #include <file_sync.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileSync} (shared_ptr< {\b ServerContext} > context)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loop} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sync_all} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_event} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 13} of file {\b file_sync.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FileSync\:FileSync}
{\xe \v FileSync\:FileSync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileSync::FileSync (shared_ptr< {\b ServerContext} >  {\i context})}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b file_sync.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_event\:FileSync}
{\xe \v FileSync\:get_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FileSync::get_event ()}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v loop\:FileSync}
{\xe \v FileSync\:loop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FileSync::loop ()}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b file_sync.cpp}.}\par
}
{\xe \v sync_all\:FileSync}
{\xe \v FileSync\:sync_all}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FileSync::sync_all ()}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b file_sync.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/eventhub/{\b file_sync.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/eventhub/{\b file_sync.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::FuncMessageFormatter Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::FuncMessageFormatter}
{\xe \v plog::FuncMessageFormatter}
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
\par
{
{\f2 #include <FuncMessageFormatter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b header} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b format} ({\b const} {\b Record} &{\b record})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b FuncMessageFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v format\:plog::FuncMessageFormatter}
{\xe \v plog::FuncMessageFormatter\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b util::nstring} plog::FuncMessageFormatter::format ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b FuncMessageFormatter.h}.}\par
}
{\xe \v header\:plog::FuncMessageFormatter}
{\xe \v plog::FuncMessageFormatter\:header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b util::nstring} plog::FuncMessageFormatter::header (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b FuncMessageFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Formatters/{\b FuncMessageFormatter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::HexDump Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::HexDump}
{\xe \v plog::HexDump}
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
\par
{
{\f2 #include <HexDump.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HexDump} ({\b const} {\b void} *{\b ptr}, {\b size_t} size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HexDump} & {\b group} ({\b size_t} group)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HexDump} & {\b separator} ({\b const} {\b char} *{\b digitSeparator})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HexDump} & {\b separator} ({\b const} {\b char} *{\b digitSeparator}, {\b const} {\b char} *{\b groupSeparator})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b util::nostringstream} & {\b operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b HexDump} &)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b HexDump.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v HexDump\:plog::HexDump}
{\xe \v plog::HexDump\:HexDump}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plog::HexDump::HexDump ({\b const} {\b void} *  {\i ptr}, {\b size_t}  {\i size}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b HexDump.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v group\:plog::HexDump}
{\xe \v plog::HexDump\:group}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HexDump} & plog::HexDump::group ({\b size_t}  {\i group}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b HexDump.h}.}\par
}
{\xe \v separator\:plog::HexDump}
{\xe \v plog::HexDump\:separator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HexDump} & plog::HexDump::separator ({\b const} {\b char} *  {\i digitSeparator}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b HexDump.h}.}\par
}
{\xe \v separator\:plog::HexDump}
{\xe \v plog::HexDump\:separator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b HexDump} & plog::HexDump::separator ({\b const} {\b char} *  {\i digitSeparator}, {\b const} {\b char} *  {\i groupSeparator}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b HexDump.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v operator<<\:plog::HexDump}
{\xe \v plog::HexDump\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b util::nostringstream} & {\b operator}<< ({\b util::nostringstream} &  {\i stream}, {\b const} {\b HexDump} &  {\i hexDump}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b HexDump.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Helpers/{\b HexDump.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::IAppender Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::IAppender}
{\xe \v plog::IAppender}
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
\par
{
{\f2 #include <IAppender.h>}}\par
Inheritance diagram for plog::IAppender:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_i_appender.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~IAppender} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b write} ({\b const} {\b Record} &{\b record})=0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b IAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ~IAppender\:plog::IAppender}
{\xe \v plog::IAppender\:~IAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} plog::IAppender::~IAppender (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b IAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v write\:plog::IAppender}
{\xe \v plog::IAppender\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b void} plog::IAppender::write ({\b const} {\b Record} &  {\i record}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b plog::AndroidAppender< Formatter >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b plog::ArduinoAppender< Formatter >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b plog::ColorConsoleAppender< Formatter >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b plog::ConsoleAppender< Formatter >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b plog::DebugOutputAppender< Formatter >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b plog::DynamicAppender} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b plog::EventLogAppender< Formatter >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWP \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b plog::RollingFileAppender< Formatter, Converter >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXF \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b plog::Logger< instanceId >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Appenders/{\b IAppender.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Inotify Class Reference\par \pard\plain 
{\tc\tcl2 \v Inotify}
{\xe \v Inotify}
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\par
{
{\f2 #include <inotify.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Inotify} (shared_ptr< {\b Socket} > {\b socket}, const char *folder_path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_file_descriptor} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_watch_descriptor} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_event} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b closeInotify} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
shared_ptr< {\b Socket} > {\b socket}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 19} of file {\b inotify.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Inotify\:Inotify}
{\xe \v Inotify\:Inotify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Inotify::Inotify (shared_ptr< {\b Socket} >  {\i socket}, const char *  {\i folder_path})}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b inotify.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v closeInotify\:Inotify}
{\xe \v Inotify\:closeInotify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Inotify::closeInotify ()}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 70} of file {\b inotify.cpp}.}\par
}
{\xe \v get_file_descriptor\:Inotify}
{\xe \v Inotify\:get_file_descriptor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Inotify::get_file_descriptor ()}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b inotify.cpp}.}\par
}
{\xe \v get_watch_descriptor\:Inotify}
{\xe \v Inotify\:get_watch_descriptor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Inotify::get_watch_descriptor ()}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b inotify.cpp}.}\par
}
{\xe \v read_event\:Inotify}
{\xe \v Inotify\:read_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Inotify::read_event ()}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b inotify.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v socket\:Inotify}
{\xe \v Inotify\:socket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
shared_ptr<{\b Socket}> Inotify::socket}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b inotify.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/file_io/{\b inotify.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/file_io/{\b inotify.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
alx::Inquirer Class Reference\par \pard\plain 
{\tc\tcl2 \v alx::Inquirer}
{\xe \v alx::Inquirer}
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
\par
{
{\f2 #include <inquirer.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Inquirer} (std::string title)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add_question} (const {\b Question} &question)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ask} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_questions} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_answers} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b answer} (const std::string &key) const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 94} of file {\b inquirer.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Inquirer\:alx::Inquirer}
{\xe \v alx::Inquirer\:Inquirer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
alx::Inquirer::Inquirer (std::string  {\i title}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 100} of file {\b inquirer.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v add_question\:alx::Inquirer}
{\xe \v alx::Inquirer\:add_question}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void alx::Inquirer::add_question (const {\b Question} &  {\i question}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 103} of file {\b inquirer.h}.}\par
}
{\xe \v answer\:alx::Inquirer}
{\xe \v alx::Inquirer\:answer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string alx::Inquirer::answer (const std::string &  {\i key}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 254} of file {\b inquirer.h}.}\par
}
{\xe \v ask\:alx::Inquirer}
{\xe \v alx::Inquirer\:ask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void alx::Inquirer::ask (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 105} of file {\b inquirer.h}.}\par
}
{\xe \v print_answers\:alx::Inquirer}
{\xe \v alx::Inquirer\:print_answers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void alx::Inquirer::print_answers () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 248} of file {\b inquirer.h}.}\par
}
{\xe \v print_questions\:alx::Inquirer}
{\xe \v alx::Inquirer\:print_questions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void alx::Inquirer::print_questions () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 241} of file {\b inquirer.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/cpp-inquirer/{\b inquirer.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail::meta::isContainer< T > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail::meta::isContainer< T >}
{\xe \v plog::detail::meta::isContainer< T >}
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
\par
{
{\f2 #include <Record.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b value} = sizeof(test<T>(0)) == sizeof(Yes)
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b U} > {\b static} {\b meta::enableIf}<!!({\b sizeof}(typenameU::const_iterator)), {\b Yes} >::type {\b test} ({\b int})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b U} > {\b static} {\b No} {\b test} (...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b T}>\par
struct plog::detail::meta::isContainer< T >\par
}
\par
{
Definition at line {\b 55} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > {\b anonymous} {\b enum}}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v value\:plog::detail::meta::isContainer< T >}
{\xe \v plog::detail::meta::isContainer< T >\:value}
{\qr value{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 69} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v test\:plog::detail::meta::isContainer< T >}
{\xe \v plog::detail::meta::isContainer< T >\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > template<{\b class} {\b U} > {\b static} {\b No} {\b plog::detail::meta::isContainer}< {\b T} >::test (  {\i ...}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test\:plog::detail::meta::isContainer< T >}
{\xe \v plog::detail::meta::isContainer< T >\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > template<{\b class} {\b U} > {\b static} {\b meta::enableIf}<!!({\b sizeof}(typenameU::const_iterator)), {\b Yes} >::type {\b plog::detail::meta::isContainer}< {\b T} >::test ({\b int} ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Record.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail::meta::isConvertible< From, To > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail::meta::isConvertible< From, To >}
{\xe \v plog::detail::meta::isConvertible< From, To >}
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
\par
{
{\f2 #include <Record.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b value} = sizeof(test<From>(0)) == sizeof(Yes)
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b U} > {\b static} {\b enableIf}<!!({\b sizeof}({\b static_cast}< {\b To} >({\b meta::declval}< {\b U} >()))+{\b sizeof}({\b U} *)), {\b Yes} >::type {\b test} ({\b int})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b U} > {\b static} {\b No} {\b test} (...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b From}, {\b class} {\b To}>\par
struct plog::detail::meta::isConvertible< From, To >\par
}
\par
{
Definition at line {\b 36} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b From} , {\b class} {\b To} > {\b anonymous} {\b enum}}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v value\:plog::detail::meta::isConvertible< From, To >}
{\xe \v plog::detail::meta::isConvertible< From, To >\:value}
{\qr value{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 45} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v test\:plog::detail::meta::isConvertible< From, To >}
{\xe \v plog::detail::meta::isConvertible< From, To >\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b From} , {\b class} {\b To} > template<{\b class} {\b U} > {\b static} {\b No} {\b plog::detail::meta::isConvertible}< {\b From}, {\b To} >::test (  {\i ...}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test\:plog::detail::meta::isConvertible< From, To >}
{\xe \v plog::detail::meta::isConvertible< From, To >\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b From} , {\b class} {\b To} > template<{\b class} {\b U} > {\b static} {\b enableIf}<!!({\b sizeof}({\b static_cast}< {\b To} >({\b meta::declval}< {\b U} >()))+{\b sizeof}({\b U} *)), {\b Yes} >::type {\b plog::detail::meta::isConvertible}< {\b From}, {\b To} >::test ({\b int} ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Record.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail::meta::isConvertibleToNString< T > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail::meta::isConvertibleToNString< T >}
{\xe \v plog::detail::meta::isConvertibleToNString< T >}
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
\par
{
{\f2 #include <Record.h>}}\par
Inheritance diagram for plog::detail::meta::isConvertibleToNString< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structplog_1_1detail_1_1meta_1_1is_convertible_to_n_string.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b plog::detail::meta::isConvertible< T, util::nstring >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum }
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b plog::detail::meta::isConvertible< T, util::nstring >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b enableIf}<!!({\b sizeof}({\b static_cast}< {\b util::nstring} >(meta::declval< {\b U} >()))+{\b sizeof}({\b U} *)), {\b Yes} >::type {\b test} ({\b int})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b No} {\b test} (...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b T}>\par
struct plog::detail::meta::isConvertibleToNString< T >\par
}
\par
{
Definition at line {\b 49} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Record.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail::meta::isConvertibleToString< T > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail::meta::isConvertibleToString< T >}
{\xe \v plog::detail::meta::isConvertibleToString< T >}
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
\par
{
{\f2 #include <Record.h>}}\par
Inheritance diagram for plog::detail::meta::isConvertibleToString< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structplog_1_1detail_1_1meta_1_1is_convertible_to_string.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Types inherited from {\b plog::detail::meta::isConvertible< T, std::string >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum }
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b plog::detail::meta::isConvertible< T, std::string >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b enableIf}<!!({\b sizeof}({\b static_cast}< std::string >(meta::declval< {\b U} >()))+{\b sizeof}({\b U} *)), {\b Yes} >::type {\b test} ({\b int})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b No} {\b test} (...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b T}>\par
struct plog::detail::meta::isConvertibleToString< T >\par
}
\par
{
Definition at line {\b 52} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Record.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail::meta::isFilesystemPath< T > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail::meta::isFilesystemPath< T >}
{\xe \v plog::detail::meta::isFilesystemPath< T >}
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
\par
{
{\f2 #include <Record.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b value} = sizeof(test<T>(0)) == sizeof(Yes)
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b U} > {\b static} {\b meta::enableIf}<!!({\b sizeof}({\b meta::declval}< {\b U} >().{\b preferred_separator})), {\b Yes} >::type {\b test} ({\b int})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b U} > {\b static} {\b No} {\b test} (...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b T}>\par
struct plog::detail::meta::isFilesystemPath< T >\par
}
\par
{
Definition at line {\b 75} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > {\b anonymous} {\b enum}}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v value\:plog::detail::meta::isFilesystemPath< T >}
{\xe \v plog::detail::meta::isFilesystemPath< T >\:value}
{\qr value{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 83} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v test\:plog::detail::meta::isFilesystemPath< T >}
{\xe \v plog::detail::meta::isFilesystemPath< T >\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > template<{\b class} {\b U} > {\b static} {\b No} {\b plog::detail::meta::isFilesystemPath}< {\b T} >::test (  {\i ...}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test\:plog::detail::meta::isFilesystemPath< T >}
{\xe \v plog::detail::meta::isFilesystemPath< T >\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > template<{\b class} {\b U} > {\b static} {\b meta::enableIf}<!!({\b sizeof}({\b meta::declval}< {\b U} >().{\b preferred_separator})), {\b Yes} >::type {\b plog::detail::meta::isFilesystemPath}< {\b T} >::test ({\b int} ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Record.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::Logger< instanceId > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::Logger< instanceId >}
{\xe \v plog::Logger< instanceId >}
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
\par
{
{\f2 #include <Logger.h>}}\par
Inheritance diagram for plog::Logger< instanceId >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_logger.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Logger} ({\b Severity} {\b maxSeverity}={\b none})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Logger} & {\b addAppender} ({\b IAppender} *{\b appender})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Severity} {\b getMaxSeverity} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b setMaxSeverity} ({\b Severity} {\b severity})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b checkSeverity} ({\b Severity} {\b severity}) {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b write} ({\b const} {\b Record} &{\b record}) {\b PLOG_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b operator+=} ({\b const} {\b Record} &{\b record})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::util::Singleton< Logger< instanceId > >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Singleton} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Singleton} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::IAppender}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~IAppender} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b plog::util::Singleton< Logger< instanceId > >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b Logger}< {\b instanceId} > * {\b getInstance} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b int} instanceId>\par
class plog::Logger< instanceId >\par
}
\par
{
Definition at line {\b 17} of file {\b Logger.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Logger\:plog::Logger< instanceId >}
{\xe \v plog::Logger< instanceId >\:Logger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b int} instanceId> {\b plog::Logger}< {\b instanceId} >::Logger ({\b Severity}  {\i maxSeverity} = {\f2 {\b none}}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b Logger.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addAppender\:plog::Logger< instanceId >}
{\xe \v plog::Logger< instanceId >\:addAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b int} instanceId> {\b Logger} & {\b plog::Logger}< {\b instanceId} >::addAppender ({\b IAppender} *  {\i appender}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b Logger.h}.}\par
}
{\xe \v checkSeverity\:plog::Logger< instanceId >}
{\xe \v plog::Logger< instanceId >\:checkSeverity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b int} instanceId> {\b bool} {\b plog::Logger}< {\b instanceId} >::checkSeverity ({\b Severity}  {\i severity}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b Logger.h}.}\par
}
{\xe \v getMaxSeverity\:plog::Logger< instanceId >}
{\xe \v plog::Logger< instanceId >\:getMaxSeverity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b int} instanceId> {\b Severity} {\b plog::Logger}< {\b instanceId} >::getMaxSeverity () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b Logger.h}.}\par
}
{\xe \v operator+=\:plog::Logger< instanceId >}
{\xe \v plog::Logger< instanceId >\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b int} instanceId> {\b void} {\b plog::Logger}< {\b instanceId} >::operator+= ({\b const} {\b Record} &  {\i record}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b Logger.h}.}\par
}
{\xe \v setMaxSeverity\:plog::Logger< instanceId >}
{\xe \v plog::Logger< instanceId >\:setMaxSeverity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b int} instanceId> {\b void} {\b plog::Logger}< {\b instanceId} >::setMaxSeverity ({\b Severity}  {\i severity}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b Logger.h}.}\par
}
{\xe \v write\:plog::Logger< instanceId >}
{\xe \v plog::Logger< instanceId >\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b int} instanceId> {\b virtual} {\b void} {\b plog::Logger}< {\b instanceId} >::write ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b plog::IAppender} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 46} of file {\b Logger.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Logger.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::MessageOnlyFormatter Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::MessageOnlyFormatter}
{\xe \v plog::MessageOnlyFormatter}
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
\par
{
{\f2 #include <MessageOnlyFormatter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b header} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b format} ({\b const} {\b Record} &{\b record})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b MessageOnlyFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v format\:plog::MessageOnlyFormatter}
{\xe \v plog::MessageOnlyFormatter\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b util::nstring} plog::MessageOnlyFormatter::format ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b MessageOnlyFormatter.h}.}\par
}
{\xe \v header\:plog::MessageOnlyFormatter}
{\xe \v plog::MessageOnlyFormatter\:header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b util::nstring} plog::MessageOnlyFormatter::header (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b MessageOnlyFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Formatters/{\b MessageOnlyFormatter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::util::Mutex Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::util::Mutex}
{\xe \v plog::util::Mutex}
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
\par
{
{\f2 #include <Util.h>}}\par
Inheritance diagram for plog::util::Mutex:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1util_1_1_mutex.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Mutex} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Mutex} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b class} {\b MutexLock}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 499} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Mutex\:plog::util::Mutex}
{\xe \v plog::util::Mutex\:Mutex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plog::util::Mutex::Mutex (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 502} of file {\b Util.h}.}\par
}
{\xe \v ~Mutex\:plog::util::Mutex}
{\xe \v plog::util::Mutex\:~Mutex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plog::util::Mutex::~Mutex (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 516} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Symbol Documentation\par
\pard\plain 
{\xe \v MutexLock\:plog::util::Mutex}
{\xe \v plog::util::Mutex\:MutexLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b friend} {\b class} {\b MutexLock}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 527} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::util::MutexLock Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::util::MutexLock}
{\xe \v plog::util::MutexLock}
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
\par
{
{\f2 #include <Util.h>}}\par
Inheritance diagram for plog::util::MutexLock:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1util_1_1_mutex_lock.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MutexLock} ({\b Mutex} &{\b mutex})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MutexLock} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 562} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MutexLock\:plog::util::MutexLock}
{\xe \v plog::util::MutexLock\:MutexLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plog::util::MutexLock::MutexLock ({\b Mutex} &  {\i mutex}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 565} of file {\b Util.h}.}\par
}
{\xe \v ~MutexLock\:plog::util::MutexLock}
{\xe \v plog::util::MutexLock\:~MutexLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plog::util::MutexLock::~MutexLock (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 570} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::NativeEOLConverter< NextConverter > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::NativeEOLConverter< NextConverter >}
{\xe \v plog::NativeEOLConverter< NextConverter >}
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
\par
{
{\f2 #include <NativeEOLConverter.h>}}\par
Inheritance diagram for plog::NativeEOLConverter< NextConverter >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_native_e_o_l_converter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b plog::UTF8Converter}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} std::string {\b header} ({\b const} {\b util::nstring} &{\b str})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} std::string {\b convert} ({\b const} {\b util::nstring} &{\b str})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b NextConverter} = UTF8Converter>\par
class plog::NativeEOLConverter< NextConverter >\par
}
\par
{
Definition at line {\b 8} of file {\b NativeEOLConverter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Converters/{\b NativeEOLConverter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail::meta::No Struct Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail::meta::No}
{\xe \v plog::detail::meta::No}
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
\par
{
{\f2 #include <Record.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char} {\b a} [1]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 32} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v a\:plog::detail::meta::No}
{\xe \v plog::detail::meta::No\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b char} plog::detail::meta::No::a[1]}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Record.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::util::NonCopyable Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::util::NonCopyable}
{\xe \v plog::util::NonCopyable}
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
\par
{
{\f2 #include <Util.h>}}\par
Inheritance diagram for plog::util::NonCopyable:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1util_1_1_non_copyable.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NonCopyable} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 396} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NonCopyable\:plog::util::NonCopyable}
{\xe \v plog::util::NonCopyable\:NonCopyable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plog::util::NonCopyable::NonCopyable (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 399} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Packet Class Reference\par \pard\plain 
{\tc\tcl2 \v Packet}
{\xe \v Packet}
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\par
{
{\f2 #include <socket.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Packet} (uint8_t *bytes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Packet} ({\b PacketType} {\b type}, uint16_t {\b seq_index}, uint32_t {\b total_size}, uint16_t {\b payload_size}, uint8_t *{\b payload})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Packet} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b to_bytes} (uint8_t **bytes_ptr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b send} (shared_ptr< {\b Socket} > socket, int channel)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b get_max_payload_size} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PacketType} {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b seq_index}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b total_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b payload_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b payload}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 47} of file {\b socket.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Packet\:Packet}
{\xe \v Packet\:Packet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Packet::Packet (uint8_t *  {\i bytes})}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 271} of file {\b socket.cpp}.}\par
}
{\xe \v Packet\:Packet}
{\xe \v Packet\:Packet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Packet::Packet ({\b PacketType}  {\i type}, uint16_t  {\i seq_index}, uint32_t  {\i total_size}, uint16_t  {\i payload_size}, uint8_t *  {\i payload})}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 301} of file {\b socket.cpp}.}\par
}
{\xe \v ~Packet\:Packet}
{\xe \v Packet\:~Packet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Packet::~Packet ()}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 312} of file {\b socket.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_max_payload_size\:Packet}
{\xe \v Packet\:get_max_payload_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Packet::get_max_payload_size (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 267} of file {\b socket.cpp}.}\par
}
{\xe \v send\:Packet}
{\xe \v Packet\:send}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Packet::send (shared_ptr< {\b Socket} >  {\i socket}, int  {\i channel})}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 348} of file {\b socket.cpp}.}\par
}
{\xe \v to_bytes\:Packet}
{\xe \v Packet\:to_bytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t Packet::to_bytes (uint8_t **  {\i bytes_ptr})}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 316} of file {\b socket.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v payload\:Packet}
{\xe \v Packet\:payload}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* Packet::payload}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b socket.hpp}.}\par
}
{\xe \v payload_size\:Packet}
{\xe \v Packet\:payload_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t Packet::payload_size}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b socket.hpp}.}\par
}
{\xe \v seq_index\:Packet}
{\xe \v Packet\:seq_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t Packet::seq_index}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b socket.hpp}.}\par
}
{\xe \v total_size\:Packet}
{\xe \v Packet\:total_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t Packet::total_size}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b socket.hpp}.}\par
}
{\xe \v type\:Packet}
{\xe \v Packet\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PacketType} Packet::type}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b socket.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/socket_io/{\b socket.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/socket_io/{\b socket.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
alx::Question Class Reference\par \pard\plain 
{\tc\tcl2 \v alx::Question}
{\xe \v alx::Question}
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\par
{
{\f2 #include <inquirer.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Question} (const {\b Question} &q)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Question} (std::string key, std::string question, const {\b Type} type={\b Type::text})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Question} (std::string key, std::string question, std::vector< std::string > {\b options})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Question} (std::string key, std::string question, std::string {\b regex})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Question} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 46} of file {\b inquirer.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Question\:alx::Question}
{\xe \v alx::Question\:Question}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
alx::Question::Question (const {\b Question} &  {\i q}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b inquirer.h}.}\par
}
{\xe \v Question\:alx::Question}
{\xe \v alx::Question\:Question}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
alx::Question::Question (std::string  {\i key}, std::string  {\i question}, const {\b Type}  {\i type} = {\f2 {\b Type::text}}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 61} of file {\b inquirer.h}.}\par
}
{\xe \v Question\:alx::Question}
{\xe \v alx::Question\:Question}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
alx::Question::Question (std::string  {\i key}, std::string  {\i question}, std::vector< std::string >  {\i options}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b inquirer.h}.}\par
}
{\xe \v Question\:alx::Question}
{\xe \v alx::Question\:Question}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
alx::Question::Question (std::string  {\i key}, std::string  {\i question}, std::string  {\i regex}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b inquirer.h}.}\par
}
{\xe \v ~Question\:alx::Question}
{\xe \v alx::Question\:~Question}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
alx::Question::~Question (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 82} of file {\b inquirer.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/cpp-inquirer/{\b inquirer.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::Record Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::Record}
{\xe \v plog::Record}
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
\par
{
{\f2 #include <Record.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Record} ({\b Severity} {\b severity}, {\b const} {\b char} *{\b func}, {\b size_t} {\b line}, {\b const} {\b char} *file, {\b const} {\b void} *{\b object}, {\b int} {\b instanceId})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Record} & {\b ref} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Record} & {\b operator<<} ({\b char} {\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Record} & {\b operator<<} ({\b util::nostream} &({\b PLOG_CDECL} *{\b data})({\b util::nostream} &))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b Record} & {\b operator<<} ({\b const} {\b T} &{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Record} & {\b printf} ({\b const} {\b char} *format,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b const} {\b util::Time} & {\b getTime} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b Severity} {\b getSeverity} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b unsigned} {\b int} {\b getTid} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b const} {\b void} * {\b getObject} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b size_t} {\b getLine} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b const} {\b util::nchar} * {\b getMessage} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b const} {\b char} * {\b getFunc} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b const} {\b char} * {\b getFile} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~Record} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b int} {\b getInstanceId} () {\b const}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 257} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Record\:plog::Record}
{\xe \v plog::Record\:Record}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
plog::Record::Record ({\b Severity}  {\i severity}, {\b const} {\b char} *  {\i func}, {\b size_t}  {\i line}, {\b const} {\b char} *  {\i file}, {\b const} {\b void} *  {\i object}, {\b int}  {\i instanceId}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 260} of file {\b Record.h}.}\par
}
{\xe \v ~Record\:plog::Record}
{\xe \v plog::Record\:~Record}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} plog::Record::~Record (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 413} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getFile\:plog::Record}
{\xe \v plog::Record\:getFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b const} {\b char} * plog::Record::getFile () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 408} of file {\b Record.h}.}\par
}
{\xe \v getFunc\:plog::Record}
{\xe \v plog::Record\:getFunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b const} {\b char} * plog::Record::getFunc () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 402} of file {\b Record.h}.}\par
}
{\xe \v getInstanceId\:plog::Record}
{\xe \v plog::Record\:getInstanceId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b int} plog::Record::getInstanceId () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 417} of file {\b Record.h}.}\par
}
{\xe \v getLine\:plog::Record}
{\xe \v plog::Record\:getLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b size_t} plog::Record::getLine () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 391} of file {\b Record.h}.}\par
}
{\xe \v getMessage\:plog::Record}
{\xe \v plog::Record\:getMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b const} {\b util::nchar} * plog::Record::getMessage () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 396} of file {\b Record.h}.}\par
}
{\xe \v getObject\:plog::Record}
{\xe \v plog::Record\:getObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b const} {\b void} * plog::Record::getObject () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 386} of file {\b Record.h}.}\par
}
{\xe \v getSeverity\:plog::Record}
{\xe \v plog::Record\:getSeverity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b Severity} plog::Record::getSeverity () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 376} of file {\b Record.h}.}\par
}
{\xe \v getTid\:plog::Record}
{\xe \v plog::Record\:getTid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b unsigned} {\b int} plog::Record::getTid () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 381} of file {\b Record.h}.}\par
}
{\xe \v getTime\:plog::Record}
{\xe \v plog::Record\:getTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b const} {\b util::Time} & plog::Record::getTime () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 371} of file {\b Record.h}.}\par
}
{\xe \v operator<<\:plog::Record}
{\xe \v plog::Record\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Record} & plog::Record::operator<< ({\b char}  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 274} of file {\b Record.h}.}\par
}
{\xe \v operator<<\:plog::Record}
{\xe \v plog::Record\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b Record} & plog::Record::operator<< ({\b const} {\b T} &  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 320} of file {\b Record.h}.}\par
}
{\xe \v operator<<\:plog::Record}
{\xe \v plog::Record\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Record} & plog::Record::operator<< ({\b util::nostream} & PLOG_CDECL *data)(util::nostream &){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 288} of file {\b Record.h}.}\par
}
{\xe \v printf\:plog::Record}
{\xe \v plog::Record\:printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Record} & plog::Record::printf ({\b const} {\b char} *  {\i format},   {\i ...}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 329} of file {\b Record.h}.}\par
}
{\xe \v ref\:plog::Record}
{\xe \v plog::Record\:ref}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Record} & plog::Record::ref (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 266} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Record.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::RollingFileAppender< Formatter, Converter > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::RollingFileAppender< Formatter, Converter >}
{\xe \v plog::RollingFileAppender< Formatter, Converter >}
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
\par
{
{\f2 #include <RollingFileAppender.h>}}\par
Inheritance diagram for plog::RollingFileAppender< Formatter, Converter >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_rolling_file_appender.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RollingFileAppender} ({\b const} {\b util::nchar} *{\b fileName}, {\b size_t} {\b maxFileSize}=0, {\b int} {\b maxFiles}=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b write} ({\b const} {\b Record} &{\b record}) {\b PLOG_OVERRIDE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b setFileName} ({\b const} {\b util::nchar} *{\b fileName})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b setMaxFiles} ({\b int} {\b maxFiles})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b setMaxFileSize} ({\b size_t} {\b maxFileSize})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b rollLogFiles} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b plog::IAppender}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~IAppender} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b Formatter}, {\b class} {\b Converter} = NativeEOLConverter<UTF8Converter>>\par
class plog::RollingFileAppender< Formatter, Converter >\par
}
\par
{
Definition at line {\b 11} of file {\b RollingFileAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RollingFileAppender\:plog::RollingFileAppender< Formatter, Converter >}
{\xe \v plog::RollingFileAppender< Formatter, Converter >\:RollingFileAppender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} , {\b class} {\b Converter}  = NativeEOLConverter<UTF8Converter>> {\b plog::RollingFileAppender}< {\b Formatter}, {\b Converter} >::RollingFileAppender ({\b const} {\b util::nchar} *  {\i fileName}, {\b size_t}  {\i maxFileSize} = {\f2 0}, {\b int}  {\i maxFiles} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b RollingFileAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v rollLogFiles\:plog::RollingFileAppender< Formatter, Converter >}
{\xe \v plog::RollingFileAppender< Formatter, Converter >\:rollLogFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} , {\b class} {\b Converter}  = NativeEOLConverter<UTF8Converter>> {\b void} {\b plog::RollingFileAppender}< {\b Formatter}, {\b Converter} >::rollLogFiles (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 85} of file {\b RollingFileAppender.h}.}\par
}
{\xe \v setFileName\:plog::RollingFileAppender< Formatter, Converter >}
{\xe \v plog::RollingFileAppender< Formatter, Converter >\:setFileName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} , {\b class} {\b Converter}  = NativeEOLConverter<UTF8Converter>> {\b void} {\b plog::RollingFileAppender}< {\b Formatter}, {\b Converter} >::setFileName ({\b const} {\b util::nchar} *  {\i fileName}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b RollingFileAppender.h}.}\par
}
{\xe \v setMaxFiles\:plog::RollingFileAppender< Formatter, Converter >}
{\xe \v plog::RollingFileAppender< Formatter, Converter >\:setMaxFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} , {\b class} {\b Converter}  = NativeEOLConverter<UTF8Converter>> {\b void} {\b plog::RollingFileAppender}< {\b Formatter}, {\b Converter} >::setMaxFiles ({\b int}  {\i maxFiles}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b RollingFileAppender.h}.}\par
}
{\xe \v setMaxFileSize\:plog::RollingFileAppender< Formatter, Converter >}
{\xe \v plog::RollingFileAppender< Formatter, Converter >\:setMaxFileSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} , {\b class} {\b Converter}  = NativeEOLConverter<UTF8Converter>> {\b void} {\b plog::RollingFileAppender}< {\b Formatter}, {\b Converter} >::setMaxFileSize ({\b size_t}  {\i maxFileSize}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b RollingFileAppender.h}.}\par
}
{\xe \v write\:plog::RollingFileAppender< Formatter, Converter >}
{\xe \v plog::RollingFileAppender< Formatter, Converter >\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Formatter} , {\b class} {\b Converter}  = NativeEOLConverter<UTF8Converter>> {\b virtual} {\b void} {\b plog::RollingFileAppender}< {\b Formatter}, {\b Converter} >::write ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b plog::IAppender} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 36} of file {\b RollingFileAppender.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Appenders/{\b RollingFileAppender.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ServerContext Class Reference\par \pard\plain 
{\tc\tcl2 \v ServerContext}
{\xe \v ServerContext}
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\par
{
{\f2 #include <models.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ServerContext} (shared_ptr< {\b Socket} > {\b socket}, shared_ptr< {\b Connection} > {\b connection}, shared_ptr< {\b UserStore} >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_device} ({\b Device} *{\b device})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Device} * {\b device}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
shared_ptr< {\b Connection} > {\b connection}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
shared_ptr< {\b UserStore} > {\b storage}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
shared_ptr< {\b Socket} > {\b socket}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 23} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ServerContext\:ServerContext}
{\xe \v ServerContext\:ServerContext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ServerContext::ServerContext (shared_ptr< {\b Socket} >  {\i socket}, shared_ptr< {\b Connection} >  {\i connection}, shared_ptr< {\b UserStore} >  {\i storage})}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 162} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v set_device\:ServerContext}
{\xe \v ServerContext\:set_device}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ServerContext::set_device ({\b Device} *  {\i device})}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 169} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v connection\:ServerContext}
{\xe \v ServerContext\:connection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
shared_ptr<{\b Connection}> ServerContext::connection}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b models.hpp}.}\par
}
{\xe \v device\:ServerContext}
{\xe \v ServerContext\:device}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Device}* ServerContext::device}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b models.hpp}.}\par
}
{\xe \v socket\:ServerContext}
{\xe \v ServerContext\:socket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
shared_ptr<{\b Socket}> ServerContext::socket}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b models.hpp}.}\par
}
{\xe \v storage\:ServerContext}
{\xe \v ServerContext\:storage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
shared_ptr<{\b UserStore}> ServerContext::storage}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/userland/{\b models.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/userland/{\b models.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ServerEventPublisher Class Reference\par \pard\plain 
{\tc\tcl2 \v ServerEventPublisher}
{\xe \v ServerEventPublisher}
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\par
{
{\f2 #include <publisher.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ServerEventPublisher} (shared_ptr< {\b ServerContext} > context)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loop} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b send_event} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 13} of file {\b publisher.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ServerEventPublisher\:ServerEventPublisher}
{\xe \v ServerEventPublisher\:ServerEventPublisher}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ServerEventPublisher::ServerEventPublisher (shared_ptr< {\b ServerContext} >  {\i context})}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b publisher.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v loop\:ServerEventPublisher}
{\xe \v ServerEventPublisher\:loop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ServerEventPublisher::loop ()}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b publisher.cpp}.}\par
}
{\xe \v send_event\:ServerEventPublisher}
{\xe \v ServerEventPublisher\:send_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ServerEventPublisher::send_event ()}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/eventhub/{\b publisher.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/eventhub/{\b publisher.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ServerEventSubscriber Class Reference\par \pard\plain 
{\tc\tcl2 \v ServerEventSubscriber}
{\xe \v ServerEventSubscriber}
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\par
{
{\f2 #include <subscriber.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ServerEventSubscriber} (shared_ptr< {\b ServerContext} > context)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loop} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_event} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 12} of file {\b subscriber.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ServerEventSubscriber\:ServerEventSubscriber}
{\xe \v ServerEventSubscriber\:ServerEventSubscriber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ServerEventSubscriber::ServerEventSubscriber (shared_ptr< {\b ServerContext} >  {\i context})}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b subscriber.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v get_event\:ServerEventSubscriber}
{\xe \v ServerEventSubscriber\:get_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ServerEventSubscriber::get_event ()}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v loop\:ServerEventSubscriber}
{\xe \v ServerEventSubscriber\:loop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ServerEventSubscriber::loop ()}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b subscriber.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/eventhub/{\b subscriber.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/eventhub/{\b subscriber.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Session Class Reference\par \pard\plain 
{\tc\tcl2 \v Session}
{\xe \v Session}
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\par
{
{\f2 #include <session.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Session} (shared_ptr< {\b ServerContext} >)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setup} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b run} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b teardown} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
shared_ptr< {\b ServerContext} > {\b context}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b channel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionType} {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 36} of file {\b session.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Session\:Session}
{\xe \v Session\:Session}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Session::Session (shared_ptr< {\b ServerContext} >  {\i context})}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 148} of file {\b session.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v run\:Session}
{\xe \v Session\:run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Session::run ()}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 152} of file {\b session.cpp}.}\par
}
{\xe \v setup\:Session}
{\xe \v Session\:setup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Session::setup ()}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 98} of file {\b session.cpp}.}\par
}
{\xe \v teardown\:Session}
{\xe \v Session\:teardown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Session::teardown ()}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 183} of file {\b session.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v channel\:Session}
{\xe \v Session\:channel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Session::channel}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b session.hpp}.}\par
}
{\xe \v context\:Session}
{\xe \v Session\:context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
shared_ptr<{\b ServerContext}> Session::context}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b session.hpp}.}\par
}
{\xe \v type\:Session}
{\xe \v Session\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionType} Session::type}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b session.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/session/{\b session.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/session/{\b session.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionManager Class Reference\par \pard\plain 
{\tc\tcl2 \v SessionManager}
{\xe \v SessionManager}
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
\par
{
{\f2 #include <session.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionManager} (shared_ptr< {\b Socket} > socket)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b start} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b stop} (int signal)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool * {\b interrupt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 19} of file {\b session.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SessionManager\:SessionManager}
{\xe \v SessionManager\:SessionManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SessionManager::SessionManager (shared_ptr< {\b Socket} >  {\i socket})}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b session.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v start\:SessionManager}
{\xe \v SessionManager\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SessionManager::start ()}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b session.cpp}.}\par
}
{\xe \v stop\:SessionManager}
{\xe \v SessionManager\:stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SessionManager::stop (int  {\i signal})}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v interrupt\:SessionManager}
{\xe \v SessionManager\:interrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool* SessionManager::interrupt}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b session.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/session/{\b session.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/session/{\b session.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SessionRequest Class Reference\par \pard\plain 
{\tc\tcl2 \v SessionRequest}
{\xe \v SessionRequest}
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
\par
{
{\f2 #include <models.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionRequest} (uint8_t *bytes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionRequest} ({\b SessionType} {\b type}, string {\b username})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b to_bytes} (uint8_t **bytes_ptr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SessionType} {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b username}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b uname_s}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 23} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SessionRequest\:SessionRequest}
{\xe \v SessionRequest\:SessionRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SessionRequest::SessionRequest (uint8_t *  {\i bytes})}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b models.cpp}.}\par
}
{\xe \v SessionRequest\:SessionRequest}
{\xe \v SessionRequest\:SessionRequest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SessionRequest::SessionRequest ({\b SessionType}  {\i type}, string  {\i username})}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v to_bytes\:SessionRequest}
{\xe \v SessionRequest\:to_bytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t SessionRequest::to_bytes (uint8_t **  {\i bytes_ptr})}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v type\:SessionRequest}
{\xe \v SessionRequest\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SessionType} SessionRequest::type}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b models.hpp}.}\par
}
{\xe \v uname_s\:SessionRequest}
{\xe \v SessionRequest\:uname_s}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t SessionRequest::uname_s}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b models.hpp}.}\par
}
{\xe \v username\:SessionRequest}
{\xe \v SessionRequest\:username}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string SessionRequest::username}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/session/{\b models.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/session/{\b models.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::util::Singleton< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::util::Singleton< T >}
{\xe \v plog::util::Singleton< T >}
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
\par
{
{\f2 #include <Util.h>}}\par
Inheritance diagram for plog::util::Singleton< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1util_1_1_singleton.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Singleton} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Singleton} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b T} * {\b getInstance} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b T}>\par
class plog::util::Singleton< T >\par
}
\par
{
Definition at line {\b 583} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Singleton\:plog::util::Singleton< T >}
{\xe \v plog::util::Singleton< T >\:Singleton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > {\b plog::util::Singleton}< {\b T} >::Singleton (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 592} of file {\b Util.h}.}\par
}
{\xe \v ~Singleton\:plog::util::Singleton< T >}
{\xe \v plog::util::Singleton< T >\:~Singleton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > {\b plog::util::Singleton}< {\b T} >::~{\b Singleton} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 598} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getInstance\:plog::util::Singleton< T >}
{\xe \v plog::util::Singleton< T >\:getInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b T} > {\b static} {\b T} * {\b plog::util::Singleton}< {\b T} >::getInstance (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 604} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Socket Class Reference\par \pard\plain 
{\tc\tcl2 \v Socket}
{\xe \v Socket}
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
\par
{
{\f2 #include <socket.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Socket} (string address, int port, bool *{\b interrupt}, {\b SocketMode} mode, int {\b buffer_size})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Socket} (string address, int port, bool *{\b interrupt}, {\b SocketMode} mode, int {\b buffer_size}, int max_requests)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b listen} (int max_requests)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b connect} (string address, int port)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bind} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b accept} (char *client_addr, int *client_port)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b send} (uint8_t *bytes, size_t size, int channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b receive} (uint8_t *buffer, int channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b close} (int channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b has_error} (int channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_connected} (int channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b has_event} (int channel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_message_sync} (uint8_t *buffer, int channel)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b buffer_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b socket_flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b socket_fd}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool * {\b interrupt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 15} of file {\b socket.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Socket\:Socket}
{\xe \v Socket\:Socket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Socket::Socket (string  {\i address}, int  {\i port}, bool *  {\i interrupt}, {\b SocketMode}  {\i mode}, int  {\i buffer_size})}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b socket.cpp}.}\par
}
{\xe \v Socket\:Socket}
{\xe \v Socket\:Socket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Socket::Socket (string  {\i address}, int  {\i port}, bool *  {\i interrupt}, {\b SocketMode}  {\i mode}, int  {\i buffer_size}, int  {\i max_requests})}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b socket.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v accept\:Socket}
{\xe \v Socket\:accept}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Socket::accept (char *  {\i client_addr}, int *  {\i client_port})}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 120} of file {\b socket.cpp}.}\par
}
{\xe \v bind\:Socket}
{\xe \v Socket\:bind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Socket::bind ()}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 107} of file {\b socket.cpp}.}\par
}
{\xe \v close\:Socket}
{\xe \v Socket\:close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Socket::close (int  {\i channel})}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 234} of file {\b socket.cpp}.}\par
}
{\xe \v connect\:Socket}
{\xe \v Socket\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Socket::connect (string  {\i address}, int  {\i port})}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 101} of file {\b socket.cpp}.}\par
}
{\xe \v get_message_sync\:Socket}
{\xe \v Socket\:get_message_sync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Socket::get_message_sync (uint8_t *  {\i buffer}, int  {\i channel})}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 247} of file {\b socket.cpp}.}\par
}
{\xe \v has_error\:Socket}
{\xe \v Socket\:has_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Socket::has_error (int  {\i channel})}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 179} of file {\b socket.cpp}.}\par
}
{\xe \v has_event\:Socket}
{\xe \v Socket\:has_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Socket::has_event (int  {\i channel})}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 133} of file {\b socket.cpp}.}\par
}
{\xe \v is_connected\:Socket}
{\xe \v Socket\:is_connected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Socket::is_connected (int  {\i channel})}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 194} of file {\b socket.cpp}.}\par
}
{\xe \v listen\:Socket}
{\xe \v Socket\:listen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Socket::listen (int  {\i max_requests})}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 116} of file {\b socket.cpp}.}\par
}
{\xe \v receive\:Socket}
{\xe \v Socket\:receive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Socket::receive (uint8_t *  {\i buffer}, int  {\i channel})}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 151} of file {\b socket.cpp}.}\par
}
{\xe \v send\:Socket}
{\xe \v Socket\:send}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Socket::send (uint8_t *  {\i bytes}, size_t  {\i size}, int  {\i channel})}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 211} of file {\b socket.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buffer_size\:Socket}
{\xe \v Socket\:buffer_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Socket::buffer_size}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b socket.hpp}.}\par
}
{\xe \v interrupt\:Socket}
{\xe \v Socket\:interrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool* Socket::interrupt}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b socket.hpp}.}\par
}
{\xe \v socket_fd\:Socket}
{\xe \v Socket\:socket_fd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Socket::socket_fd}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b socket.hpp}.}\par
}
{\xe \v socket_flags\:Socket}
{\xe \v Socket\:socket_flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Socket::socket_flags}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b socket.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/socket_io/{\b socket.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/common/socket_io/{\b socket.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::util::Time Struct Reference\par \pard\plain 
{\tc\tcl2 \v plog::util::Time}
{\xe \v plog::util::Time}
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
\par
{
{\f2 #include <Util.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b time_t} {\b time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b unsigned} {\b short} {\b millitm}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 155} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v millitm\:plog::util::Time}
{\xe \v plog::util::Time\:millitm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b unsigned} {\b short} plog::util::Time::millitm}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 158} of file {\b Util.h}.}\par
}
{\xe \v time\:plog::util::Time}
{\xe \v plog::util::Time\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b time_t} plog::util::Time::time}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 157} of file {\b Util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::TxtFormatter Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::TxtFormatter}
{\xe \v plog::TxtFormatter}
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
\par
{
{\f2 #include <TxtFormatter.h>}}\par
Inheritance diagram for plog::TxtFormatter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_txt_formatter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b plog::TxtFormatterImpl< false >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b header} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b format} ({\b const} {\b Record} &{\b record})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 34} of file {\b TxtFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Formatters/{\b TxtFormatter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::TxtFormatterImpl< useUtcTime > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v plog::TxtFormatterImpl< useUtcTime >}
{\xe \v plog::TxtFormatterImpl< useUtcTime >}
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
\par
{
{\f2 #include <TxtFormatter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b header} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b format} ({\b const} {\b Record} &{\b record})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b bool} useUtcTime>\par
class plog::TxtFormatterImpl< useUtcTime >\par
}
\par
{
Definition at line {\b 9} of file {\b TxtFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v format\:plog::TxtFormatterImpl< useUtcTime >}
{\xe \v plog::TxtFormatterImpl< useUtcTime >\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b bool} useUtcTime> {\b static} {\b util::nstring} {\b plog::TxtFormatterImpl}< {\b useUtcTime} >::format ({\b const} {\b Record} &  {\i record}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b TxtFormatter.h}.}\par
}
{\xe \v header\:plog::TxtFormatterImpl< useUtcTime >}
{\xe \v plog::TxtFormatterImpl< useUtcTime >\:header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b bool} useUtcTime> {\b static} {\b util::nstring} {\b plog::TxtFormatterImpl}< {\b useUtcTime} >::header (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b TxtFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Formatters/{\b TxtFormatter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::TxtFormatterUtcTime Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::TxtFormatterUtcTime}
{\xe \v plog::TxtFormatterUtcTime}
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
\par
{
{\f2 #include <TxtFormatter.h>}}\par
Inheritance diagram for plog::TxtFormatterUtcTime:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_txt_formatter_utc_time.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Static Public Member Functions inherited from {\b plog::TxtFormatterImpl< true >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b header} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b util::nstring} {\b format} ({\b const} {\b Record} &{\b record})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 35} of file {\b TxtFormatter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Formatters/{\b TxtFormatter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UserStore Class Reference\par \pard\plain 
{\tc\tcl2 \v UserStore}
{\xe \v UserStore}
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\par
{
{\f2 #include <models.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UserStore} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~UserStore} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map< string, {\b Device} * > {\b get_user_devices} (const string username)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< string > {\b get_connected_users} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_user_devices} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b add_user} (const string username)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b register_device} (const string username, shared_ptr< {\b ServerContext} > context)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b register_connection} (const string username, shared_ptr< {\b ServerContext} > context)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b unregister_connection} (shared_ptr< {\b ServerContext} > context)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Device} * {\b get_device} (const string username, const string address)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 34} of file {\b models.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v UserStore\:UserStore}
{\xe \v UserStore\:UserStore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UserStore::UserStore ()}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b models.cpp}.}\par
}
{\xe \v ~UserStore\:UserStore}
{\xe \v UserStore\:~UserStore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UserStore::~UserStore ()}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v add_user\:UserStore}
{\xe \v UserStore\:add_user}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool UserStore::add_user (const string  {\i username})}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b models.cpp}.}\par
}
{\xe \v get_connected_users\:UserStore}
{\xe \v UserStore\:get_connected_users}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< string > UserStore::get_connected_users ()}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 149} of file {\b models.cpp}.}\par
}
{\xe \v get_device\:UserStore}
{\xe \v UserStore\:get_device}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Device} * UserStore::get_device (const string  {\i username}, const string  {\i address})}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 140} of file {\b models.cpp}.}\par
}
{\xe \v get_user_devices\:UserStore}
{\xe \v UserStore\:get_user_devices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UserStore::get_user_devices ()}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 159} of file {\b models.cpp}.}\par
}
{\xe \v get_user_devices\:UserStore}
{\xe \v UserStore\:get_user_devices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
map< string, {\b Device} * > UserStore::get_user_devices (const string  {\i username})}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 131} of file {\b models.cpp}.}\par
}
{\xe \v register_connection\:UserStore}
{\xe \v UserStore\:register_connection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool UserStore::register_connection (const string  {\i username}, shared_ptr< {\b ServerContext} >  {\i context})}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b models.cpp}.}\par
}
{\xe \v register_device\:UserStore}
{\xe \v UserStore\:register_device}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool UserStore::register_device (const string  {\i username}, shared_ptr< {\b ServerContext} >  {\i context})}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b models.cpp}.}\par
}
{\xe \v unregister_connection\:UserStore}
{\xe \v UserStore\:unregister_connection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool UserStore::unregister_connection (shared_ptr< {\b ServerContext} >  {\i context})}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 104} of file {\b models.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/userland/{\b models.hpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/server/userland/{\b models.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::UTF8Converter Class Reference\par \pard\plain 
{\tc\tcl2 \v plog::UTF8Converter}
{\xe \v plog::UTF8Converter}
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
\par
{
{\f2 #include <UTF8Converter.h>}}\par
Inheritance diagram for plog::UTF8Converter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classplog_1_1_u_t_f8_converter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} std::string {\b header} ({\b const} {\b util::nstring} &{\b str})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} std::string {\b convert} ({\b const} {\b util::nstring} &{\b str})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b UTF8Converter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v convert\:plog::UTF8Converter}
{\xe \v plog::UTF8Converter\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} std::string plog::UTF8Converter::convert ({\b const} {\b util::nstring} &  {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b UTF8Converter.h}.}\par
}
{\xe \v header\:plog::UTF8Converter}
{\xe \v plog::UTF8Converter\:header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} std::string plog::UTF8Converter::header ({\b const} {\b util::nstring} &  {\i str}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b UTF8Converter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/Converters/{\b UTF8Converter.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
plog::detail::meta::Yes Struct Reference\par \pard\plain 
{\tc\tcl2 \v plog::detail::meta::Yes}
{\xe \v plog::detail::meta::Yes}
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
\par
{
{\f2 #include <Record.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char} {\b a} [2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 33} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v a\:plog::detail::meta::Yes}
{\xe \v plog::detail::meta::Yes\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b char} plog::detail::meta::Yes::a[2]}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b Record.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/plog/{\b Record.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/client/eventhub/file_exchange.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/file_exchange.cpp}
{\xe \v src/client/eventhub/file_exchange.cpp}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <memory>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include "file_exchange.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
file_exchange.cpp\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/file_exchange.cpp}
{\xe \v src/client/eventhub/file_exchange.cpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include <sstream>}\par
00003 {\cf21 #include <memory>}\par
00004 {\cf21 #include <plog/Log.h>}\par
00005 \par
00006 {\cf21 #include "file_exchange.hpp"}\par
00007 \par
00008 {\cf17 using namespace }std;\par
00009 \par
00010 ClientFileSync::ClientFileSync(shared_ptr<ClientContext> context, shared_ptr<Socket> socket) \{\par
00011     this->context = context;\par
00012     this->socket  = socket;\par
00014     ostringstream oss;\par
00015     oss << this->context->sync_dir;\par
00016     this->file_handler = make_shared<FileHandler>(this->context->sync_dir);\par
00017 \}\par
00018 \par
00019 {\cf18 void} ClientFileSync::loop() \{\par
00020     shared_ptr<FileMetadata> metadata;\par
00021     ostringstream oss;\par
00022     oss << this->context->sync_dir;\par
00023     file_handler->receive_file(oss.str(), metadata, socket, socket->socket_fd);\par
00024     {\cf20 // char buffer[BUFFER_SIZE];}\par
00025     {\cf20 // int  total_bytes = 0;}\par
00026     {\cf20 // int  collected_bytes;}\par
00027     {\cf20 // int  iteration;}\par
00028 \par
00029     {\cf20 // int chars_read = socket->get_message_sync((uint8_t *)buffer, socket->socket_fd);}\par
00030 \par
00031     {\cf20 // while (chars_read != 0) \{}\par
00032     {\cf20 //     collected_bytes = 0;}\par
00033     {\cf20 //     iteration       = 1;}\par
00034     {\cf20 //     chars_read      = 0;}\par
00035     {\cf20 //     if (chars_read < 0)}\par
00036     {\cf20 //         printf("ERROR reading from socket\\n");}\par
00037     {\cf20 //     Packet *packet = new Packet((uint8_t *)buffer);}\par
00038     {\cf20 //     if (packet->type != FileMetadataMsg) \{}\par
00039     {\cf20 //         PLOGE << "Invalid packet type. Expected file metadata, received: " << packet->type << endl;}\par
00040     {\cf20 //         break;}\par
00041     {\cf20 //     \}}\par
00042     {\cf20 //     unique_ptr<FileMetadata> metadata(new FileMetadata(packet->payload));}\par
00043     {\cf20 //     PLOGI << "Received file " << metadata->name << endl;}\par
00044     {\cf20 //     total_bytes = metadata->size;}\par
00045     {\cf20 //     printf("File size: %ld\\n", (long)total_bytes);}\par
00046 \par
00047     {\cf20 //     ostringstream oss;}\par
00048     {\cf20 //     oss << this->context->sync_dir << "/" << metadata->name;}\par
00049     {\cf20 //     string filepath = oss.str();}\par
00050     {\cf20 //     PLOGI << "Storing file in " << filepath.c_str() << endl;}\par
00051     {\cf20 //     FILE *file_output = fopen(filepath.c_str(), "wb");}\par
00052 \par
00053     {\cf20 //     while (collected_bytes < total_bytes) \{}\par
00054     {\cf20 //         chars_read = socket->get_message_sync((uint8_t *)buffer, socket->socket_fd);}\par
00055     {\cf20 //         PLOGD << "Chars read: " << chars_read << endl;}\par
00056     {\cf20 //         if (chars_read < 0) \{}\par
00057     {\cf20 //             printf("ERROR reading from socket\\n");}\par
00058     {\cf20 //             break;}\par
00059     {\cf20 //         \}}\par
00060     {\cf20 //         PLOGD << "Iteration: " << iteration << endl;}\par
00061     {\cf20 //         iteration += 1;}\par
00062     {\cf20 //         unique_ptr<Packet> packet(new Packet((uint8_t *)buffer));}\par
00063     {\cf20 //         if (packet->type != FileChunk) \{}\par
00064     {\cf20 //             PLOGE << "Invalid file chunk: " << endl;}\par
00065     {\cf20 //             PLOGD << "Packet type: " << packet->type << endl;}\par
00066     {\cf20 //             PLOGD << "Packet seq idx: " << packet->seq_index << endl;}\par
00067     {\cf20 //             PLOGD << "Packet total size: " << packet->total_size << endl;}\par
00068     {\cf20 //             PLOGD << "Packet payload size: " << packet->payload_size << endl;}\par
00069     {\cf20 //             PLOGD << "Packet payload: " << packet->payload << endl;}\par
00070     {\cf20 //             return;}\par
00071     {\cf20 //         \}}\par
00072     {\cf20 //         fwrite(packet->payload, 1, packet->payload_size * sizeof(uint8_t), file_output);}\par
00073     {\cf20 //         PLOGD << "Received packet type " << packet->type << endl;}\par
00074     {\cf20 //         PLOGD << "File size: " << (long)packet->total_size << endl;}\par
00075     {\cf20 //         PLOGD << "Chunk size: " << packet->payload_size << endl;}\par
00076     {\cf20 //         PLOGD << "Chunk index: " << packet->seq_index << endl;}\par
00077     {\cf20 //         collected_bytes += packet->payload_size;}\par
00078     {\cf20 //         PLOGD << "Collected bytes: " << collected_bytes << endl;}\par
00079     {\cf20 //         total_bytes = packet->total_size;}\par
00080     {\cf20 //         bzero(buffer, BUFFER_SIZE);}\par
00081     {\cf20 //     \}}\par
00082     {\cf20 //     if (file_output != NULL) \{}\par
00083     {\cf20 //         fclose(file_output);}\par
00084     {\cf20 //     \}}\par
00085     {\cf20 //     chars_read = socket->get_message_sync((uint8_t *)buffer, socket->socket_fd);}\par
00086     {\cf20 // \}}\par
00087 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/client/eventhub/file_exchange.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/file_exchange.hpp}
{\xe \v src/client/eventhub/file_exchange.hpp}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../common/file_io/file_io.hpp"}\par
{\f2 #include "../../common/socket_io/socket.hpp"}\par
{\f2 #include "../session/session.hpp"}\par
{\f2 #include <sys/types.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClientFileSync}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
file_exchange.hpp\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/file_exchange.hpp}
{\xe \v src/client/eventhub/file_exchange.hpp}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef CLIENT_FILEX_H}\par
00002 {\cf21 #define CLIENT_FILEX_H}\par
00003 \par
00004 {\cf21 #include "../../common/file_io/file_io.hpp"}\par
00005 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00006 {\cf21 #include "../session/session.hpp"}\par
00007 {\cf21 #include <sys/types.h>}\par
00008 \par
00009 {\cf17 class }ClientFileSync \{\par
00010     shared_ptr<ClientContext> context;\par
00011     shared_ptr<Socket>        socket;\par
00012     shared_ptr<FileHandler>   file_handler;\par
00013 \par
00014 {\cf17 public}:\par
00015     ClientFileSync(shared_ptr<ClientContext> context, shared_ptr<Socket> socket);\par
00016     {\cf18 void} loop();\par
00017     {\cf18 void} get_event();\par
00018 \};\par
00019 \par
00020 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/client/eventhub/publisher.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/publisher.cpp}
{\xe \v src/client/eventhub/publisher.cpp}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "publisher.hpp"}\par
{\f2 #include <cpp-inquirer/inquirer.h>}\par
{\f2 #include <iostream>}\par
{\f2 #include <map>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include <thread>}\par
{\f2 #include <vector>}\par
{\f2 #include <pthread.h>}\par
{\f2 #include <sstream>}\par
{\f2 #include <regex>}\par
{\f2 #include <fstream>}\par
{\f2 #include <sys/sendfile.h>}\par
{\f2 #include <fcntl.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handle_upload} (shared_ptr< {\b alx::Inquirer} > inquirer, const string sync_dir)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handle_download} (shared_ptr< {\b alx::Inquirer} > inquirer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handle_delete} (shared_ptr< {\b alx::Inquirer} > inquirer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handle_list_server} (shared_ptr< {\b alx::Inquirer} > inquirer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handle_list_client} (shared_ptr< {\b alx::Inquirer} > inquirer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handle_exit} (shared_ptr< {\b alx::Inquirer} > inquirer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b run_file_monitor} (void *monitor)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< std::string > {\b commands}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v handle_delete\:publisher.cpp}
{\xe \v publisher.cpp\:handle_delete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handle_delete (shared_ptr< {\b alx::Inquirer} >  {\i inquirer})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b publisher.cpp}.}\par
}
{\xe \v handle_download\:publisher.cpp}
{\xe \v publisher.cpp\:handle_download}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handle_download (shared_ptr< {\b alx::Inquirer} >  {\i inquirer})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b publisher.cpp}.}\par
}
{\xe \v handle_exit\:publisher.cpp}
{\xe \v publisher.cpp\:handle_exit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handle_exit (shared_ptr< {\b alx::Inquirer} >  {\i inquirer})}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b publisher.cpp}.}\par
}
{\xe \v handle_list_client\:publisher.cpp}
{\xe \v publisher.cpp\:handle_list_client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handle_list_client (shared_ptr< {\b alx::Inquirer} >  {\i inquirer})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b publisher.cpp}.}\par
}
{\xe \v handle_list_server\:publisher.cpp}
{\xe \v publisher.cpp\:handle_list_server}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handle_list_server (shared_ptr< {\b alx::Inquirer} >  {\i inquirer})}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b publisher.cpp}.}\par
}
{\xe \v handle_upload\:publisher.cpp}
{\xe \v publisher.cpp\:handle_upload}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void handle_upload (shared_ptr< {\b alx::Inquirer} >  {\i inquirer}, const string  {\i sync_dir})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b publisher.cpp}.}\par
}
{\xe \v run_file_monitor\:publisher.cpp}
{\xe \v publisher.cpp\:run_file_monitor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * run_file_monitor (void *  {\i monitor})}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 82} of file {\b publisher.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v commands\:publisher.cpp}
{\xe \v publisher.cpp\:commands}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector<std::string> commands}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    {\cf22 "upload"},\par
    {\cf22 "download"},\par
    {\cf22 "delete"},\par
    {\cf22 "list_server"},\par
    {\cf22 "list_client"},\par
    {\cf22 "exit"}\}\par
}
{
Definition at line {\b 73} of file {\b publisher.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
publisher.cpp\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/publisher.cpp}
{\xe \v src/client/eventhub/publisher.cpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "publisher.hpp"}\par
00002 {\cf21 #include <cpp-inquirer/inquirer.h>}\par
00003 {\cf21 #include <iostream>}\par
00004 {\cf21 #include <map>}\par
00005 {\cf21 #include <plog/Log.h>}\par
00006 {\cf21 #include <thread>}\par
00007 {\cf21 #include <vector>}\par
00008 {\cf21 #include <pthread.h>}\par
00009 {\cf21 #include <sstream>}\par
00010 {\cf21 #include <regex>}\par
00011 {\cf21 #include <fstream>}\par
00012 {\cf21 #include <sys/sendfile.h>}\par
00013 {\cf21 #include <fcntl.h>}\par
00014 \par
00015 \par
00016 \par
00017 {\cf17 using namespace }std;\par
00018 \par
00019 {\cf18 void} handle_upload(shared_ptr<alx::Inquirer> inquirer, {\cf17 const} {\cf18 string} sync_dir) \{\par
00020     inquirer->add_question(\{{\cf22 "filepath"}, {\cf22 "Which file would you like to upload?"}\});\par
00021     inquirer->ask();\par
00022     {\cf17 const} {\cf18 string} file_path = inquirer->answer({\cf22 "filepath"});\par
00023     PLOGI << {\cf22 "Uploading file to server from "} << file_path << endl;\par
00024     regex  rgx({\cf22 "^(.*\\\\/)([^\\\\/]+)$"});\par
00025     smatch matches;\par
00026     regex_search(file_path, matches, rgx);\par
00027     {\cf18 string} filename = matches[2];\par
00028     ostringstream output_path;\par
00029     output_path << sync_dir << {\cf22 "/"} << filename;\par
00030     ostringstream command;\par
00031     command << {\cf22 "cp "} << file_path << {\cf22 " "} << sync_dir << {\cf22 "/"} << filename;\par
00032     PLOGW << command.str() << endl;\par
00033     {\cf19 try} \{\par
00034         system(command.str().c_str());\par
00035     \} {\cf19 catch}({\cf17 const} exception &exc) \{\par
00036         PLOGE << {\cf22 "Cannot copy file"} << file_path << {\cf22 ". Reason: "} << exc.what() << endl; \par
00037     \}\par
00038 \};\par
00039 \par
00040 {\cf18 void} handle_download(shared_ptr<alx::Inquirer> inquirer) \{\par
00041     inquirer->add_question(\{{\cf22 "file"}, {\cf22 "Which file would you like to download?"}\});\par
00042     inquirer->ask();\par
00043     {\cf17 const} {\cf18 string} filename = inquirer->answer({\cf22 "file"});\par
00044 \};\par
00045 \par
00046 {\cf18 void} handle_delete(shared_ptr<alx::Inquirer> inquirer) \{\par
00047     inquirer->add_question(\{{\cf22 "file"}, {\cf22 "Which file would you like to delete?"}\});\par
00048     inquirer->ask();\par
00049     {\cf17 const} {\cf18 string} filename = inquirer->answer({\cf22 "file"});\par
00050 \};\par
00051 \par
00052 {\cf18 void} handle_list_server(shared_ptr<alx::Inquirer> inquirer)\{\par
00053 \par
00054 \};\par
00055 \par
00056 {\cf18 void} handle_list_client(shared_ptr<alx::Inquirer> inquirer)\{\par
00057 \par
00058 \};\par
00059 \par
00060 {\cf18 void} handle_exit(shared_ptr<alx::Inquirer> inquirer) \{\par
00061 \}\par
00062 \par
00063 {\cf20 // using func=function<void(shared_ptr<alx::Inquirer>)>;}\par
00064 {\cf20 //}\par
00065 {\cf20 // static const map<std::string, std::function<void>(*)(shared_ptr<alx::Inquirer>) > command_map = \{}\par
00066 {\cf20 //     \{"upload", &handle_upload \},}\par
00067 {\cf20 //     \{"download", &handle_download \},}\par
00068 {\cf20 //     \{"delete", &handle_delete \},}\par
00069 {\cf20 //     \{"list_server", &handle_list_server \},}\par
00070 {\cf20 //     \{"list_client", &handle_list_client \},}\par
00071 {\cf20 //     \{"exit", &handle_exit \}}\par
00072 {\cf20 // \};}\par
00073 vector<std::string> commands = \{\par
00074     {\cf22 "upload"},\par
00075     {\cf22 "download"},\par
00076     {\cf22 "delete"},\par
00077     {\cf22 "list_server"},\par
00078     {\cf22 "list_client"},\par
00079     {\cf22 "exit"}\};\par
00080 {\cf20 // for(const auto &[key, _]: command_map) \{ commands.push_back(key); \};}\par
00081 \par
00082 {\cf18 void} *run_file_monitor({\cf18 void} *monitor) \{\par
00083     Inotify* file_monitor = (Inotify *)monitor;\par
00084     {\cf19 while}({\cf17 true}) \{\par
00085         file_monitor->read_event();\par
00086         usleep(1000);\par
00087     \}\par
00088     {\cf19 return} NULL;\par
00089 \}\par
00090 \par
00091 ClientPublisher::ClientPublisher(shared_ptr<ClientContext> context, shared_ptr<Socket> socket) \{\par
00092     this->context = context;\par
00093     this->socket  = socket;\par
00094 \par
00095     {\cf17 const} {\cf18 char} *folder_path = this->context->sync_dir.c_str();\par
00096     Inotify* inotify = {\cf17 new} Inotify(this->socket, folder_path);\par
00097 \par
00098     pthread_t monitor_thread;\par
00099     pthread_create(&monitor_thread, NULL, run_file_monitor, inotify);\par
00100 \}\par
00101 \par
00102 \par
00103 {\cf18 void} ClientPublisher::loop() \{\par
00104 \par
00105     {\cf19 while} (!*socket->interrupt) \{\par
00106         shared_ptr<alx::Inquirer> inquirer({\cf17 new} alx::Inquirer(alx::Inquirer({\cf22 "Drop the Box"})));\par
00107         inquirer->add_question(\{{\cf22 "cmd"}, {\cf22 "Select a command:"}, commands\});\par
00108         inquirer->ask();\par
00109         {\cf17 const} {\cf18 string} command = inquirer->answer({\cf22 "cmd"});\par
00110         {\cf19 if} (std::find(commands.begin(), commands.end(), command) != commands.end()) \{\par
00111             PLOGW << {\cf22 "Command result: "} << command << endl;\par
00112         \}\par
00113         {\cf19 if} (command.compare({\cf22 "upload"}) == 0) \{\par
00114             handle_upload(inquirer, this->context->sync_dir.c_str());\par
00115         \} {\cf19 else} {\cf19 if} (command.compare({\cf22 "download"}) == 0) \{\par
00116             handle_download(inquirer);\par
00117         \} {\cf19 else} {\cf19 if} (command.compare({\cf22 "delete"}) == 0) \{\par
00118             handle_delete(inquirer);\par
00119         \} {\cf19 else} {\cf19 if} (command.compare({\cf22 "list_server"}) == 0) \{\par
00120             handle_list_server(inquirer);\par
00121         \} {\cf19 else} {\cf19 if} (command.compare({\cf22 "list_client"}) == 0) \{\par
00122             handle_list_client(inquirer);\par
00123         \} {\cf19 else} {\cf19 if} (command.compare({\cf22 "exit"}) == 0) \{\par
00124             PLOGI << {\cf22 "Bye!"} << endl;\par
00125             exit(0);\par
00126         \} {\cf19 else} \{\par
00127             PLOGE << {\cf22 "Command not found: "} << command << endl;\par
00128         \}\par
00129     \}\par
00130     socket->close(socket->socket_fd);\par
00131     pthread_exit(NULL);\par
00132     {\cf19 return};\par
00133 \};\par
00134 \par
00135 {\cf18 void} ClientPublisher::send_event() \{\par
00136     PLOGE << {\cf22 "Publisher send event"} << endl;\par
00137 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/eventhub/publisher.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/publisher.cpp}
{\xe \v src/server/eventhub/publisher.cpp}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "publisher.hpp"}\par
{\f2 #include "../../common/vars.hpp"}\par
{\f2 #include "../file_io/file_io.hpp"}\par
{\f2 #include <iostream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <memory>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include <strings.h>}\par
{\f2 #include <sys/stat.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
publisher.cpp\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/publisher.cpp}
{\xe \v src/server/eventhub/publisher.cpp}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "publisher.hpp"}\par
00002 {\cf21 #include "../../common/vars.hpp"}\par
00003 {\cf21 #include "../file_io/file_io.hpp"}\par
00004 {\cf21 #include <iostream>}\par
00005 {\cf21 #include <sstream>}\par
00006 {\cf21 #include <memory>}\par
00007 {\cf21 #include <plog/Log.h>}\par
00008 {\cf21 #include <strings.h>}\par
00009 {\cf21 #include <sys/stat.h>}\par
00010 \par
00011 {\cf17 using namespace }std;\par
00012 \par
00013 ServerEventPublisher::ServerEventPublisher(shared_ptr<ServerContext> context) \{\par
00014     this->context = context;\par
00015 \}\par
00016 \par
00017 {\cf18 void} ServerEventPublisher::loop() \{\par
00018     shared_ptr<Socket> socket  = this->context->socket;\par
00019     {\cf18 int}                channel = this->context->connection->channel;\par
00020     uint8_t            buffer[BUFFER_SIZE];\par
00021     {\cf18 string} username = this->context->device->username;\par
00022     ostringstream oss;\par
00023     oss << {\cf22 "./srv_sync_dir/"} << username; \par
00024     unique_ptr<FileHandler> file_handler({\cf17 new} FileHandler(oss.str()));\par
00025     PLOGI << {\cf22 "------------- Connected to event publisher"} << endl;\par
00026     {\cf19 while} (!socket->has_error(channel)) \{\par
00027         {\cf19 if}(context->socket->has_event(channel)) \{\par
00028             shared_ptr<FileMetadata> metadata;\par
00029             file_handler->receive_file(oss.str(), metadata, socket, channel);\par
00030             map<string, Device *> user_devices = context->storage->get_user_devices(username);\par
00031             map<string, Device *>::iterator dev_iter;\par
00032             {\cf19 for} (dev_iter = user_devices.begin(); dev_iter != user_devices.end() && dev_iter->first != username; dev_iter++) \{\par
00033                 Device *device = dev_iter->second;\par
00034                 map<int, shared_ptr<Connection> > connections = device->connections;\par
00035                 map<int, shared_ptr<Connection> >::iterator conn_it;\par
00036                 {\cf19 for} (conn_it = connections.begin(); conn_it != connections.end(); conn_it++) \{\par
00037                     shared_ptr<Connection> connection = conn_it->second;\par
00038                     {\cf19 if} (conn_it->second->session_type == FileExchange) \{\par
00039                         ostringstream file_path;\par
00040                         file_path << {\cf22 "./srv_sync_dir"} << username << metadata->name;\par
00041                         {\cf18 int} path_size = file_path.str().length() + 1;\par
00042                         {\cf18 char} *fpath = ({\cf18 char} *)malloc(path_size);\par
00043                         memcpy(fpath, file_path.str().c_str(), path_size);\par
00044                         PLOGW << {\cf22 "Notifying connection on channel "} << connection->channel << {\cf22 " about file"} << fpath;\par
00045                         write(connection->pipe_fd[1], fpath, strlen(fpath));\par
00046                     \}\par
00047                 \}\par
00048             \}\par
00049 \par
00050             PLOGI << {\cf22 "Publisher has received a file on channel "} << channel << endl;\par
00051         \}\par
00052     \}\par
00053 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/client/eventhub/publisher.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/publisher.hpp}
{\xe \v src/client/eventhub/publisher.hpp}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../common/file_io/inotify.hpp"}\par
{\f2 #include "../../common/socket_io/socket.hpp"}\par
{\f2 #include "../session/session.hpp"}\par
{\f2 #include <memory>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClientPublisher}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
publisher.hpp\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/publisher.hpp}
{\xe \v src/client/eventhub/publisher.hpp}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef CLIENT_PUB_H}\par
00002 {\cf21 #define CLIENT_PUB_H}\par
00003 \par
00004 {\cf21 #include "../../common/file_io/inotify.hpp"}\par
00005 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00006 {\cf21 #include "../session/session.hpp"}\par
00007 {\cf21 #include <memory>}\par
00008 \par
00009 {\cf17 using namespace }std;\par
00010 \par
00011 {\cf17 class }ClientPublisher \{\par
00012     shared_ptr<ClientContext> context;\par
00013     shared_ptr<Socket>        socket;\par
00014 \par
00015 {\cf17 public}:\par
00016     ClientPublisher(shared_ptr<ClientContext> context, shared_ptr<Socket> socket);\par
00017     {\cf18 void} loop();\par
00018     {\cf18 void} send_event();\par
00019 \};\par
00020 \par
00021 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/eventhub/publisher.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/publisher.hpp}
{\xe \v src/server/eventhub/publisher.hpp}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "../../common/socket_io/socket.hpp"}\par
{\f2 #include "../session/models.hpp"}\par
{\f2 #include "../userland/models.hpp"}\par
{\f2 #include "../../common/file_io/file_io.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ServerEventPublisher}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
publisher.hpp\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/publisher.hpp}
{\xe \v src/server/eventhub/publisher.hpp}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef PUBLISHER_H}\par
00002 {\cf21 #define PUBLISHER_H}\par
00003 \par
00004 {\cf21 #include <memory>}\par
00005 \par
00006 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00007 {\cf21 #include "../session/models.hpp"}\par
00008 {\cf21 #include "../userland/models.hpp"}\par
00009 {\cf21 #include "../../common/file_io/file_io.hpp"}\par
00010 \par
00011 {\cf17 using namespace }std;\par
00012 \par
00013 {\cf17 class }ServerEventPublisher \{\par
00014     uint8_t                  *buffer;\par
00015     shared_ptr<ServerContext> context;\par
00016 \par
00017 {\cf17 public}:\par
00018     ServerEventPublisher(shared_ptr<ServerContext> context);\par
00019     {\cf18 void} loop();\par
00020     {\cf18 void} send_event();\par
00021 \};\par
00022 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/client/eventhub/subscriber.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/subscriber.cpp}
{\xe \v src/client/eventhub/subscriber.cpp}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "subscriber.hpp"}\par
{\f2 #include <thread>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_event} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v get_event\:subscriber.cpp}
{\xe \v subscriber.cpp\:get_event}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void get_event ()}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b subscriber.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
subscriber.cpp\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/subscriber.cpp}
{\xe \v src/client/eventhub/subscriber.cpp}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "subscriber.hpp"}\par
00002 {\cf21 #include <thread>}\par
00003 \par
00004 ClientSubscriber::ClientSubscriber(shared_ptr<ClientContext> context, shared_ptr<Socket> socket) \{\par
00005     this->context = context;\par
00006     this->socket  = socket;\par
00007 \}\par
00008 \par
00009 {\cf18 void} ClientSubscriber::loop() \{\par
00010     {\cf18 int} count   = 0;\par
00011     {\cf18 int} channel = this->socket->socket_fd;\par
00012     {\cf19 while} (!*socket->interrupt) \{\par
00013         {\cf20 //count++;}\par
00014         {\cf20 // PLOG_INFO << "Subscriber loop count: " << count << endl;}\par
00015         {\cf20 // PLOGI << "Subscriber channel: " << channel << endl;}\par
00016         {\cf20 // sleep(5);}\par
00017         {\cf20 // std::this_thread::sleep_for(std::chrono::seconds(5));}\par
00018     \}\par
00019 \};\par
00020 \par
00021 {\cf18 void} get_event()\{\par
00022 \par
00023 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/eventhub/subscriber.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/subscriber.cpp}
{\xe \v src/server/eventhub/subscriber.cpp}
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Log.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include "../../common/vars.hpp"}\par
{\f2 #include "subscriber.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
subscriber.cpp\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/subscriber.cpp}
{\xe \v src/server/eventhub/subscriber.cpp}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <plog/Log.h>}\par
00002 {\cf21 #include <stdlib.h>}\par
00003 {\cf21 #include <unistd.h>}\par
00004 \par
00005 {\cf21 #include "../../common/vars.hpp"}\par
00006 {\cf21 #include "subscriber.hpp"}\par
00007 \par
00008 ServerEventSubscriber::ServerEventSubscriber(shared_ptr<ServerContext> context) \{\par
00009     this->context = context;\par
00010 \}\par
00011 \par
00012 {\cf18 void} ServerEventSubscriber::loop() \{\par
00013     {\cf20 // PLOGI << "------------- Connected to event subscriber" << endl;}\par
00014     shared_ptr<Socket> socket  = this->context->socket;\par
00015     {\cf18 int}                channel = this->context->connection->channel;\par
00016     uint8_t            buffer[BUFFER_SIZE];\par
00017     {\cf20 // PLOGI << "Subscriber has event on channel " << channel << endl;}\par
00018     {\cf19 while} (!context->socket->has_event(channel)) \{\par
00019         {\cf20 //PLOGI << "Subscriber waiting on channel " << channel << "..." << endl;}\par
00020         sleep(1);\par
00021     \}\par
00022     {\cf19 if} (context->socket->has_event(channel)) \{\par
00023         PLOGI << {\cf22 "Subscriber received event on channel "} << channel << endl;\par
00024     \} {\cf19 else} \{\par
00025         PLOGE << {\cf22 "Subscriber did not receive event on channel "} << channel << endl;\par
00026     \}\par
00027 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/client/eventhub/subscriber.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/subscriber.hpp}
{\xe \v src/client/eventhub/subscriber.hpp}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../common/file_io/inotify.hpp"}\par
{\f2 #include "../../common/socket_io/socket.hpp"}\par
{\f2 #include "../session/session.hpp"}\par
{\f2 #include <memory>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClientSubscriber}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
subscriber.hpp\par \pard\plain 
{\tc\tcl2 \v src/client/eventhub/subscriber.hpp}
{\xe \v src/client/eventhub/subscriber.hpp}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef CLIENT_SUB_H}\par
00002 {\cf21 #define CLIENT_SUB_H}\par
00003 \par
00004 {\cf21 #include "../../common/file_io/inotify.hpp"}\par
00005 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00006 {\cf21 #include "../session/session.hpp"}\par
00007 {\cf21 #include <memory>}\par
00008 \par
00009 {\cf17 class }ClientSubscriber \{\par
00010     shared_ptr<ClientContext> context;\par
00011     shared_ptr<Socket>        socket;\par
00012 \par
00013 {\cf17 public}:\par
00014     ClientSubscriber(shared_ptr<ClientContext> context, shared_ptr<Socket> socket);\par
00015     {\cf18 void} loop();\par
00016     {\cf18 void} get_event();\par
00017 \};\par
00018 \par
00019 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/eventhub/subscriber.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/subscriber.hpp}
{\xe \v src/server/eventhub/subscriber.hpp}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../common/socket_io/socket.hpp"}\par
{\f2 #include "../session/models.hpp"}\par
{\f2 #include "../userland/models.hpp"}\par
{\f2 #include <memory>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ServerEventSubscriber}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
subscriber.hpp\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/subscriber.hpp}
{\xe \v src/server/eventhub/subscriber.hpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SUBSCRIBER_H}\par
00002 {\cf21 #define SUBSCRIBER_H}\par
00003 \par
00004 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00005 {\cf21 #include "../session/models.hpp"}\par
00006 {\cf21 #include "../userland/models.hpp"}\par
00007 \par
00008 {\cf21 #include <memory>}\par
00009 \par
00010 {\cf17 using namespace }std;\par
00011 \par
00012 {\cf17 class }ServerEventSubscriber \{\par
00013     shared_ptr<ServerContext> context;\par
00014 \par
00015 {\cf17 public}:\par
00016     ServerEventSubscriber(shared_ptr<ServerContext> context);\par
00017     {\cf18 void} loop();\par
00018     {\cf18 void} get_event();\par
00019 \};\par
00020 \par
00021 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/client/main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/client/main.cpp}
{\xe \v src/client/main.cpp}
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <netdb.h>}\par
{\f2 #include <netinet/in.h>}\par
{\f2 #include <plog/Appenders/ColorConsoleAppender.h>}\par
{\f2 #include <plog/Formatters/TxtFormatter.h>}\par
{\f2 #include <plog/Init.h>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include <sstream>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <string>}\par
{\f2 #include <sys/socket.h>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include "../common/socket_io/socket.hpp"}\par
{\f2 #include "../server/session/session.hpp"}\par
{\f2 #include "session/session.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PORT}\~ 6999\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADDRESS}\~ "dtb-server"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ADDRESS\:main.cpp}
{\xe \v main.cpp\:ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADDRESS\~ "dtb-server"}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b main.cpp}.}\par
}
{\xe \v PORT\:main.cpp}
{\xe \v main.cpp\:PORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PORT\~ 6999}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b main.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b main.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.cpp\par \pard\plain 
{\tc\tcl2 \v src/client/main.cpp}
{\xe \v src/client/main.cpp}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include <netdb.h>}\par
00003 {\cf21 #include <netinet/in.h>}\par
00004 {\cf21 #include <plog/Appenders/ColorConsoleAppender.h>}\par
00005 {\cf21 #include <plog/Formatters/TxtFormatter.h>}\par
00006 {\cf21 #include <plog/Init.h>}\par
00007 {\cf21 #include <plog/Log.h>}\par
00008 {\cf21 #include <sstream>}\par
00009 {\cf21 #include <stdio.h>}\par
00010 {\cf21 #include <stdlib.h>}\par
00011 {\cf21 #include <string.h>}\par
00012 {\cf21 #include <string>}\par
00013 {\cf21 #include <sys/socket.h>}\par
00014 {\cf21 #include <sys/types.h>}\par
00015 {\cf21 #include <unistd.h>}\par
00016 \par
00017 {\cf21 #include "../common/socket_io/socket.hpp"}\par
00018 {\cf21 #include "../server/session/session.hpp"}\par
00019 {\cf21 #include "session/session.hpp"}\par
00020 \par
00021 {\cf21 #define PORT 6999}\par
00022 {\cf21 #define ADDRESS "dtb-server"}\par
00023 \par
00024 {\cf17 using namespace }std;\par
00025 \par
00026 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[]) \{\par
00027 \par
00028     {\cf18 char} *username_ptr = argv[1];\par
00029     {\cf18 char} *address_ptr  = argv[2];\par
00030     {\cf18 char} *port_ptr     = argv[3];\par
00031 \par
00032     {\cf17 static} plog::ColorConsoleAppender<plog::TxtFormatter> consoleAppender;\par
00033     plog::init(plog::verbose, &consoleAppender);\par
00034 \par
00035     {\cf19 if} (username_ptr == NULL) \{\par
00036         PLOGE << {\cf22 "Error! No username provided. Exiting..."} << endl;\par
00037         exit(1);\par
00038     \}\par
00039     {\cf19 if} (address_ptr == NULL) \{\par
00040         PLOGE << {\cf22 "Error! No server address provided. Exiting..."} << endl;\par
00041         exit(1);\par
00042     \}\par
00043     {\cf19 if} (port_ptr == NULL) \{\par
00044         PLOGE << {\cf22 "Error! No server port provided. Exiting..."} << endl;\par
00045         exit(1);\par
00046     \}\par
00047     {\cf18 int}                              server_port = (int)atoi(argv[3]);\par
00048     {\cf18 string}                           server_addr(address_ptr);\par
00049     {\cf18 string}                           username(username_ptr);\par
00050     unique_ptr<ClientSessionManager> manager({\cf17 new} ClientSessionManager(server_addr, server_port, username));\par
00051     {\cf20 // shared_ptr<Socket> socket(new Socket(server_addr_name, (int)server_port, Client, 1024));}\par
00052 \par
00053     {\cf20 // SessionRequest *session = new SessionRequest(CommandPublisher, username);}\par
00054     {\cf20 // uint8_t *bytes;}\par
00055     {\cf20 // uint8_t **bytes_ptr = &bytes;}\par
00056     {\cf20 // size_t sreq_size = session->to_bytes(bytes_ptr);}\par
00057     {\cf20 // Packet *packet = new Packet(ClientSession, 1, sreq_size, sreq_size, bytes);}\par
00058     {\cf20 // size_t packet_size = packet->to_bytes(bytes_ptr);}\par
00059     {\cf20 // n = socket->send(bytes, packet_size, socket->socket_fd);}\par
00060 \par
00061     {\cf20 // if (n < 0)}\par
00062     {\cf20 //     printf("ERROR writing to socket\\n");}\par
00063     {\cf20 // free(packet);}\par
00064     {\cf20 // bzero(buffer,1024);}\par
00065 \par
00066     {\cf20 // while (0) \{}\par
00067     {\cf20 //     printf("Enter the message: ");}\par
00068     {\cf20 //     bzero(buffer, 1024);}\par
00069     {\cf20 //     fgets(buffer, 1024, stdin);}\par
00070     {\cf20 //     uint16_t msg_size = strlen(buffer);}\par
00071     {\cf20 //     uint16_t seq = 1;}\par
00072 \par
00073     {\cf20 //     packet = new Packet(Command, seq, msg_size, msg_size, (uint8_t *)buffer);}\par
00074     {\cf20 //     packet_size = packet->to_bytes(bytes_ptr);}\par
00075 \par
00076     {\cf20 //     std::cout << "Generated " << (char *)bytes << std::endl;}\par
00077     {\cf20 //     n = write(sockfd, bytes, packet_size);}\par
00078     {\cf20 //     if (n < 0)}\par
00079     {\cf20 //         printf("ERROR writing to socket\\n");}\par
00080     {\cf20 //     free(packet);}\par
00081     {\cf20 //     bzero(buffer,1024);}\par
00082     {\cf20 // \}}\par
00083     {\cf20 // int collected_bytes = 0;}\par
00084     {\cf20 // int total_bytes = 1;}\par
00085     {\cf20 // int iteration = 1;}\par
00086     {\cf20 // FILE *file_output = fopen("output_file.txt", "wb");}\par
00087     {\cf20 // while(collected_bytes < total_bytes) \{}\par
00088     {\cf20 //     n = socket->get_message_sync((uint8_t *)buffer, socket->socket_fd);}\par
00089     {\cf20 //     if (n < 0)}\par
00090     {\cf20 //         printf("ERROR reading from socket\\n");}\par
00091     {\cf20 //     cout << "Iteration: " << iteration << endl;}\par
00092     {\cf20 //     iteration += 1;}\par
00093     {\cf20 //     packet = new Packet((uint8_t *)buffer);}\par
00094     {\cf20 //     fwrite(packet->payload, 1, packet->payload_size * sizeof(uint8_t), file_output);}\par
00095     {\cf20 //     printf("Received packet type %d\\n", packet->type);}\par
00096     {\cf20 //     printf("File size: %d\\n", packet->total_size);}\par
00097     {\cf20 //     printf("Chunk size: %d\\n", packet->payload_size);}\par
00098     {\cf20 //     printf("Chunk index: %d\\n", packet->seq_index);}\par
00099     {\cf20 //     collected_bytes += packet->payload_size;}\par
00100     {\cf20 //     cout << "Collected bytes: " << collected_bytes << endl;}\par
00101     {\cf20 //     total_bytes = packet->total_size;}\par
00102     {\cf20 //     free(packet);}\par
00103     {\cf20 //     bzero(buffer, 1024);}\par
00104     {\cf20 // \}}\par
00105     {\cf20 // fclose(file_output);}\par
00106 \par
00107     {\cf19 return} 0;\par
00108 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/main.cpp}
{\xe \v src/server/main.cpp}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstring>}\par
{\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <memory>}\par
{\f2 #include <plog/Appenders/ColorConsoleAppender.h>}\par
{\f2 #include <plog/Formatters/TxtFormatter.h>}\par
{\f2 #include <plog/Init.h>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include <pthread.h>}\par
{\f2 #include <signal.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <errno.h>}\par
{\f2 #include <sys/socket.h>}\par
{\f2 #include <netinet/in.h>}\par
{\f2 #include <arpa/inet.h>}\par
{\f2 #include "../common/socket_io/socket.hpp"}\par
{\f2 #include "../common/vars.hpp"}\par
{\f2 #include "session/session.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b stop_execution} (int signal)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b get_ip} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b interrupt} = false\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v get_ip\:main.cpp}
{\xe \v main.cpp\:get_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * get_ip ()}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b main.cpp}.}\par
}
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 73} of file {\b main.cpp}.}\par
}
{\xe \v stop_execution\:main.cpp}
{\xe \v main.cpp\:stop_execution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void stop_execution (int  {\i signal})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b main.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v interrupt\:main.cpp}
{\xe \v main.cpp\:interrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool interrupt = false}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b main.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.cpp\par \pard\plain 
{\tc\tcl2 \v src/server/main.cpp}
{\xe \v src/server/main.cpp}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <cstring>}\par
00002 {\cf21 #include <fstream>}\par
00003 {\cf21 #include <iostream>}\par
00004 {\cf21 #include <memory>}\par
00005 {\cf21 #include <plog/Appenders/ColorConsoleAppender.h>}\par
00006 {\cf21 #include <plog/Formatters/TxtFormatter.h>}\par
00007 {\cf21 #include <plog/Init.h>}\par
00008 {\cf21 #include <plog/Log.h>}\par
00009 {\cf21 #include <pthread.h>}\par
00010 {\cf21 #include <signal.h>}\par
00011 {\cf21 #include <unistd.h>}\par
00012 {\cf21 #include <errno.h>}\par
00013 {\cf21 #include <sys/socket.h>} \par
00014 {\cf21 #include <netinet/in.h>} \par
00015 {\cf21 #include <arpa/inet.h>}  \par
00016 \par
00017 {\cf20 // User-defined modules}\par
00018 {\cf21 #include "../common/socket_io/socket.hpp"}\par
00019 {\cf21 #include "../common/vars.hpp"}\par
00020 {\cf21 #include "session/session.hpp"}\par
00021 \par
00022 {\cf17 using namespace }std;\par
00023 \par
00024 {\cf18 bool} interrupt = {\cf17 false};\par
00025 \par
00026 {\cf18 void} stop_execution({\cf18 int} signal) \{\par
00027     PLOGW << {\cf22 "Caught signal: "} << strsignal(signal) << {\cf22 "\\n\\n"};\par
00028     interrupt = {\cf17 true};\par
00029 \}\par
00030 \par
00031 {\cf18 char} *get_ip() \{\par
00032     {\cf17 const} {\cf18 char}* google_dns_server = {\cf22 "8.8.8.8"};\par
00033     {\cf18 int} dns_port = 53;\par
00034     {\cf17 struct }sockaddr_in serv;\par
00035     {\cf18 int} sock = socket(AF_INET, SOCK_DGRAM, 0);\par
00036     {\cf20 //Socket could not be created}\par
00037     {\cf19 if}(sock < 0)\par
00038     \{\par
00039         std::cout << {\cf22 "Socket error"} << std::endl;\par
00040     \}\par
00041     memset(&serv, 0, {\cf17 sizeof}(serv));\par
00042     serv.sin_family = AF_INET;\par
00043     serv.sin_addr.s_addr = inet_addr(google_dns_server);\par
00044     serv.sin_port = htons(dns_port);\par
00045     {\cf18 int} err = connect(sock, ({\cf17 const} {\cf17 struct} sockaddr*)&serv, {\cf17 sizeof}(serv));\par
00046     {\cf19 if} (err < 0)\par
00047     \{\par
00048         std::cout << {\cf22 "Error number: "} << errno\par
00049             << {\cf22 ". Error message: "} << strerror(errno) << std::endl;\par
00050     \}\par
00051 \par
00052     {\cf17 struct }sockaddr_in name;\par
00053     socklen_t namelen = {\cf17 sizeof}(name);\par
00054     err = getsockname(sock, ({\cf17 struct} sockaddr*)&name, &namelen);\par
00055 \par
00056     {\cf20 // declara variavel para armazenar ip local da maquina}\par
00057     {\cf18 char} buffer[80];\par
00058     {\cf17 const} {\cf18 char}* p = inet_ntop(AF_INET, &name.sin_addr, buffer, 80);\par
00059     {\cf19 if}(p == NULL)\par
00060     \{\par
00061         std::cout << {\cf22 "Error number: "} << errno\par
00062             << {\cf22 ". Error message: "} << strerror(errno) << std::endl;\par
00063     \}\par
00064 \par
00065     close(sock);\par
00066     {\cf20 // converte ip local para char*}\par
00067     {\cf18 char}* ip_local = {\cf17 new} {\cf18 char}[80];\par
00068     strcpy(ip_local, buffer);\par
00069     {\cf19 return} ip_local;\par
00070 \par
00071 \}\par
00072 \par
00073 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[]) \{\par
00074     {\cf17 static} plog::ColorConsoleAppender<plog::TxtFormatter> consoleAppender;\par
00075     plog::init(plog::debug, &consoleAppender);\par
00076 \par
00077     ::signal(SIGINT, stop_execution);\par
00078     {\cf18 int} port         = SERVER_PORT;\par
00079     {\cf18 int} max_requests = MAX_REQUESTS;\par
00080     {\cf18 int} buffer_size  = BUFFER_SIZE;\par
00081 \par
00082     {\cf20 // char* socket_address = (char *)"0.0.0.0";}\par
00083     {\cf20 // conseguir ip da maquina automaticamente}\par
00084     {\cf18 char}* ip_local = get_ip();\par
00085     PLOGI << {\cf22 "IP local: "} << ip_local << endl;\par
00086     {\cf20 // convertendo char* para string}\par
00087     {\cf20 //string socket_address = string(ip_local);}\par
00088     {\cf18 string} socket_address = {\cf22 "0.0.0.0"};\par
00089     PLOGI << {\cf22 "Starting server on "} << socket_address << {\cf22 ":"} << port << endl;\par
00090     shared_ptr<Socket> socket = make_shared<Socket>(socket_address, port, &interrupt, Server, buffer_size, max_requests);\par
00091 \par
00092     unique_ptr<SessionManager> session_manager({\cf17 new} SessionManager(socket));\par
00093     session_manager->interrupt = &interrupt;\par
00094     session_manager->start();\par
00095 \par
00096     {\cf19 return} 0;\par
00097 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/client/session/session.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/client/session/session.cpp}
{\xe \v src/client/session/session.cpp}
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstdlib>}\par
{\f2 #include <iostream>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include <pthread.h>}\par
{\f2 #include <signal.h>}\par
{\f2 #include <sstream>}\par
{\f2 #include <sys/stat.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include "../../common/eventhub/models.hpp"}\par
{\f2 #include "../../common/file_io/file_io.hpp"}\par
{\f2 #include "../../common/session/models.hpp"}\par
{\f2 #include "../../common/socket_io/socket.hpp"}\par
{\f2 #include "../../common/vars.hpp"}\par
{\f2 #include "../eventhub/file_exchange.hpp"}\par
{\f2 #include "../eventhub/publisher.hpp"}\par
{\f2 #include "../eventhub/subscriber.hpp"}\par
{\f2 #include "session.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b stop_execution} (int signal)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b interrupt} = false\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v stop_execution\:session.cpp}
{\xe \v session.cpp\:stop_execution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void stop_execution (int  {\i signal})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b session.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v interrupt\:session.cpp}
{\xe \v session.cpp\:interrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool interrupt = false}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b session.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
session.cpp\par \pard\plain 
{\tc\tcl2 \v src/client/session/session.cpp}
{\xe \v src/client/session/session.cpp}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <cstdlib>}\par
00002 {\cf21 #include <iostream>}\par
00003 {\cf21 #include <plog/Log.h>}\par
00004 {\cf21 #include <pthread.h>}\par
00005 {\cf21 #include <signal.h>}\par
00006 {\cf21 #include <sstream>}\par
00007 {\cf21 #include <sys/stat.h>}\par
00008 {\cf21 #include <unistd.h>}\par
00009 \par
00010 {\cf21 #include "../../common/eventhub/models.hpp"}\par
00011 {\cf21 #include "../../common/file_io/file_io.hpp"}\par
00012 {\cf21 #include "../../common/session/models.hpp"}\par
00013 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00014 {\cf21 #include "../../common/vars.hpp"}\par
00015 {\cf21 #include "../eventhub/file_exchange.hpp"}\par
00016 {\cf21 #include "../eventhub/publisher.hpp"}\par
00017 {\cf21 #include "../eventhub/subscriber.hpp"}\par
00018 {\cf21 #include "session.hpp"}\par
00019 \par
00020 {\cf17 using namespace }std;\par
00021 \par
00022 {\cf18 bool} interrupt = {\cf17 false};\par
00023 \par
00024 {\cf18 void} stop_execution({\cf18 int} signal) \{\par
00025     PLOGD << {\cf22 "Caught signal: "} << strsignal(signal) << {\cf22 "\\n\\n"};\par
00026     interrupt = {\cf17 true};\par
00027 \}\par
00028 \par
00029 ClientContext::ClientContext(\par
00030     {\cf18 string} server_addr, {\cf18 int} server_port, {\cf18 string} username, {\cf18 string} sync_dir, SessionType session_type) \{\par
00031     this->server_addr  = server_addr;\par
00032     this->server_port  = server_port;\par
00033     this->username     = username;\par
00034     this->session_type = session_type;\par
00035     this->sync_dir     = sync_dir;\par
00036 \};\par
00037 \par
00038 ClientSessionManager::ClientSessionManager({\cf18 string} address, {\cf18 int} port, {\cf18 string} username) \{\par
00039     ::signal(SIGINT, stop_execution);\par
00040     {\cf18 string}         sync_dir              = FileHandler::get_sync_dir(username);\par
00041     ClientContext *publisher_context     = {\cf17 new} ClientContext(address, port, username, sync_dir, CommandPublisher);\par
00042     ClientContext *subscriber_context    = {\cf17 new} ClientContext(address, port, username, sync_dir, CommandSubscriber);\par
00043     ClientContext *file_exchange_context = {\cf17 new} ClientContext(address, port, username, sync_dir, FileExchange);\par
00044 \par
00045     pthread_t thread_pool[3];\par
00046 \par
00047     pthread_create(&thread_pool[0], NULL, this->handle_session, publisher_context);\par
00048     pthread_create(&thread_pool[1], NULL, this->handle_session, subscriber_context);\par
00049     pthread_create(&thread_pool[2], NULL, this->handle_session, file_exchange_context);\par
00050 \par
00051     pthread_exit(NULL);\par
00052 \};\par
00053 \par
00054 {\cf18 void} *ClientSessionManager::handle_session({\cf18 void} *context_ptr) \{\par
00055     shared_ptr<ClientContext> context((ClientContext *)context_ptr);\par
00056     shared_ptr<Socket>        socket({\cf17 new} Socket(context->server_addr, context->server_port, &interrupt, Client, BUFFER_SIZE));\par
00057 \par
00058     unique_ptr<ClientSession> session({\cf17 new} ClientSession(context, socket));\par
00059     {\cf19 try} \{\par
00060         {\cf19 if} (session->setup()) \{\par
00061             PLOGI << {\cf22 "Session setup complete..."} << endl;\par
00062             session->run();\par
00063             PLOGI << {\cf22 "Session teardown complete..."} << endl;\par
00064         \}\par
00065     \} {\cf19 catch} ({\cf17 const} std::exception &exc) \{\par
00066         PLOGE << {\cf22 "Terminated with error: "} << exc.what() << endl;\par
00067     \}\par
00068     PLOGI << {\cf22 "Closing socket "} << socket->socket_fd << endl;\par
00069     socket->close(socket->socket_fd);\par
00070     pthread_exit(NULL);\par
00071 \}\par
00072 \par
00073 ClientSession::ClientSession(shared_ptr<ClientContext> context, shared_ptr<Socket> socket) \{\par
00074     shared_ptr<SessionRequest> request({\cf17 new} SessionRequest(context->session_type, context->username));\par
00075 \par
00076     this->socket  = socket;\par
00077     this->request = request;\par
00078     this->context = context;\par
00079 \};\par
00080 \par
00081 {\cf18 bool} ClientSession::setup() \{\par
00082     uint8_t           *bytes;\par
00083     uint8_t          **bytes_ptr = &bytes;\par
00084     {\cf18 size_t}             sreq_size = request->to_bytes(bytes_ptr);\par
00085     unique_ptr<Packet> packet({\cf17 new} Packet(SessionInit, 1, sreq_size, sreq_size, bytes));\par
00086     {\cf18 int}                bytes_sent = packet->send(socket, socket->socket_fd);\par
00087     {\cf19 if} (bytes_sent < 0) \{\par
00088         {\cf19 return} {\cf17 false};\par
00089     \}\par
00090 \par
00091     shared_ptr<uint8_t> msg((uint8_t *)calloc(BUFFER_SIZE, {\cf17 sizeof}(uint8_t))); \par
00092     socket->get_message_sync(msg.get(), socket->socket_fd);\par
00093     PLOGI << {\cf22 "get_message_sync returned: "} << msg.get() << endl;\par
00094     sleep(4);\par
00095     unique_ptr<Packet> resp_packet({\cf17 new} Packet(msg.get()));\par
00096     {\cf19 if} (resp_packet->type == EventMsg) \{\par
00097         unique_ptr<Event> evt({\cf17 new} Event(resp_packet->payload));\par
00098         {\cf19 if} (evt->type == SessionAccepted) \{\par
00099             PLOGI << {\cf22 "Session accepted from server..."} << endl;\par
00100             {\cf19 return} {\cf17 true};\par
00101         \}\par
00102         PLOGD << {\cf22 "Event detail: "} << evt->message << endl;\par
00103     \}\par
00104     free(bytes);\par
00105     {\cf19 return} {\cf17 false};\par
00106 \}\par
00107 \par
00108 {\cf18 void} ClientSession::run() \{\par
00109     PLOGI << {\cf22 "Running session..."} << endl;\par
00110     PLOGI << {\cf22 "Session type: "} << session_type_map.at(context->session_type) << endl;\par
00111     {\cf19 switch} (context->session_type) \{\par
00112     {\cf19 case} CommandPublisher: \{\par
00113         unique_ptr<ClientPublisher> publisher({\cf17 new} ClientPublisher(context, socket));\par
00114         PLOGW << {\cf22 "Publisher loop starting..."} << endl;\par
00115         publisher->loop();\par
00116         PLOGW << {\cf22 "Publisher loop finished..."} << endl;\par
00117         {\cf19 break};\par
00118     \}\par
00119     {\cf19 case} CommandSubscriber: \{\par
00120         unique_ptr<ClientSubscriber> subscriber({\cf17 new} ClientSubscriber(context, socket));\par
00121         PLOGW << {\cf22 "Subscriber loop starting..."} << endl;\par
00122         subscriber->loop();\par
00123         PLOGW << {\cf22 "Subscriber loop finished..."} << endl;\par
00124         {\cf19 break};\par
00125     \}\par
00126     {\cf19 case} FileExchange: \{\par
00127         unique_ptr<ClientFileSync> file_sync({\cf17 new} ClientFileSync(context, socket));\par
00128         PLOGW << {\cf22 "File sync loop starting..."} << endl;\par
00129         file_sync->loop();\par
00130         PLOGW << {\cf22 "File sync loop finished..."} << endl;\par
00131         {\cf19 break};\par
00132     \}\par
00133     {\cf19 default}: \{\par
00134         PLOGE << {\cf22 "Invalid session type "} << session_type_map.at(context->session_type) << endl;\par
00135         {\cf19 break};\par
00136     \}\par
00137     \}\par
00138 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/session/session.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/session/session.cpp}
{\xe \v src/server/session/session.cpp}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstring>}\par
{\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include <pthread.h>}\par
{\f2 #include <regex>}\par
{\f2 #include <set>}\par
{\f2 #include <sstream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include "../../common/eventhub/models.hpp"}\par
{\f2 #include "../../common/vars.hpp"}\par
{\f2 #include "../eventhub/file_sync.hpp"}\par
{\f2 #include "../eventhub/publisher.hpp"}\par
{\f2 #include "../eventhub/subscriber.hpp"}\par
{\f2 #include "../userland/models.hpp"}\par
{\f2 #include "session.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b log_thread} (string message)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v log_thread\:session.cpp}
{\xe \v session.cpp\:log_thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void log_thread (string  {\i message})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b session.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
session.cpp\par \pard\plain 
{\tc\tcl2 \v src/server/session/session.cpp}
{\xe \v src/server/session/session.cpp}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <cstring>}\par
00002 {\cf21 #include <fstream>}\par
00003 {\cf21 #include <iostream>}\par
00004 {\cf21 #include <plog/Log.h>}\par
00005 {\cf21 #include <pthread.h>}\par
00006 {\cf21 #include <regex>}\par
00007 {\cf21 #include <set>}\par
00008 {\cf21 #include <sstream>}\par
00009 {\cf21 #include <stdlib.h>}\par
00010 {\cf21 #include <unistd.h>}\par
00011 \par
00012 {\cf21 #include "../../common/eventhub/models.hpp"}\par
00013 {\cf21 #include "../../common/vars.hpp"}\par
00014 {\cf21 #include "../eventhub/file_sync.hpp"}\par
00015 {\cf21 #include "../eventhub/publisher.hpp"}\par
00016 {\cf21 #include "../eventhub/subscriber.hpp"}\par
00017 {\cf21 #include "../userland/models.hpp"}\par
00018 {\cf21 #include "session.hpp"}\par
00019 \par
00020 {\cf17 using namespace }std;\par
00021 \par
00022 SessionManager::SessionManager(shared_ptr<Socket> socket) \{\par
00023     this->socket      = socket;\par
00024     this->num_threads = 0;\par
00025 \}\par
00026 \par
00027 {\cf18 void} SessionManager::start() \{\par
00028     PLOGI << {\cf22 "Waiting for connections...\\n\\n"};\par
00029     {\cf18 char}                 *client_addr = ({\cf18 char} *)calloc(INET_ADDRSTRLEN, {\cf17 sizeof}(uint8_t));\par
00030     {\cf18 int}                  *client_port = ({\cf18 int} *)calloc(1, {\cf17 sizeof}({\cf18 int}));\par
00031     shared_ptr<UserStore> storage({\cf17 new} UserStore());\par
00032     set<int>              channels;\par
00033     {\cf19 while} ({\cf17 true}) \{\par
00034         {\cf18 int} channel = this->socket->accept(client_addr, client_port);\par
00035         {\cf19 if} (channel != -1) \{\par
00036             PLOGD << {\cf22 "Connected to "} << client_addr << {\cf22 ":"} << *client_port << {\cf22 " on channel "} << channel << endl;\par
00037             channels.insert(channel);\par
00038             this->num_threads += 1;\par
00039             PLOGI << {\cf22 "Creating new Connection ..."} << endl;\par
00040             {\cf18 int} pipe_fd[2];\par
00041             pipe(pipe_fd);\par
00042             shared_ptr<Connection> connection({\cf17 new} Connection(client_addr, *client_port, channel, pipe_fd));\par
00043 \par
00044             connection->get_conection_info();\par
00045             \par
00046             shared_ptr<ServerContext> context({\cf17 new} ServerContext(socket, connection, storage));\par
00047             this->create_session(channel, context);\par
00048         \}\par
00049         usleep(10000);\par
00050     \}\par
00051     {\cf19 for} (set<int>::iterator channel = channels.begin(); channel != channels.end(); channel++) \{\par
00052         PLOGI << {\cf22 "Closing socket on channel "} << *channel << {\cf22 "..."} << endl;\par
00053         socket->close(*channel);\par
00054         pthread_t thread_id = this->thread_pool.at(*channel);\par
00055         PLOGI << {\cf22 "Waiting for thread "} << thread_id << {\cf22 " from channel "} << *channel << {\cf22 " to teardown..."} << endl;\par
00056         pthread_join(thread_id, NULL);\par
00057     \}\par
00058     free(client_addr);\par
00059 \}\par
00060 \par
00061 {\cf18 void} SessionManager::create_session({\cf18 int} channel, shared_ptr<ServerContext> context) \{\par
00062     PLOGD << {\cf22 "Spawning new connection on channel "} << channel << endl;\par
00063     shared_ptr<Connection> connection = context->connection;\par
00064     connection->set_thread_id(&thread_pool[num_threads]);\par
00065     Session *session = {\cf17 new} Session(context);\par
00066     pthread_create(&thread_pool[num_threads], NULL, this->handle_session, session);\par
00067 \}\par
00068 \par
00069 {\cf18 void} log_thread({\cf18 string} message) \{\par
00070 \}\par
00071 \par
00072 {\cf18 void} *SessionManager::handle_session({\cf18 void} *session_ptr) \{\par
00073     shared_ptr<Session> session((Session *)session_ptr);\par
00074     {\cf18 int}                 channel = session->context->connection->channel;\par
00075 \par
00076     PLOGD << {\cf22 "Running new thread for channel "} << channel << endl;\par
00077     {\cf18 string} client_addr = session->context->connection->get_full_address();\par
00078     PLOGI << {\cf22 "Connected to "} << client_addr << {\cf22 " on channel "} << channel << endl;\par
00079 \par
00080     {\cf19 if} (channel == -1) \{\par
00081         PLOGE << {\cf22 "Error: Invalid channel: "} << channel << endl;\par
00082         ::pthread_exit(NULL);\par
00083     \}\par
00084     PLOGD << {\cf22 "Listening on channel "} << channel << endl;\par
00085 \par
00086     {\cf19 if} (session->setup()) \{\par
00087         PLOGI << {\cf22 "Starting session on channel "} << channel << {\cf22 "..."} << endl;\par
00088         session->run();\par
00089         PLOGI << {\cf22 "Session on channel "} << channel << {\cf22 " finished."} << endl;\par
00090     \}\par
00091 \par
00092     PLOGI << {\cf22 "Closing channel "} << channel << {\cf22 "..."} << endl;\par
00093     session->teardown();\par
00094     ::pthread_exit(NULL);\par
00095     {\cf19 return} NULL;\par
00096 \}\par
00097 \par
00098 {\cf18 bool} Session::setup() \{\par
00099     PLOGI << {\cf22 "Setting up session..."} << endl;\par
00100     unique_ptr<uint8_t> buffer((uint8_t *)calloc(BUFFER_SIZE, {\cf17 sizeof}(uint8_t)));\par
00101     {\cf18 int}                 channel      = context->connection->channel;\par
00102     {\cf18 int}                 payload_size = context->socket->get_message_sync(buffer.get(), channel);\par
00103     {\cf19 if} (payload_size == 0) \{\par
00104         PLOGW << {\cf22 "Client "} << context->connection->get_full_address() << {\cf22 " has disconnected before setup.."} << endl;\par
00105         {\cf19 return} {\cf17 false};\par
00106     \}\par
00107 \par
00108     unique_ptr<Packet> packet({\cf17 new} Packet(buffer.get()));\par
00109 \par
00110     {\cf19 if} (packet->type != SessionInit) \{\par
00111         PLOGW << {\cf22 "Invalid session packet: "} << packet->type << endl;\par
00112         {\cf19 return} {\cf17 false};\par
00113     \}\par
00114 \par
00115     shared_ptr<SessionRequest> request({\cf17 new} SessionRequest(packet->payload));\par
00116     {\cf20 // if (!regex_match(string(request->username), regex("[A-Za-z0-9_-]+"))) \{}\par
00117     {\cf20 //     PLOGI << "Invalid username: " << request->username << endl;}\par
00118     {\cf20 //     return false;}\par
00119     {\cf20 // \}}\par
00120     shared_ptr<Connection> connection = this->context->connection;\par
00121     {\cf19 if} (request->type == Unknown) \{\par
00122         PLOGW << {\cf22 "Invalid session from device "} << connection->get_full_address() << {\cf22 " and user "} << request->username << endl;\par
00123         {\cf19 return} {\cf17 false};\par
00124     \}\par
00125     PLOGI << {\cf22 "Established session with user "} << request->username << endl;\par
00126     shared_ptr<UserStore> storage = this->context->storage;\par
00127     {\cf19 if} (!storage->register_connection(request->username, context)) \{\par
00128         PLOGW << {\cf22 "Cannot establish connection for user "} << request->username\par
00129               << {\cf22 " on device "} << connection->get_full_address() << endl;\par
00130         {\cf19 return} {\cf17 false};\par
00131     \}\par
00132     this->type = request->type;\par
00133     {\cf18 string} session_type;\par
00134     {\cf19 try} \{\par
00135         session_type = session_type_map.at(request->type);\par
00136     \} {\cf19 catch} ({\cf17 const} std::exception &exc) \{\par
00137         PLOGE << {\cf22 "Cannot create session of type: "} << request->type << endl;\par
00138         {\cf19 return} {\cf17 false};\par
00139     \}\par
00140     ostringstream oss;\par
00141     oss << {\cf22 "Session of type "} << session_type << {\cf22 " established."} << endl;\par
00142     PLOGI << oss.str();\par
00143     shared_ptr<Event> accept_evt({\cf17 new} Event(SessionAccepted, oss.str()));\par
00144     accept_evt->send(context->socket, channel);\par
00145     {\cf19 return} {\cf17 true};\par
00146 \}\par
00147 \par
00148 Session::Session(shared_ptr<ServerContext> context) \{\par
00149     this->context = context;\par
00150 \}\par
00151 \par
00152 {\cf18 void} Session::run() \{\par
00153     {\cf18 string} session_type;\par
00154     {\cf19 try} \{\par
00155         session_type = session_type_map.at(this->type);\par
00156         PLOGW << {\cf22 "Running session of type "} << session_type << endl;\par
00157     \} {\cf19 catch} ({\cf17 const} exception &exc) \{\par
00158         {\cf20 // blabla}\par
00159     \}\par
00160     {\cf19 switch} (type) \{\par
00161     {\cf19 case} FileExchange: \{\par
00162         unique_ptr<FileSync> file_sync({\cf17 new} FileSync(this->context));\par
00163         file_sync->loop();\par
00164         {\cf19 break};\par
00165     \}\par
00166     {\cf19 case} CommandPublisher: \{\par
00167         unique_ptr<ServerEventPublisher> publisher({\cf17 new} ServerEventPublisher(this->context));\par
00168         publisher->loop();\par
00169         {\cf19 break};\par
00170     \}\par
00171     {\cf19 case} CommandSubscriber: \{\par
00172         unique_ptr<ServerEventSubscriber> subscriber({\cf17 new} ServerEventSubscriber(this->context));\par
00173         subscriber->loop();\par
00174         {\cf19 break};\par
00175     \}\par
00176     {\cf19 default}: \{\par
00177         PLOGI << {\cf22 "Invalid session type: "} << this->type << endl;\par
00178         {\cf19 return};\par
00179     \}\par
00180     \}\par
00181 \};\par
00182 \par
00183 {\cf18 void} Session::teardown() \{\par
00184     {\cf18 int}    channel      = context->connection->channel;\par
00185     {\cf18 string} full_address = context->connection->get_full_address();\par
00186     {\cf19 if} (context->device != NULL) \{\par
00187         {\cf18 string} username = context->device->username;\par
00188         PLOGI << {\cf22 "Unregistering connection from device "} << full_address << {\cf22 " from user "} << username << endl;\par
00189         context->storage->unregister_connection(context);\par
00190     \} {\cf19 else} \{\par
00191         PLOGI << {\cf22 "Unregistering unauthenticated connection from device "} << full_address << endl;\par
00192     \}\par
00193     context->socket->close(channel);\par
00194 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/client/session/session.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/client/session/session.hpp}
{\xe \v src/client/session/session.hpp}
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <memory>}\par
{\f2 #include "../../common/session/models.hpp"}\par
{\f2 #include "../../common/socket_io/socket.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClientContext}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClientSessionManager}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClientSession}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
session.hpp\par \pard\plain 
{\tc\tcl2 \v src/client/session/session.hpp}
{\xe \v src/client/session/session.hpp}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef CLIENT_SESSION_H}\par
00002 {\cf21 #define CLIENT_SESSION_H}\par
00003 {\cf21 #include <memory>}\par
00004 \par
00005 {\cf21 #include "../../common/session/models.hpp"}\par
00006 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00007 \par
00008 {\cf17 using namespace }std;\par
00009 \par
00010 {\cf17 class }ClientContext \{\par
00011 {\cf17 public}:\par
00012     {\cf18 string}      server_addr;\par
00013     {\cf18 int}         server_port;\par
00014     {\cf18 string}      username;\par
00015     SessionType session_type;\par
00016     {\cf18 string}      sync_dir;\par
00017 \par
00018     ClientContext(\par
00019         {\cf18 string} server_addr, {\cf18 int} server_port, {\cf18 string} username,\par
00020         {\cf18 string} sync_dir, SessionType session_type);\par
00021 \par
00022     {\cf17 inline} {\cf18 string} get_folder_path() \{ {\cf19 return} this->sync_dir; \}\par
00023     {\cf20 //  inline int    get_channel() \{ return this->channel; \}}\par
00024 \};\par
00025 \par
00026 {\cf17 class }ClientSessionManager \{\par
00027 {\cf17 public}:\par
00028     ClientSessionManager({\cf18 string} address, {\cf18 int} port, {\cf18 string} username);\par
00029     {\cf17 static} {\cf18 void} *handle_session({\cf18 void} *request);\par
00030 \};\par
00031 \par
00032 {\cf17 class }ClientSession \{\par
00033     shared_ptr<Socket>         socket;\par
00034     shared_ptr<SessionRequest> request;\par
00035     shared_ptr<ClientContext>  context;\par
00036 \par
00037 {\cf17 public}:\par
00038     ClientSession(shared_ptr<ClientContext> context, shared_ptr<Socket> socket);\par
00039     {\cf18 bool} setup();\par
00040     {\cf18 void} run();\par
00041 \};\par
00042 \par
00043 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/session/session.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/session/session.hpp}
{\xe \v src/server/session/session.hpp}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <map>}\par
{\f2 #include <memory>}\par
{\f2 #include <string.h>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "../../common/session/models.hpp"}\par
{\f2 #include "../../common/socket_io/socket.hpp"}\par
{\f2 #include "../userland/models.hpp"}\par
{\f2 #include "models.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionManager}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Session}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_REQUESTS}\~ 10\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MAX_REQUESTS\:session.hpp}
{\xe \v session.hpp\:MAX_REQUESTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_REQUESTS\~ 10}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b session.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
session.hpp\par \pard\plain 
{\tc\tcl2 \v src/server/session/session.hpp}
{\xe \v src/server/session/session.hpp}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SESSION_H}\par
00002 {\cf21 #define SESSION_H}\par
00003 \par
00004 {\cf21 #include <map>}\par
00005 {\cf21 #include <memory>}\par
00006 {\cf21 #include <string.h>}\par
00007 {\cf21 #include <string>}\par
00008 {\cf21 #include <vector>}\par
00009 \par
00010 {\cf21 #include "../../common/session/models.hpp"}\par
00011 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00012 {\cf21 #include "../userland/models.hpp"}\par
00013 {\cf21 #include "models.hpp"}\par
00014 \par
00015 {\cf17 using namespace }std;\par
00016 \par
00017 {\cf21 #define MAX_REQUESTS 10}\par
00018 \par
00019 {\cf17 class }SessionManager \{\par
00020     {\cf18 int}                 num_threads;\par
00021     {\cf18 int}                 channels[MAX_REQUESTS];\par
00022     shared_ptr<Socket>  socket;\par
00023     map<int, pthread_t> thread_pool;\par
00024 \par
00025     {\cf17 static} {\cf18 void} *handle_session({\cf18 void} *args);\par
00026     {\cf18 void}         create_session({\cf18 int} channel, shared_ptr<ServerContext> context);\par
00027 \par
00028 {\cf17 public}:\par
00029     {\cf18 bool} *interrupt;\par
00030 \par
00031     SessionManager(shared_ptr<Socket> socket);\par
00032     {\cf18 void} start();\par
00033     {\cf18 void} stop({\cf18 int} signal);\par
00034 \};\par
00035 \par
00036 {\cf17 class }Session \{\par
00037 {\cf17 public}:\par
00038     shared_ptr<ServerContext> context;\par
00039     {\cf18 int}                       channel;\par
00040     SessionType               type;\par
00041 \par
00042     Session(shared_ptr<ServerContext>);\par
00043     {\cf18 bool} setup();\par
00044     {\cf18 void} run();\par
00045     {\cf18 void} teardown();\par
00046 \};\par
00047 \par
00048 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/eventhub/models.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/eventhub/models.cpp}
{\xe \v src/common/eventhub/models.cpp}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "models.hpp"}\par
{\f2 #include <cstring>}\par
{\f2 #include <iostream>}\par
{\f2 #include <memory>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include "../vars.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
models.cpp\par \pard\plain 
{\tc\tcl2 \v src/common/eventhub/models.cpp}
{\xe \v src/common/eventhub/models.cpp}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "models.hpp"}\par
00002 {\cf21 #include <cstring>}\par
00003 {\cf21 #include <iostream>}\par
00004 {\cf21 #include <memory>}\par
00005 {\cf21 #include <plog/Log.h>}\par
00006 \par
00007 {\cf21 #include "../vars.hpp"}\par
00008 \par
00009 {\cf17 using namespace }std;\par
00010 \par
00011 Event::Event(uint8_t *bytes) \{\par
00012     uint8_t *cursor   = bytes;\par
00013     {\cf18 size_t}   uint16_s = {\cf17 sizeof}(uint16_t);\par
00014 \par
00015     uint16_t prop;\par
00016     memmove(&prop, cursor, uint16_s);\par
00017     this->type = (EventType)ntohs(prop);\par
00018     cursor += uint16_s;\par
00019 \par
00020     memmove(&prop, cursor, uint16_s);\par
00021     uint16_t payload_size = ntohs(prop);\par
00022     PLOGD << {\cf22 "Loaded event with size: "} << payload_size << endl;\par
00023     cursor += uint16_s;\par
00024 \par
00025     {\cf18 int} max_payload_size = Packet::get_max_payload_size() - 2 * uint16_s;\par
00026     {\cf19 if} (payload_size > max_payload_size) \{\par
00027         PLOGE << {\cf22 "Buffer overflow: "} << payload_size - max_payload_size << {\cf22 " bigger than the buffer"} << endl;\par
00028         payload_size = max_payload_size;\par
00029     \}\par
00030     unique_ptr<uint8_t> payload((uint8_t *)calloc(payload_size, {\cf17 sizeof}(uint8_t)));\par
00031     memmove(payload.get(), cursor, payload_size * {\cf17 sizeof}(uint8_t));\par
00032     this->message = string(({\cf18 char} *)payload.get());\par
00033 \}\par
00034 \par
00035 Event::Event(EventType type, {\cf18 string} message) \{\par
00036     this->type    = type;\par
00037     this->message = message;\par
00038 \}\par
00039 \par
00040 {\cf18 bool} Event::send(shared_ptr<Socket> socket, {\cf18 int} channel) \{\par
00041     uint16_t            message_size = this->message.size() + 1;\par
00042     unique_ptr<uint8_t> message_buf((uint8_t *)calloc(message_size, {\cf17 sizeof}(uint8_t)));\par
00043     memmove(message_buf.get(), this->message.c_str(), message_size);\par
00045     {\cf18 size_t} packet_size = {\cf17 sizeof}(this->type);\par
00046     packet_size += {\cf17 sizeof}(uint16_t);\par
00047     packet_size += message_size * {\cf17 sizeof}(uint8_t);\par
00048 \par
00049     unique_ptr<uint8_t> buffer((uint8_t *)calloc(packet_size, {\cf17 sizeof}(uint8_t)));\par
00050 \par
00051     uint8_t *cursor   = buffer.get();\par
00052     {\cf18 size_t}   uint16_s = {\cf17 sizeof}(uint16_t);\par
00053 \par
00054     uint16_t prop = htons(this->type);\par
00055     memmove(cursor, &prop, uint16_s);\par
00056     cursor += uint16_s;\par
00057 \par
00058     prop = htons(message_size);\par
00059     memmove(cursor, &prop, uint16_s);\par
00060     cursor += uint16_s;\par
00061 \par
00062     memmove(cursor, message_buf.get(), message_size * {\cf17 sizeof}(uint8_t));\par
00063     unique_ptr<Packet> packet({\cf17 new} Packet(EventMsg, 1, packet_size, packet_size, buffer.get()));\par
00064     packet->send(socket, channel);\par
00065     {\cf19 return} {\cf17 true};\par
00066 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/session/models.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/session/models.cpp}
{\xe \v src/common/session/models.cpp}
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "models.hpp"}\par
{\f2 #include <cstdlib>}\par
{\f2 #include <cstring>}\par
{\f2 #include <memory>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include "../socket_io/socket.hpp"}\par
{\f2 #include "../vars.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
models.cpp\par \pard\plain 
{\tc\tcl2 \v src/common/session/models.cpp}
{\xe \v src/common/session/models.cpp}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "models.hpp"}\par
00002 {\cf21 #include <cstdlib>}\par
00003 {\cf21 #include <cstring>}\par
00004 {\cf21 #include <memory>}\par
00005 {\cf21 #include <plog/Log.h>}\par
00006 \par
00007 {\cf21 #include "../socket_io/socket.hpp"}\par
00008 {\cf21 #include "../vars.hpp"}\par
00009 \par
00010 SessionRequest::SessionRequest(uint8_t *bytes) \{\par
00011     uint8_t *cursor   = bytes;\par
00012     {\cf18 size_t}   uint16_s = {\cf17 sizeof}(uint16_t);\par
00013 \par
00014     uint16_t prop;\par
00015     memmove(&prop, cursor, uint16_s);\par
00016     this->type = (SessionType)ntohs(prop);\par
00017     cursor += uint16_s;\par
00018 \par
00019     memmove(&prop, cursor, uint16_s);\par
00020     this->uname_s = ntohs(prop);\par
00021     cursor += uint16_s;\par
00022 \par
00023     {\cf18 int} max_uname_s = Packet::get_max_payload_size() - 2 * uint16_s;\par
00024     {\cf19 if} (uname_s > max_uname_s) \{\par
00025         PLOGE << {\cf22 "Buffer overflow: "} << uname_s - BUFFER_SIZE << {\cf22 " bigger than the buffer"} << endl;\par
00026         this->uname_s = max_uname_s;\par
00027     \}\par
00028 \par
00029     unique_ptr<char> username(({\cf18 char} *)calloc(this->uname_s, {\cf17 sizeof}({\cf18 char})));\par
00030     memmove(username.get(), cursor, this->uname_s);\par
00031     this->username = string(username.get());\par
00032     PLOGI << {\cf22 "Username "} << this->username << {\cf22 " size: "} << this->uname_s << endl;\par
00033     {\cf19 if} (\par
00034         this->type != CommandSubscriber && this->type != CommandPublisher && this->type != FileExchange) \{\par
00035         this->type = Unknown;\par
00036     \}\par
00037 \}\par
00038 \par
00039 SessionRequest::SessionRequest(SessionType type, {\cf18 string} username) \{\par
00040     this->type     = type;\par
00041     this->uname_s  = username.size() + 1;\par
00042     this->username = username;\par
00043 \}\par
00044 \par
00045 {\cf18 size_t} SessionRequest::to_bytes(uint8_t **bytes_ptr) \{\par
00046     {\cf18 size_t} packet_size = {\cf17 sizeof}(this->type);\par
00047     packet_size += {\cf17 sizeof}(this->uname_s);\par
00048     packet_size += this->uname_s * {\cf17 sizeof}(char);\par
00049     *bytes_ptr = (uint8_t *)calloc(packet_size, {\cf17 sizeof}(uint8_t));\par
00050 \par
00051     uint8_t *cursor   = *bytes_ptr;\par
00052     {\cf18 size_t}   uint16_s = {\cf17 sizeof}(uint16_t);\par
00053     uint16_t prop     = htons(this->type);\par
00054     memmove(cursor, &prop, uint16_s);\par
00055     cursor += uint16_s;\par
00056 \par
00057     prop = htons(this->uname_s);\par
00058     memmove(cursor, &prop, uint16_s);\par
00059     cursor += uint16_s;\par
00060 \par
00061     {\cf17 const} {\cf18 char} *username_ptr = username.c_str();\par
00062     memmove(cursor, username_ptr, this->uname_s);\par
00063     {\cf20 // memmove(cursor, this->username, this->uname_s * sizeof(char));}\par
00064     {\cf19 return} packet_size;\par
00065 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/session/models.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/session/models.cpp}
{\xe \v src/server/session/models.cpp}
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstring>}\par
{\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <memory>}\par
{\f2 #include <regex>}\par
{\f2 #include <sstream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include "../../common/session/models.hpp"}\par
{\f2 #include "models.hpp"}\par
{\f2 #include <plog/Log.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
models.cpp\par \pard\plain 
{\tc\tcl2 \v src/server/session/models.cpp}
{\xe \v src/server/session/models.cpp}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <cstring>}\par
00002 {\cf21 #include <fstream>}\par
00003 {\cf21 #include <iostream>}\par
00004 {\cf21 #include <memory>}\par
00005 {\cf21 #include <regex>}\par
00006 {\cf21 #include <sstream>}\par
00007 {\cf21 #include <stdlib.h>}\par
00008 {\cf21 #include <string>}\par
00009 {\cf21 #include <unistd.h>}\par
00010 \par
00011 {\cf21 #include "../../common/session/models.hpp"}\par
00012 {\cf21 #include "models.hpp"}\par
00013 {\cf21 #include <plog/Log.h>}\par
00014 \par
00015 \par
00016 Connection::Connection({\cf18 char} *address, {\cf18 int} port, {\cf18 int} channel, {\cf18 int} *pipe_fd) \{\par
00017     this->address = string(address);\par
00018     this->port    = port;\par
00019     this->channel = channel;\par
00020     memcpy(this->pipe_fd, pipe_fd, 2*{\cf17 sizeof}({\cf18 int}));\par
00021 \}\par
00022 \par
00023 {\cf18 void} Connection::set_thread_id(pthread_t *thread_id) \{\par
00024     this->thread_id = thread_id;\par
00025 \}\par
00026 \par
00027 {\cf18 void} Connection::set_session_type(SessionType session_type) \{\par
00028     this->session_type = session_type;\par
00029 \}\par
00030 \par
00031 {\cf18 string} Connection::get_full_address() \{\par
00032     ostringstream oss;\par
00033     oss << this->address << {\cf22 ":"} << this->port;\par
00034     std::string conn_info = oss.str();\par
00035     {\cf19 return} conn_info;\par
00036 \}\par
00037 \par
00038 {\cf18 void} Connection::get_conection_info()\{\par
00039     PLOGI << {\cf22 "Connection info: "} << endl \par
00040           << {\cf22 "Address: "} << this->address << endl \par
00041           << {\cf22 "Port: "} << this->port << endl \par
00042           << {\cf22 "Channel: "} << this->channel << endl \par
00043           << {\cf22 "Thread id: "} << this->thread_id << endl \par
00044           << {\cf22 "Session type: "} << this->session_type << endl;\par
00045 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/userland/models.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/userland/models.cpp}
{\xe \v src/server/userland/models.cpp}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstring>}\par
{\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include <regex>}\par
{\f2 #include <sstream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include "../session/session.hpp"}\par
{\f2 #include "models.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b USER_MAX_DEVICES}\~ 2\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v USER_MAX_DEVICES\:models.cpp}
{\xe \v models.cpp\:USER_MAX_DEVICES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define USER_MAX_DEVICES\~ 2}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b models.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
models.cpp\par \pard\plain 
{\tc\tcl2 \v src/server/userland/models.cpp}
{\xe \v src/server/userland/models.cpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <cstring>}\par
00002 {\cf21 #include <fstream>}\par
00003 {\cf21 #include <iostream>}\par
00004 {\cf21 #include <plog/Log.h>}\par
00005 {\cf21 #include <regex>}\par
00006 {\cf21 #include <sstream>}\par
00007 {\cf21 #include <stdlib.h>}\par
00008 {\cf21 #include <unistd.h>}\par
00009 \par
00010 {\cf21 #include "../session/session.hpp"}\par
00011 {\cf21 #include "models.hpp"}\par
00012 \par
00013 {\cf17 using namespace }std;\par
00014 \par
00015 {\cf21 #define USER_MAX_DEVICES 2}\par
00016 \par
00017 Device::Device({\cf17 const} {\cf18 string} username, shared_ptr<Connection> connection) \{\par
00018     this->username                      = username;\par
00019     this->address                       = connection->address;\par
00020     this->connections[connection->port] = connection;\par
00021 \}\par
00022 \par
00023 UserStore::UserStore() \{\par
00024     sem_init(&this->devices_lock, 0, 1);\par
00025 \};\par
00026 \par
00027 UserStore::~UserStore() \{\par
00028     sem_destroy(&this->devices_lock);\par
00029 \}\par
00030 \par
00031 {\cf18 bool} UserStore::add_user({\cf17 const} {\cf18 string} username) \{\par
00032     {\cf18 bool} user_added = {\cf17 false};\par
00033     {\cf19 if} (this->users_devices.find(username) == this->users_devices.end()) \{\par
00034         map<string, Device *> device_map;\par
00035         this->users_devices[username] = device_map;\par
00036         user_added                    = {\cf17 true};\par
00037     \} {\cf19 else} \{\par
00038         PLOGW << {\cf22 "User "} << username << {\cf22 " already registered."} << endl;\par
00039     \}\par
00040     {\cf19 return} user_added;\par
00041 \}\par
00042 \par
00043 {\cf18 bool} UserStore::register_device({\cf17 const} {\cf18 string} username, shared_ptr<ServerContext> context) \{\par
00044     map<string, Device *> device_map;\par
00045 \par
00046     shared_ptr<Connection> connection = context->connection;\par
00047     {\cf19 try} \{\par
00048         device_map = this->users_devices.at(username);\par
00049     \} {\cf19 catch} (out_of_range) \{\par
00050         PLOGW << {\cf22 "User "} << username << {\cf22 " is not registered. Registering..."} << endl;\par
00051         {\cf19 if} (!this->add_user(username)) \{\par
00052             {\cf19 return} {\cf17 false};\par
00053         \}\par
00054         device_map = this->users_devices.at(username);\par
00055     \}\par
00056 \par
00057     {\cf20 //  This is where we limit max devices online}\par
00058     {\cf19 if} (device_map.size() == USER_MAX_DEVICES) \{\par
00059         PLOGW << {\cf22 "User "} << username << {\cf22 " reached maximum of simultaneously connected devices: "} << USER_MAX_DEVICES << endl;\par
00060         PLOGW << {\cf22 "Connection from device with address "} << connection->address << {\cf22 " rejected."} << endl;\par
00061         {\cf19 return} {\cf17 false};\par
00062     \}\par
00063     Device *device;\par
00064     {\cf19 if} (device_map.find(connection->address) == device_map.end()) \{\par
00065         device                                             = {\cf17 new} Device(username, connection);\par
00066         this->users_devices[username][connection->address] = device;\par
00067     \} {\cf19 else} \{\par
00068         PLOGW << {\cf22 "Device with address "} << connection->address << {\cf22 " already registered"} << endl;\par
00069         device = this->users_devices.at(username).at(connection->address);\par
00070     \}\par
00071     context->set_device(device);\par
00072 \par
00073     {\cf19 return} {\cf17 true};\par
00074 \}\par
00075 \par
00076 {\cf18 bool} UserStore::register_connection({\cf17 const} {\cf18 string} username, shared_ptr<ServerContext> context) \{\par
00077     sem_wait(&this->devices_lock);\par
00078 \par
00079     map<string, Device *> device_map;\par
00080     {\cf18 bool}                  result = {\cf17 true};\par
00081 \par
00082     {\cf19 try} \{\par
00083         device_map = this->users_devices.at(username);\par
00084     \} {\cf19 catch} (out_of_range) \{\par
00085         {\cf19 if} (!this->add_user(username))\par
00086             {\cf19 return} {\cf17 false};\par
00087         device_map = this->users_devices.at(username);\par
00088     \}\par
00089     shared_ptr<Connection> connection = context->connection;\par
00090 \par
00091     {\cf19 if} (device_map.find(connection->address) == device_map.end()) \{\par
00092         sem_post(&this->devices_lock);\par
00093         result = this->register_device(username, context);\par
00094     \} {\cf19 else} \{\par
00095         Device *device                        = device_map[connection->address];\par
00096         device->connections[connection->port] = connection;\par
00097         context->set_device(device);\par
00098     \}\par
00099 \par
00100     sem_post(&this->devices_lock);\par
00101     {\cf19 return} result;\par
00102 \}\par
00103 \par
00104 {\cf18 bool} UserStore::unregister_connection(shared_ptr<ServerContext> context) \{\par
00105     {\cf19 if} (context->device != NULL) \{\par
00106         sem_wait(&this->devices_lock); {\cf20 // acquiring lock}\par
00107                                        {\cf20 //}\par
00108         shared_ptr<Connection>                     connection = context->connection;\par
00109         map<int, shared_ptr<Connection>>::iterator iter       = context->device->connections.find(context->connection->port);\par
00110         {\cf19 if} (iter != context->device->connections.end()) \{\par
00111             context->device->connections.erase(iter);\par
00112         \}\par
00113         {\cf19 if} (context->device->connections.size() == 0) \{\par
00114             {\cf18 string}                          username   = context->device->username;\par
00115             map<string, Device *>::iterator device_key = this->users_devices[username].find(context->device->address);\par
00116             {\cf19 if} (device_key != this->users_devices[username].end()) \{\par
00117                 PLOGI << {\cf22 "Unregistering device "} << context->device->address << {\cf22 " from user "} << username << endl;\par
00118                 this->users_devices[username].erase(device_key);\par
00119             \}\par
00120             {\cf19 if} (this->users_devices[username].size() == 0) \{\par
00121                 map<string, map<string, Device *>>::iterator user_key = this->users_devices.find(username);\par
00122                 this->users_devices.erase(user_key);\par
00123             \}\par
00124         \}\par
00125 \par
00126         sem_post(&this->devices_lock);\par
00127     \}\par
00128     {\cf19 return} {\cf17 true};\par
00129 \}\par
00130 \par
00131 map<string, Device *> UserStore::get_user_devices({\cf17 const} {\cf18 string} username) \{\par
00132     {\cf19 try} \{\par
00133         {\cf19 return} this->users_devices.at(username);\par
00134     \} {\cf19 catch} (out_of_range) \{\par
00135         PLOGE << {\cf22 "Error! Cannot find username "} << username << endl;\par
00136         {\cf19 throw};\par
00137     \}\par
00138 \}\par
00139 \par
00140 Device *UserStore::get_device({\cf17 const} {\cf18 string} username, {\cf17 const} {\cf18 string} address) \{\par
00141     {\cf19 try} \{\par
00142         {\cf19 return} this->users_devices.at(username).at(address);\par
00143     \} {\cf19 catch} (out_of_range) \{\par
00144         PLOGE << {\cf22 "Cannot find device at address "} << address << {\cf22 " from user "} << username << endl;\par
00145     \}\par
00146     {\cf19 return} NULL;\par
00147 \}\par
00148 \par
00149 vector<string> UserStore::get_connected_users() \{\par
00150     vector<string>                           users;\par
00151     map<string, vector<shared_ptr<Session>>> sessions = this->users_sessions;\par
00152     transform(\par
00153         sessions.begin(), sessions.end(), back_inserter(users),\par
00154         [](pair<{\cf18 string}, vector<shared_ptr<Session>>> p) \{ {\cf19 return} p.first; \} {\cf20 // NOLINT}\par
00155     );\par
00156     {\cf19 return} users;\par
00157 \}\par
00158 \par
00159 {\cf18 void} UserStore::get_user_devices() \{\par
00160 \}\par
00161 \par
00162 ServerContext::ServerContext(shared_ptr<Socket> socket, shared_ptr<Connection> connection, shared_ptr<UserStore> storage) \{\par
00163     this->socket     = socket;\par
00164     this->connection = connection;\par
00165     this->storage    = storage;\par
00166     this->device     = NULL;\par
00167 \}\par
00168 \par
00169 {\cf18 void} ServerContext::set_device(Device *device) \{\par
00170     this->device = device;\par
00171 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/eventhub/models.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/eventhub/models.hpp}
{\xe \v src/common/eventhub/models.hpp}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../socket_io/socket.hpp"}\par
{\f2 #include <map>}\par
{\f2 #include <netinet/in.h>}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Command}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Event}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CommandType} \{ {\b UploadFile}
, {\b DownloadFile}
, {\b DeleteFile}
, {\b ListServerFiles}
, {\b ListLocalFiles}
, {\b Exit}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EventType} \{ {\b SessionAccepted}
, {\b SessionRejected}
, {\b FileCreated}
, {\b FileDeleted}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v CommandType\:models.hpp}
{\xe \v models.hpp\:CommandType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CommandType}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v UploadFile\:models.hpp}
{\xe \v models.hpp\:UploadFile}
{\qr UploadFile{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\cell }{\cell }{\row }
{\xe \v DownloadFile\:models.hpp}
{\xe \v models.hpp\:DownloadFile}
{\qr DownloadFile{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\cell }{\cell }{\row }
{\xe \v DeleteFile\:models.hpp}
{\xe \v models.hpp\:DeleteFile}
{\qr DeleteFile{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\cell }{\cell }{\row }
{\xe \v ListServerFiles\:models.hpp}
{\xe \v models.hpp\:ListServerFiles}
{\qr ListServerFiles{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\cell }{\cell }{\row }
{\xe \v ListLocalFiles\:models.hpp}
{\xe \v models.hpp\:ListLocalFiles}
{\qr ListLocalFiles{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\cell }{\cell }{\row }
{\xe \v Exit\:models.hpp}
{\xe \v models.hpp\:Exit}
{\qr Exit{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 11} of file {\b models.hpp}.}\par
}
{\xe \v EventType\:models.hpp}
{\xe \v models.hpp\:EventType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b EventType}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SessionAccepted\:models.hpp}
{\xe \v models.hpp\:SessionAccepted}
{\qr SessionAccepted{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\cell }{\cell }{\row }
{\xe \v SessionRejected\:models.hpp}
{\xe \v models.hpp\:SessionRejected}
{\qr SessionRejected{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\cell }{\cell }{\row }
{\xe \v FileCreated\:models.hpp}
{\xe \v models.hpp\:FileCreated}
{\qr FileCreated{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\cell }{\cell }{\row }
{\xe \v FileDeleted\:models.hpp}
{\xe \v models.hpp\:FileDeleted}
{\qr FileDeleted{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 20} of file {\b models.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
models.hpp\par \pard\plain 
{\tc\tcl2 \v src/common/eventhub/models.hpp}
{\xe \v src/common/eventhub/models.hpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef USERLAND_CMN_MODELS_H}\par
00002 {\cf21 #define USERLAND_CMN_MODELS_H}\par
00003 \par
00004 {\cf21 #include "../socket_io/socket.hpp"}\par
00005 {\cf21 #include <map>}\par
00006 {\cf21 #include <netinet/in.h>}\par
00007 {\cf21 #include <string>}\par
00008 \par
00009 {\cf17 using namespace }std;\par
00010 \par
00011 {\cf17 enum} CommandType \{\par
00012     UploadFile,\par
00013     DownloadFile,\par
00014     DeleteFile,\par
00015     ListServerFiles,\par
00016     ListLocalFiles,\par
00017     Exit\par
00018 \};\par
00019 \par
00020 {\cf17 enum} EventType \{\par
00021     SessionAccepted,\par
00022     SessionRejected,\par
00023     FileCreated,\par
00024     FileDeleted\par
00025 \};\par
00026 \par
00027 {\cf17 static} {\cf17 const} map<string, CommandType> command_map = \{\par
00028     \{{\cf22 "upload"}, UploadFile\},\par
00029     \{{\cf22 "download"}, DownloadFile\},\par
00030     \{{\cf22 "delete"}, DeleteFile\},\par
00031     \{{\cf22 "list_server"}, ListServerFiles\},\par
00032     \{{\cf22 "list_client"}, ListLocalFiles\},\par
00033     \{{\cf22 "exit"}, Exit\}\};\par
00034 \par
00035 {\cf17 class }Command \{\par
00036 {\cf17 public}:\par
00037     CommandType type;\par
00038 \};\par
00039 \par
00040 {\cf17 class }Event \{\par
00041 {\cf17 public}:\par
00042     EventType type;\par
00043     {\cf18 string}    message;\par
00044 \par
00045     Event(uint8_t *bytes);\par
00046     Event(EventType type, {\cf18 string} message);\par
00047     {\cf18 bool} send(shared_ptr<Socket>, {\cf18 int} channel);\par
00048 \};\par
00049 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/session/models.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/session/models.hpp}
{\xe \v src/common/session/models.hpp}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <arpa/inet.h>}\par
{\f2 #include <iostream>}\par
{\f2 #include <map>}\par
{\f2 #include <netinet/in.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SessionRequest}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SessionType} \{ {\b Unknown}
, {\b FileExchange}
, {\b CommandPublisher}
, {\b CommandSubscriber}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v SessionType\:models.hpp}
{\xe \v models.hpp\:SessionType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b SessionType}}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Unknown\:models.hpp}
{\xe \v models.hpp\:Unknown}
{\qr Unknown{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\cell }{\cell }{\row }
{\xe \v FileExchange\:models.hpp}
{\xe \v models.hpp\:FileExchange}
{\qr FileExchange{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\cell }{\cell }{\row }
{\xe \v CommandPublisher\:models.hpp}
{\xe \v models.hpp\:CommandPublisher}
{\qr CommandPublisher{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\cell }{\cell }{\row }
{\xe \v CommandSubscriber\:models.hpp}
{\xe \v models.hpp\:CommandSubscriber}
{\qr CommandSubscriber{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 11} of file {\b models.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
models.hpp\par \pard\plain 
{\tc\tcl2 \v src/common/session/models.hpp}
{\xe \v src/common/session/models.hpp}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SESSION_CMN_MODELS_H}\par
00002 {\cf21 #define SESSION_CMN_MODELS_H}\par
00003 \par
00004 {\cf21 #include <arpa/inet.h>}\par
00005 {\cf21 #include <iostream>}\par
00006 {\cf21 #include <map>}\par
00007 {\cf21 #include <netinet/in.h>}\par
00008 \par
00009 {\cf17 using namespace }std;\par
00010 \par
00011 {\cf17 enum} SessionType \{\par
00012     Unknown,\par
00013     FileExchange,\par
00014     CommandPublisher,\par
00015     CommandSubscriber\par
00016 \};\par
00017 \par
00018 {\cf17 static} {\cf17 const} map<SessionType, string> session_type_map = \{\par
00019     \{CommandPublisher, {\cf22 "subscriber"}\},\par
00020     \{CommandSubscriber, {\cf22 "publisher"}\},\par
00021     \{FileExchange, {\cf22 "file_exchange"}\}\};\par
00022 \par
00023 {\cf17 class }SessionRequest \{\par
00024 {\cf17 public}:\par
00025     SessionType type;\par
00026     {\cf18 string}      username;\par
00027     uint16_t    uname_s;\par
00028 \par
00029     SessionRequest(uint8_t *bytes);\par
00030     SessionRequest(SessionType type, {\cf18 string} username);\par
00031     {\cf18 size_t} to_bytes(uint8_t **bytes_ptr);\par
00032 \};\par
00033 \par
00034 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/session/models.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/session/models.hpp}
{\xe \v src/server/session/models.hpp}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../common/session/models.hpp"}\par
{\f2 #include <arpa/inet.h>}\par
{\f2 #include <memory>}\par
{\f2 #include <netinet/in.h>}\par
{\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Connection}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
models.hpp\par \pard\plain 
{\tc\tcl2 \v src/server/session/models.hpp}
{\xe \v src/server/session/models.hpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SESSION_SRV_MODELS_H}\par
00002 {\cf21 #define SESSION_SRV_MODELS_H}\par
00003 \par
00004 {\cf21 #include "../../common/session/models.hpp"}\par
00005 {\cf21 #include <arpa/inet.h>}\par
00006 {\cf21 #include <memory>}\par
00007 {\cf21 #include <netinet/in.h>}\par
00008 {\cf21 #include <string>}\par
00009 \par
00010 \par
00011 {\cf17 using namespace }std;\par
00012 \par
00013 {\cf17 class }UserStore;\par
00014 \par
00015 {\cf17 class }Connection \{\par
00016 {\cf17 public}:\par
00017     SessionType session_type;\par
00018     {\cf18 string}      address;\par
00019     {\cf18 int}         port;\par
00020     pthread_t  *thread_id;\par
00021     {\cf18 int}         channel;\par
00022     {\cf18 int}         pipe_fd[2];\par
00023 \par
00024     Connection({\cf18 char} *address, {\cf18 int} port, {\cf18 int} channel, {\cf18 int} *pipe_fd);\par
00025     {\cf18 void}   set_thread_id(pthread_t *thread_id);\par
00026     {\cf18 string} get_full_address();\par
00027     {\cf18 void}   set_session_type(SessionType session_type);\par
00028     {\cf18 void}   get_conection_info();\par
00029 \};\par
00030 \par
00031 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/userland/models.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/userland/models.hpp}
{\xe \v src/server/userland/models.hpp}
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <semaphore.h>}\par
{\f2 #include <vector>}\par
{\f2 #include "../../common/socket_io/socket.hpp"}\par
{\f2 #include "../session/models.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Device}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ServerContext}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UserStore}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
models.hpp\par \pard\plain 
{\tc\tcl2 \v src/server/userland/models.hpp}
{\xe \v src/server/userland/models.hpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef ULAND_MODELS_H}\par
00002 {\cf21 #define ULAND_MODELS_H}\par
00003 \par
00004 {\cf21 #include <semaphore.h>}\par
00005 {\cf21 #include <vector>}\par
00006 \par
00007 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00008 {\cf21 #include "../session/models.hpp"}\par
00009 \par
00010 {\cf17 using namespace }std;\par
00011 \par
00012 {\cf17 class }Session;\par
00013 \par
00014 {\cf17 class }Device \{\par
00015 {\cf17 public}:\par
00016     {\cf18 string}                           address;\par
00017     {\cf18 string}                           username;\par
00018     map<int, shared_ptr<Connection>> connections;\par
00019 \par
00020     Device({\cf17 const} {\cf18 string} username, shared_ptr<Connection> connection);\par
00021 \};\par
00022 \par
00023 {\cf17 class }ServerContext \{\par
00024 {\cf17 public}:\par
00025     Device                *device;\par
00026     shared_ptr<Connection> connection;\par
00027     shared_ptr<UserStore>  storage;\par
00028     shared_ptr<Socket>     socket;\par
00029 \par
00030     ServerContext(shared_ptr<Socket> socket, shared_ptr<Connection> connection, shared_ptr<UserStore>);\par
00031     {\cf18 void} set_device(Device *device);\par
00032 \};\par
00033 \par
00034 {\cf17 class }UserStore \{\par
00035     map<string, vector<shared_ptr<Session>>> users_sessions;\par
00036     map<string, map<string, Device *>>       users_devices;\par
00037     sem_t                                    devices_lock;\par
00038     sem_t                                    files_lock;\par
00039 \par
00040 {\cf17 public}:\par
00041     UserStore();\par
00042     ~UserStore();\par
00043     map<string, Device *> get_user_devices({\cf17 const} {\cf18 string} username);\par
00044     vector<string>        get_connected_users();\par
00045     {\cf18 void}                  get_user_devices();\par
00046     {\cf18 bool}                  add_user({\cf17 const} {\cf18 string} username);\par
00047     {\cf18 bool}                  register_device({\cf17 const} {\cf18 string} username, shared_ptr<ServerContext> context);\par
00048     {\cf18 bool}                  register_connection({\cf17 const} {\cf18 string} username, shared_ptr<ServerContext> context);\par
00049     {\cf18 bool}                  unregister_connection(shared_ptr<ServerContext> context);\par
00050     Device               *get_device({\cf17 const} {\cf18 string} username, {\cf17 const} {\cf18 string} address);\par
00051 \};\par
00052 \par
00053 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/file_io/file_io.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/file_io/file_io.cpp}
{\xe \v src/common/file_io/file_io.cpp}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <algorithm>}\par
{\f2 #include <chrono>}\par
{\f2 #include <dirent.h>}\par
{\f2 #include <filesystem>}\par
{\f2 #include <iostream>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include <regex>}\par
{\f2 #include <sstream>}\par
{\f2 #include <sys/stat.h>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include <thread>}\par
{\f2 #include <vector>}\par
{\f2 #include "file_io.hpp"}\par
{\f2 #include "../vars.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
file_io.cpp\par \pard\plain 
{\tc\tcl2 \v src/common/file_io/file_io.cpp}
{\xe \v src/common/file_io/file_io.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <algorithm>}\par
00002 {\cf21 #include <chrono>}\par
00003 {\cf21 #include <dirent.h>}\par
00004 {\cf21 #include <filesystem>}\par
00005 {\cf21 #include <iostream>}\par
00006 {\cf21 #include <plog/Log.h>}\par
00007 {\cf21 #include <regex>}\par
00008 {\cf21 #include <sstream>}\par
00009 {\cf21 #include <sys/stat.h>}\par
00010 {\cf21 #include <sys/types.h>}\par
00011 {\cf21 #include <thread>}\par
00012 {\cf21 #include <vector>}\par
00013 \par
00014 {\cf21 #include "file_io.hpp"}\par
00015 \par
00016 {\cf21 #include "../vars.hpp"}\par
00017 \par
00018 {\cf17 using namespace }std;\par
00019 \par
00020 FileMetadata::FileMetadata(uint8_t *bytes) \{\par
00021     uint8_t *cursor = bytes;\par
00022 \par
00023     off_t size_prop;\par
00024     memmove(&size_prop, cursor, {\cf17 sizeof}(off_t));\par
00025     this->size = (off_t)ntohl(size_prop);\par
00026     cursor += {\cf17 sizeof}(off_t);\par
00027 \par
00028     {\cf20 // time_t t_prop;}\par
00029     {\cf20 // size_t time_s = sizeof(time_t);}\par
00030     {\cf20 // memmove(&t_prop, cursor, time_s);}\par
00031     {\cf20 // this->accessed_at = (time_t)ntohs(t_prop);}\par
00032     {\cf20 // cursor += time_s;}\par
00033 \par
00034     {\cf20 // memmove(&t_prop, cursor, time_s);}\par
00035     {\cf20 // this->modified_at = (time_t)ntohs(t_prop);}\par
00036     {\cf20 // cursor += time_s;}\par
00037 \par
00038     {\cf20 // memmove(&t_prop, cursor, time_s);}\par
00039     {\cf20 // this->stat_changed_at = (time_t)ntohs(t_prop);}\par
00040     {\cf20 // cursor += time_s;}\par
00041 \par
00042     uint16_t prop;\par
00043     {\cf18 size_t}   uint16_s = {\cf17 sizeof}(uint16_t);\par
00044     memmove(&prop, cursor, uint16_s);\par
00045     uint16_t name_size = ntohs(prop);\par
00046     cursor += uint16_s;\par
00047 \par
00048     {\cf18 int} max_name_size = Packet::get_max_payload_size() - {\cf17 sizeof}(off_t) - uint16_s;\par
00049     {\cf19 if} (name_size > max_name_size) \{\par
00050         PLOGE << {\cf22 "Buffer overflow: "} << name_size - max_name_size << {\cf22 " bigger than the buffer"} << endl;\par
00051         name_size = max_name_size;\par
00052     \}\par
00053 \par
00054     uint8_t *name = (uint8_t *)calloc(name_size, {\cf17 sizeof}({\cf18 char}));\par
00055     memmove(name, cursor, name_size);\par
00056     this->name = string(({\cf18 char} *)name, ({\cf18 size_t})name_size);\par
00057 \}\par
00058 \par
00059 FileMetadata::FileMetadata({\cf18 string} filename, {\cf18 string} file_path) \{\par
00060     {\cf17 struct }stat stat_data;\par
00061     {\cf18 string}      full_path = file_path + filename;\par
00062     {\cf19 if} (stat(full_path.c_str(), &stat_data) == 0) \{\par
00063         this->name            = filename;\par
00064         this->size            = stat_data.st_size;\par
00065         this->accessed_at     = stat_data.st_atim.tv_sec;\par
00066         this->modified_at     = stat_data.st_mtim.tv_sec;\par
00067         this->stat_changed_at = stat_data.st_ctim.tv_sec;\par
00068     \} {\cf19 else} \{\par
00069         PLOGE << {\cf22 "Error loading file "} << filename << {\cf22 " metadata: "} << strerror(errno) << endl;\par
00070         {\cf19 throw};\par
00071     \}\par
00072 \}\par
00073 \par
00074 FileMetadata::FileMetadata({\cf18 string} full_path) \{\par
00075 \}\par
00076 \par
00077 {\cf18 size_t} FileMetadata::to_bytes(uint8_t **bytes_ptr) \{\par
00078     {\cf18 size_t}   time_s    = {\cf17 sizeof}(time_t);\par
00079     {\cf18 size_t}   uint16_s  = {\cf17 sizeof}(uint16_t);\par
00080     uint16_t name_size = this->name.size() + 1;\par
00081 \par
00082     {\cf18 size_t} packet_size = {\cf17 sizeof}(off_t);\par
00083     {\cf20 // packet_size += time_s;}\par
00084     {\cf20 // packet_size += time_s;}\par
00085     {\cf20 // packet_size += time_s;}\par
00086     packet_size += uint16_s;\par
00087     packet_size += name_size;\par
00088 \par
00089     *bytes_ptr      = (uint8_t *)calloc(packet_size, {\cf17 sizeof}(uint8_t));\par
00090     uint8_t *cursor = *bytes_ptr;\par
00091 \par
00092     off_t enc_size = htonl(this->size);\par
00093     memmove(cursor, &enc_size, {\cf17 sizeof}(off_t));\par
00094     cursor += {\cf17 sizeof}(off_t);\par
00095 \par
00096     {\cf20 // time_t prop_t = htonl(this->accessed_at);}\par
00097     {\cf20 // memmove(cursor, &prop_t, time_s);}\par
00098     {\cf20 // cursor += time_s;}\par
00099 \par
00100     {\cf20 // prop_t = htonl(this->modified_at);}\par
00101     {\cf20 // memmove(cursor, &prop_t, time_s);}\par
00102     {\cf20 // cursor += time_s;}\par
00103 \par
00104     {\cf20 // prop_t = htonl(this->stat_changed_at);}\par
00105     {\cf20 // memmove(cursor, &prop_t, time_s);}\par
00106     {\cf20 // cursor += time_s;}\par
00107     {\cf20 //}\par
00108 \par
00109     uint16_t name_size_enc = htons(name_size);\par
00110     memmove(cursor, &name_size_enc, uint16_s);\par
00111     cursor += uint16_s;\par
00112 \par
00113     memmove(cursor, this->name.c_str(), name_size);\par
00114     {\cf19 return} packet_size;\par
00115 \}\par
00116 \par
00117 \par
00118 \par
00119 FileHandler::FileHandler({\cf17 const} {\cf18 string} work_dir)\{\par
00120     this->work_dir = work_dir;\par
00121     this->file_ptr = NULL;\par
00122     this->metadata = NULL;\par
00123 \}\par
00124 \par
00125 FileHandler::~FileHandler() \{\par
00126     {\cf19 if} (this->file_ptr != NULL)\par
00127         this->close();\par
00128 \}\par
00129 \par
00130 {\cf18 void} FileHandler::open({\cf17 const} {\cf18 string} file_path) \{\par
00131     this->file_path = file_path;\par
00132     this->file_ptr  = fopen(file_path.c_str(), {\cf22 "rb"});\par
00133     regex  rgx({\cf22 "^(.*\\\\/)([^\\\\/]+)$"});\par
00134     smatch matches;\par
00135     regex_search(file_path, matches, rgx);\par
00136     {\cf18 string} folder_path = matches[1];\par
00137     {\cf20 // PLOGD << "path: " << folder_path << endl;}\par
00138     {\cf18 string} filename = matches[2];\par
00139     {\cf20 // PLOGD << "name: " << filename << endl;}\par
00140     shared_ptr<FileMetadata> file_metadata({\cf17 new} FileMetadata(filename, folder_path));\par
00141     this->metadata = file_metadata;\par
00142 \}\par
00143 \par
00144 {\cf18 void} FileHandler::close() \{\par
00145     fclose(this->file_ptr);\par
00146 \}\par
00147 \par
00148 std::vector<string> FileHandler::list_files({\cf17 const} {\cf18 string} directory) \{\par
00149     {\cf17 struct }dirent *entry;\par
00150     vector<string> files;\par
00151 \par
00152     DIR *dir_ptr = opendir(directory.c_str());\par
00153     {\cf19 if} (dir_ptr != NULL) \{\par
00154         {\cf19 while} ((entry = readdir(dir_ptr))) \{\par
00155             {\cf19 if} (entry->d_type == DT_REG) \{\par
00156                 files.push_back({\cf18 string}(entry->d_name));\par
00157             \}\par
00158         \}\par
00159         closedir(dir_ptr);\par
00160     \} {\cf19 else} \{\par
00161         perror({\cf22 "Couldn't open the directory"});\par
00162         PLOGE << {\cf22 "Cannot open directory "} << directory << {\cf22 " Reason: "} << strerror(errno) << endl;\par
00163     \}\par
00164     {\cf19 return} files;\par
00165 \}\par
00166 \par
00167 {\cf18 bool} FileHandler::send(shared_ptr<Socket> socket, {\cf18 int} channel) \{\par
00168     this->metadata->send(socket, channel);\par
00169     off_t file_size = this->metadata->size;\par
00170     PLOGD << {\cf22 "File size: "} << file_size << endl;\par
00171     {\cf18 int}   seq_index        = 1;\par
00172     {\cf18 int}   file_buf_size    = Packet::get_max_payload_size();\par
00173     {\cf18 int}   file_bytes_read  = 0;\par
00174     {\cf18 int}   total_bytes_sent = 0;\par
00175     {\cf18 float} percentage       = 0;\par
00176 \par
00177     uint8_t *file_buf = (uint8_t *)calloc(file_buf_size, {\cf17 sizeof}(uint8_t));\par
00178     PLOGW << {\cf22 "teste: "} << this->file_ptr << endl;\par
00179     {\cf19 if} (this->file_ptr != NULL) \{\par
00180         PLOGI << {\cf22 "Sending file "} << this->metadata->name << endl;\par
00181         {\cf19 while} ((file_bytes_read = fread(file_buf, {\cf17 sizeof}(uint8_t), file_buf_size, this->file_ptr)) > 0) \{\par
00182             PLOGD << {\cf22 "Chunk index: "} << seq_index << endl;\par
00183 \par
00184             unique_ptr<Packet> packet({\cf17 new} Packet(FileChunk, seq_index, file_size, file_bytes_read, file_buf));\par
00185 \par
00186             PLOGD << {\cf22 "Total file size: "} << packet->total_size << endl;\par
00187 \par
00188             packet->send(socket, channel);\par
00189             total_bytes_sent += file_bytes_read;\par
00190             percentage = (float)(total_bytes_sent / ({\cf18 float})file_size);\par
00191 \par
00192             PLOGD << {\cf22 "Transfering  "} << this->metadata->name << {\cf22 ": "} << percentage * 100 << {\cf22 " %"} << endl;\par
00193 \par
00194             bzero(file_buf, file_bytes_read);\par
00195             seq_index += 1;\par
00196         \}\par
00197     \}\par
00198     {\cf19 return} {\cf17 true};\par
00199 \}\par
00200 \par
00201 {\cf18 bool} FileMetadata::send(shared_ptr<Socket> socket, {\cf18 int} channel) \{\par
00202     uint8_t           *bytes;\par
00203     {\cf18 int}                bsize = this->to_bytes(&bytes);\par
00204     unique_ptr<Packet> packet({\cf17 new} Packet(FileMetadataMsg, 1, bsize, bsize, bytes));\par
00205     packet->send(socket, channel);\par
00206     {\cf19 return} {\cf17 true};\par
00207 \}\par
00208 \par
00209 {\cf18 bool} FileHandler::delete_self() \{\par
00210     this->close();\par
00211 \par
00212     {\cf19 if} (remove(filename.c_str()) != 0) \{\par
00213         PLOGE << {\cf22 "Error: Unable to delete the file.\\n"};\par
00214         {\cf19 return} {\cf17 false};\par
00215     \}\par
00216 \par
00217     PLOGI << {\cf22 "File "} << this->filename << {\cf22 " deleted successfully.\\n"};\par
00218     {\cf19 return} {\cf17 true};\par
00219 \}\par
00220 \par
00221 {\cf18 long} FileHandler::get_size() \{\par
00222     {\cf17 struct }stat file_status;\par
00223     {\cf19 if} (stat(this->file_path.c_str(), &file_status) < 0) \{\par
00224         {\cf19 return} -1;\par
00225     \}\par
00226     {\cf19 return} file_status.st_size;\par
00227 \}\par
00228 \par
00229 {\cf18 bool} FileHandler::get_path_metadata({\cf17 const} {\cf18 string} path, {\cf17 struct} stat *metadata) \{\par
00230     {\cf19 return} stat(path.c_str(), metadata) == 0;\par
00231 \}\par
00232 \par
00233 {\cf18 bool} FileHandler::path_exists({\cf17 const} {\cf18 string} path) \{\par
00234     {\cf17 struct }stat metadata;\par
00235     {\cf19 return} FileHandler::get_path_metadata(path, &metadata);\par
00236 \}\par
00237 \par
00238 {\cf18 string} FileHandler::get_digest() \{\par
00239     PLOGE << {\cf22 "Error: Hash calculation not implemented.\\n"};\par
00240     {\cf19 return} {\cf22 ""};\par
00241 \}\par
00242 \par
00243 {\cf18 void} FileHandler::listen_file() \{\par
00244     PLOGE << {\cf22 "Error: File listening not implemented.\\n"};\par
00245 \}\par
00246 \par
00247 {\cf18 string} FileHandler::get_sync_dir({\cf18 string} username, SYNC_DIR_TYPE mode) \{\par
00248     ostringstream sync_dir;\par
00249     {\cf19 if} (mode == DIR_SERVER) \{\par
00250         sync_dir << {\cf22 "./srv_sync_dir/"};\par
00251     \} {\cf19 else} \{\par
00252         sync_dir << {\cf22 "./sync_dir/"};\par
00253     \}\par
00254     {\cf19 if} (!FileHandler::path_exists(sync_dir.str())) \{\par
00255         {\cf18 int} main_dir_result = mkdir(sync_dir.str().c_str(), 0755);\par
00256         PLOGI << {\cf22 "Creating main sync dir "} << sync_dir.str() << endl;\par
00257     \}\par
00258     sync_dir << username;\par
00259     {\cf19 if} (!FileHandler::path_exists(sync_dir.str())) \{\par
00260         PLOGI << {\cf22 "Creating sync dir "} << sync_dir.str() << endl;\par
00261         {\cf18 int} dir_result = mkdir(sync_dir.str().c_str(), 0755);\par
00262         {\cf19 if} (dir_result != 0 && errno != EEXIST) \{\par
00263             PLOGE << {\cf22 "Cannot create directory: "} << sync_dir.str() << endl;\par
00264             {\cf19 throw};\par
00265         \}\par
00266     \}\par
00267     {\cf19 return} sync_dir.str();\par
00268 \};\par
00269 \par
00270 {\cf18 void} FileHandler::receive_file({\cf18 string} work_dir, shared_ptr<FileMetadata> metadata, shared_ptr<Socket> socket, {\cf18 int} channel) \{\par
00271     {\cf18 char} buffer[BUFFER_SIZE];\par
00272     {\cf18 int}  total_bytes = 0;\par
00273     {\cf18 int}  collected_bytes;\par
00274     {\cf18 int}  iteration;\par
00275     PLOGI << {\cf22 "Waiting for file metadata"} << endl;\par
00276     {\cf18 int} chars_read = socket->get_message_sync((uint8_t *)buffer, channel);\par
00277     PLOGI << {\cf22 "Received file metadata"} << endl;\par
00278     {\cf19 while} (chars_read != 0) \{\par
00279         PLOGD << {\cf22 "Chars read: "} << chars_read << endl;\par
00280         collected_bytes = 0;\par
00281         iteration       = 1;\par
00282         chars_read      = 0;\par
00283         {\cf19 if} (chars_read < 0)\par
00284             printf({\cf22 "ERROR reading from socket\\n"});\par
00285         Packet *packet = {\cf17 new} Packet((uint8_t *)buffer);\par
00286         {\cf19 if} (packet->type != FileMetadataMsg) \{\par
00287             PLOGE << {\cf22 "Invalid packet type. Expected file metadata, received: "} << packet->type << endl;\par
00288             {\cf19 break};\par
00289         \}\par
00290         {\cf20 //unique_ptr<FileMetadata> metadata(new FileMetadata(packet->payload));}\par
00291         metadata = make_shared<FileMetadata>(packet->payload);\par
00292         PLOGI << {\cf22 "Received file "} << metadata->name << endl;\par
00293         total_bytes = metadata->size;\par
00294         printf({\cf22 "File size: %ld\\n"}, ({\cf18 long})total_bytes);\par
00295         ostringstream oss;\par
00296         oss << work_dir << {\cf22 "/"} << metadata->name;\par
00297         {\cf18 string} filepath = oss.str();\par
00298         PLOGI << {\cf22 "Storing file in "} << filepath.c_str() << endl;\par
00299         FILE *file_output = fopen(filepath.c_str(), {\cf22 "wb"});\par
00300 \par
00301         {\cf19 while} (collected_bytes < total_bytes) \{\par
00302             chars_read = socket->get_message_sync((uint8_t *)buffer, channel);\par
00303             PLOGD << {\cf22 "Chars read: "} << chars_read << endl;\par
00304             {\cf19 if} (chars_read < 0) \{\par
00305                 printf({\cf22 "ERROR reading from socket\\n"});\par
00306                 {\cf19 break};\par
00307             \}\par
00308             PLOGD << {\cf22 "Iteration: "} << iteration << endl;\par
00309             iteration += 1;\par
00310             unique_ptr<Packet> packet({\cf17 new} Packet((uint8_t *)buffer));\par
00311             {\cf19 if} (packet->type != FileChunk) \{\par
00312                 PLOGE << {\cf22 "Invalid file chunk: "} << endl;\par
00313                 PLOGD << {\cf22 "Packet type: "} << packet->type << endl;\par
00314                 PLOGD << {\cf22 "Packet seq idx: "} << packet->seq_index << endl;\par
00315                 PLOGD << {\cf22 "Packet total size: "} << packet->total_size << endl;\par
00316                 PLOGD << {\cf22 "Packet payload size: "} << packet->payload_size << endl;\par
00317                 PLOGD << {\cf22 "Packet payload: "} << packet->payload << endl;\par
00318                 {\cf19 return};\par
00319             \}\par
00320             fwrite(packet->payload, 1, packet->payload_size * {\cf17 sizeof}(uint8_t), file_output);\par
00321             PLOGD << {\cf22 "Received packet type "} << packet->type << endl;\par
00322             PLOGD << {\cf22 "File size: "} << (long)packet->total_size << endl;\par
00323             PLOGD << {\cf22 "Chunk size: "} << packet->payload_size << endl;\par
00324             PLOGD << {\cf22 "Chunk index: "} << packet->seq_index << endl;\par
00325             collected_bytes += packet->payload_size;\par
00326             PLOGD << {\cf22 "Collected bytes: "} << collected_bytes << endl;\par
00327             total_bytes = packet->total_size;\par
00328             bzero(buffer, BUFFER_SIZE);\par
00329         \}\par
00330         {\cf19 if} (file_output != NULL) \{\par
00331             fclose(file_output);\par
00332         \}\par
00333         chars_read = socket->get_message_sync((uint8_t *)buffer, channel);\par
00334     \}\par
00335 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/file_io/file_io.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/file_io/file_io.cpp}
{\xe \v src/server/file_io/file_io.cpp}
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FILE_IO_H}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v FILE_IO_H\:file_io.cpp}
{\xe \v file_io.cpp\:FILE_IO_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FILE_IO_H}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 2} of file {\b file_io.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
file_io.cpp\par \pard\plain 
{\tc\tcl2 \v src/server/file_io/file_io.cpp}
{\xe \v src/server/file_io/file_io.cpp}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef FILE_IO_H}\par
00002 {\cf21 #define FILE_IO_H}\par
00003 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/file_io/file_io.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/file_io/file_io.hpp}
{\xe \v src/common/file_io/file_io.hpp}
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstring>}\par
{\f2 #include <fstream>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "../socket_io/socket.hpp"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FileMetadata}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FileHandler}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SYNC_DIR_TYPE} \{ {\b DIR_SERVER}
, {\b DIR_CLIENT}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v SYNC_DIR_TYPE\:file_io.hpp}
{\xe \v file_io.hpp\:SYNC_DIR_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b SYNC_DIR_TYPE}}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v DIR_SERVER\:file_io.hpp}
{\xe \v file_io.hpp\:DIR_SERVER}
{\qr DIR_SERVER{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\cell }{\cell }{\row }
{\xe \v DIR_CLIENT\:file_io.hpp}
{\xe \v file_io.hpp\:DIR_CLIENT}
{\qr DIR_CLIENT{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 13} of file {\b file_io.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
file_io.hpp\par \pard\plain 
{\tc\tcl2 \v src/common/file_io/file_io.hpp}
{\xe \v src/common/file_io/file_io.hpp}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef FILE_HANDLER_HPP}\par
00002 {\cf21 #define FILE_HANDLER_HPP}\par
00003 \par
00004 {\cf21 #include <cstring>}\par
00005 {\cf21 #include <fstream>}\par
00006 {\cf21 #include <string>}\par
00007 {\cf21 #include <vector>}\par
00008 \par
00009 {\cf21 #include "../socket_io/socket.hpp"}\par
00010 \par
00011 {\cf17 using namespace }std;\par
00012 \par
00013 {\cf17 enum} SYNC_DIR_TYPE \{\par
00014     DIR_SERVER,\par
00015     DIR_CLIENT\par
00016 \};\par
00017 \par
00018 {\cf17 class }FileMetadata \{\par
00019 {\cf17 public}:\par
00020     {\cf18 string} name;\par
00021     off_t  size;\par
00022     time_t modified_at;\par
00023     time_t accessed_at;\par
00024     time_t stat_changed_at;\par
00025 \par
00026     FileMetadata(uint8_t *bytes);\par
00027     FileMetadata({\cf18 string} name, {\cf18 string} file_path);\par
00028     FileMetadata({\cf18 string} full_path);\par
00029     {\cf18 size_t} to_bytes(uint8_t **bytes);\par
00030     {\cf18 bool}   send(shared_ptr<Socket> socket, {\cf18 int} channel);\par
00031 \};\par
00032 \par
00033 {\cf17 class }FileHandler \{\par
00034     FILE                    *file_ptr;\par
00035     {\cf18 string}                   file_path;\par
00036     shared_ptr<FileMetadata> metadata;\par
00037     {\cf18 string}                  work_dir;\par
00038 \par
00039 {\cf17 public}:\par
00040     FileHandler({\cf17 const} {\cf18 string} work_dir);\par
00041     ~FileHandler();\par
00042     {\cf18 void}                  open({\cf17 const} {\cf18 string} file_path);\par
00043     {\cf18 void}                  close();\par
00044     {\cf17 static} vector<string> list_files({\cf17 const} {\cf18 string} directory);\par
00045     {\cf18 bool}                  send(shared_ptr<Socket> socket, {\cf18 int} channel);\par
00046     {\cf18 bool}                  delete_self();\par
00047     {\cf18 string}                get_digest();\par
00048     {\cf18 void}                  listen_file();\par
00049     {\cf18 long}                  get_size();\par
00050     {\cf17 static} {\cf18 string}         get_sync_dir({\cf18 string} username, SYNC_DIR_TYPE mode = DIR_CLIENT);\par
00051     {\cf17 static} {\cf18 bool}           get_path_metadata({\cf17 const} {\cf18 string} path, {\cf17 struct} stat *metadata);\par
00052     {\cf17 static} {\cf18 bool}           path_exists({\cf17 const} {\cf18 string} path);\par
00053     {\cf18 void} receive_file({\cf18 string} work_dir, shared_ptr<FileMetadata> metadata, shared_ptr<Socket> socket, {\cf18 int} channel);\par
00054 \par
00055 {\cf17 private}:\par
00056     {\cf18 string}   filename;\par
00057     ifstream file;\par
00058 \};\par
00059 \par
00060 {\cf21 #endif }{\cf20 // FILE_HANDLER_HPP}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/file_io/file_io.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/file_io/file_io.hpp}
{\xe \v src/server/file_io/file_io.hpp}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <sys/stat.h>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include <unistd.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
file_io.hpp\par \pard\plain 
{\tc\tcl2 \v src/server/file_io/file_io.hpp}
{\xe \v src/server/file_io/file_io.hpp}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include <sys/stat.h>}\par
00003 {\cf21 #include <sys/types.h>}\par
00004 {\cf21 #include <unistd.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/file_io/inotify.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/file_io/inotify.cpp}
{\xe \v src/common/file_io/inotify.cpp}
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "inotify.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
inotify.cpp\par \pard\plain 
{\tc\tcl2 \v src/common/file_io/inotify.cpp}
{\xe \v src/common/file_io/inotify.cpp}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "inotify.hpp"}\par
00002 \par
00003 Inotify::Inotify(shared_ptr<Socket> socket, {\cf17 const} {\cf18 char} *folder_path) \{\par
00004     this->folder_path     = folder_path;\par
00005     this->file_descriptor = inotify_init();\par
00006     this->socket          = socket;\par
00007     {\cf19 if} (this->file_descriptor == -1) \{\par
00008         PLOGE << {\cf22 "Failed to initialize inotify"} << endl;\par
00009         {\cf19 return};\par
00010     \}\par
00011 \par
00012     this->watch_descriptor = inotify_add_watch(this->file_descriptor, this->folder_path, IN_MODIFY | IN_CREATE | IN_DELETE);\par
00013     {\cf19 if} (this->watch_descriptor == -1) \{\par
00014         PLOGE << {\cf22 "Failed to add watch"} << endl;\par
00015         {\cf19 return};\par
00016     \}\par
00017 \}\par
00018 \par
00019 {\cf18 int} Inotify::get_file_descriptor() \{\par
00020     {\cf19 return} this->file_descriptor;\par
00021 \}\par
00022 \par
00023 {\cf18 int} Inotify::get_watch_descriptor() \{\par
00024     {\cf19 return} this->watch_descriptor;\par
00025 \}\par
00026 \par
00027 {\cf18 void} Inotify::read_event() \{\par
00028     PLOGI << {\cf22 "Inotify read event"} << endl;\par
00029 \par
00030     {\cf18 char}   buffer[BUFFER_LEN];\par
00031     {\cf18 string} full_file_path;\par
00032     {\cf18 int}    length = read(this->file_descriptor, buffer, BUFFER_LEN);\par
00033 \par
00034     unique_ptr<FileHandler> file_handler({\cf17 new} FileHandler(this->folder_path));\par
00035     {\cf19 if} (length < 0) \{\par
00036         PLOGE << {\cf22 "Failed to read"} << endl;\par
00037     \}\par
00038     PLOGI << {\cf22 "Read "} << length << {\cf22 " bytes from inotify"} << endl;\par
00039     {\cf17 struct }inotify_event *{\cf17 event} = ({\cf17 struct }inotify_event *)&(buffer)[0];\par
00040     {\cf19 if} (event->len) \{\par
00041         {\cf19 if} (event->mask & IN_CREATE) \{\par
00042             full_file_path = string(this->folder_path) + {\cf22 "/"} + string(event->name);\par
00043             PLOGI << {\cf22 "The file "} << full_file_path << {\cf22 " was created."} << endl;\par
00044             file_handler->open(full_file_path);\par
00045             {\cf19 if} (file_handler->send(this->socket, this->socket->socket_fd)) \{\par
00046                 PLOGI << {\cf22 "File "} << full_file_path << {\cf22 " sent successfully."} << endl;\par
00047             \} {\cf19 else} \{\par
00048                 PLOGE << {\cf22 "Error sending file "} << full_file_path << {\cf22 "."} << endl;\par
00049             \}\par
00050         \} {\cf19 else} {\cf19 if} (event->mask & IN_MODIFY) \{\par
00051             full_file_path = string(this->folder_path) + {\cf22 "/"} + string(event->name);\par
00052             PLOGI << {\cf22 "The file "} << full_file_path << {\cf22 " was modified."} << endl;\par
00053             file_handler->open(full_file_path);\par
00054             {\cf19 if} (file_handler->send(this->socket, this->socket->socket_fd)) \{\par
00055                 PLOGI << {\cf22 "File "} << full_file_path << {\cf22 " sent successfully."} << endl;\par
00056             \} {\cf19 else} \{\par
00057                 PLOGE << {\cf22 "Error sending file "} << full_file_path << {\cf22 "."} << endl;\par
00058             \}\par
00059         \} {\cf19 else} {\cf19 if} (event->mask & IN_DELETE) \{\par
00060             full_file_path = string(this->folder_path) + {\cf22 "/"} + string(event->name);\par
00061             PLOGI << {\cf22 "The file "} << full_file_path << {\cf22 " was deleted."} << endl;\par
00062             {\cf20 // file_handler->open(full_file_path);}\par
00063             {\cf20 // if (fileHandler->send(this->socket, this->socket->socket_fd)) \{}\par
00064             {\cf20 // ver fun\'E7\'E3o de deletar arquivo no servidor}\par
00065         \}\par
00066     \}\par
00067     PLOG_INFO << {\cf22 "Inotify read event end"} << endl;\par
00068 \}\par
00069 \par
00070 {\cf18 void} Inotify::closeInotify() \{\par
00071     inotify_rm_watch(this->file_descriptor, this->watch_descriptor);\par
00072     close(this->file_descriptor);\par
00073 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/file_io/inotify.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/file_io/inotify.hpp}
{\xe \v src/common/file_io/inotify.hpp}
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../common/file_io/file_io.hpp"}\par
{\f2 #include "../../common/socket_io/socket.hpp"}\par
{\f2 #include <cstring>}\par
{\f2 #include <iostream>}\par
{\f2 #include <memory>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include <sys/inotify.h>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include <unistd.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Inotify}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EVENT_SIZE}\~ (sizeof(struct inotify_event))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BUFFER_LEN}\~ (1024 * ({\b EVENT_SIZE} + 16))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v BUFFER_LEN\:inotify.hpp}
{\xe \v inotify.hpp\:BUFFER_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BUFFER_LEN\~ (1024 * ({\b EVENT_SIZE} + 16))}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b inotify.hpp}.}\par
}
{\xe \v EVENT_SIZE\:inotify.hpp}
{\xe \v inotify.hpp\:EVENT_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EVENT_SIZE\~ (sizeof(struct inotify_event))}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b inotify.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
inotify.hpp\par \pard\plain 
{\tc\tcl2 \v src/common/file_io/inotify.hpp}
{\xe \v src/common/file_io/inotify.hpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef INOTIFY_H}\par
00002 {\cf21 #define INOTIFY_H}\par
00003 {\cf20 // usar sempre snake case para nomear as variaveis}\par
00004 {\cf21 #include "../../common/file_io/file_io.hpp"}\par
00005 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00006 {\cf21 #include <cstring>}\par
00007 {\cf21 #include <iostream>}\par
00008 {\cf21 #include <memory>}\par
00009 {\cf21 #include <plog/Log.h>}\par
00010 {\cf21 #include <sys/inotify.h>}\par
00011 {\cf21 #include <sys/types.h>}\par
00012 {\cf21 #include <unistd.h>}\par
00013 \par
00014 {\cf17 using namespace }std;\par
00015 \par
00016 {\cf21 #define EVENT_SIZE (sizeof(struct inotify_event))}\par
00017 {\cf21 #define BUFFER_LEN (1024 * (EVENT_SIZE + 16))}\par
00018 \par
00019 {\cf17 class }Inotify \{\par
00020     {\cf17 const} {\cf18 char}        *folder_path;\par
00021     {\cf18 int}                file_descriptor;\par
00022     {\cf18 int}                watch_descriptor;\par
00023 \par
00024 {\cf17 public}:\par
00025     shared_ptr<Socket> socket;\par
00026     Inotify(shared_ptr<Socket> socket, {\cf17 const} {\cf18 char} *folder_path);\par
00027     {\cf18 int}  get_file_descriptor();\par
00028     {\cf18 int}  get_watch_descriptor();\par
00029     {\cf18 void} read_event();\par
00030     {\cf18 void} closeInotify();\par
00031 \};\par
00032 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/socket_io/socket.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/socket_io/socket.cpp}
{\xe \v src/common/socket_io/socket.cpp}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <arpa/inet.h>}\par
{\f2 #include <fcntl.h>}\par
{\f2 #include <iostream>}\par
{\f2 #include <memory>}\par
{\f2 #include <netdb.h>}\par
{\f2 #include <netinet/in.h>}\par
{\f2 #include <plog/Log.h>}\par
{\f2 #include <pthread.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <sys/ioctl.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include "../vars.hpp"}\par
{\f2 #include "socket.hpp"}\par
{\f2 #include <string>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
socket.cpp\par \pard\plain 
{\tc\tcl2 \v src/common/socket_io/socket.cpp}
{\xe \v src/common/socket_io/socket.cpp}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <arpa/inet.h>}\par
00002 {\cf21 #include <fcntl.h>} {\cf20 // for open}\par
00003 {\cf21 #include <iostream>}\par
00004 {\cf21 #include <memory>}\par
00005 {\cf21 #include <netdb.h>}\par
00006 {\cf21 #include <netinet/in.h>}\par
00007 {\cf21 #include <plog/Log.h>}\par
00008 {\cf21 #include <pthread.h>}\par
00009 {\cf21 #include <stdio.h>}\par
00010 {\cf21 #include <stdlib.h>}\par
00011 {\cf21 #include <string.h>}\par
00012 {\cf21 #include <sys/ioctl.h>}\par
00013 {\cf21 #include <unistd.h>}\par
00014 \par
00015 {\cf20 // Project-level imports}\par
00016 {\cf21 #include "../vars.hpp"}\par
00017 {\cf21 #include "socket.hpp"}\par
00018 {\cf21 #include <iostream>}\par
00019 {\cf21 #include <string>}\par
00020 \par
00021 {\cf17 using namespace }std;\par
00022 \par
00023 Socket::Socket({\cf18 string} address, {\cf18 int} port, {\cf18 bool} *interrupt, SocketMode mode, {\cf18 int} buffer_size) \{\par
00024     this->init(address, port, interrupt, mode, buffer_size, 0);\par
00025 \};\par
00026 \par
00027 Socket::Socket({\cf18 string} address, {\cf18 int} port, {\cf18 bool} *interrupt, SocketMode mode, {\cf18 int} buffer_size, {\cf18 int} max_requests) \{\par
00028     this->init(address, port, interrupt, mode, buffer_size, max_requests);\par
00029 \};\par
00030 \par
00031 {\cf18 void} Socket::init(\par
00032     {\cf18 string} address, {\cf18 int} port, {\cf18 bool} *interrupt, SocketMode mode = Server, {\cf18 int} buffer_size = BUFFER_SIZE, {\cf18 int} max_requests = MAX_REQUESTS) \{\par
00033     this->interrupt = interrupt;\par
00034     {\cf19 if} (mode == Server) \{\par
00035         this->socket_fd = socket(PF_INET, SOCK_STREAM, 0);\par
00036     \} {\cf19 else} \{\par
00037         this->socket_fd = socket(AF_INET, SOCK_STREAM, 0);\par
00038     \}\par
00039     {\cf19 if} (this->socket_fd == -1) \{\par
00040         PLOGE << {\cf22 "Error: cannot open socket on "} << address << {\cf22 ":"} << port << endl;\par
00041     \}\par
00042 \par
00043     {\cf20 // Options for non-blocking socket that didn't work}\par
00044     {\cf20 // Set flags for non-blocking}\par
00045     {\cf20 // int flags = fcntl(this->socket_fd, F_GETFL);}\par
00046     {\cf20 // flags = flags == -1 ? O_NONBLOCK : flags | O_NONBLOCK;}\par
00047     {\cf20 // ::fcntl(this->socket_fd, F_SETFL, flags);}\par
00048     {\cf20 // this->socket_flags = flags;}\par
00049 \par
00050     {\cf17 struct }timeval timeout;\par
00051     timeout.tv_sec  = 10;\par
00052     timeout.tv_usec = 0;\par
00053     {\cf18 int} keepalive = 1;\par
00054 \par
00055     {\cf19 if} (setsockopt(this->socket_fd, SOL_SOCKET, SO_KEEPALIVE, &keepalive, {\cf17 sizeof} ({\cf18 int}))) \{\par
00056         PLOGE << {\cf22 "Cannot set socket as keepalive. Reason: "} << strerror(errno) << endl;\par
00057     \}\par
00058 \par
00059     {\cf19 if} (setsockopt(this->socket_fd, SOL_SOCKET, SO_RCVBUF, &buffer_size, {\cf17 sizeof} ({\cf18 int}))) \{\par
00060         PLOGE << {\cf22 "Cannot set socket recv buffer size. Reason: "} << strerror(errno) << endl;\par
00061     \}\par
00062 \par
00063     {\cf19 if} (setsockopt(this->socket_fd, SOL_SOCKET, SO_SNDBUF, &buffer_size, {\cf17 sizeof} ({\cf18 int}))) \{\par
00064         PLOGE << {\cf22 "Cannot set socket send buffer size. Reason: "} << strerror(errno) << endl;\par
00065     \}\par
00066 \par
00067     {\cf20 // if (setsockopt(this->socket_fd, SOL_SOCKET, SO_RCVTIMEO, &timeout, sizeof timeout) < 0) \{}\par
00068     {\cf20 //     PLOGE << "Cannot set socket recv timeout. Reason: " << strerror(errno) << endl;}\par
00069     {\cf20 // \}}\par
00070 \par
00071     {\cf20 // if (setsockopt(this->socket_fd, SOL_SOCKET, SO_SNDTIMEO, &timeout, sizeof timeout) < 0) \{}\par
00072     {\cf20 //     PLOGE << "Cannot set socket send timeout. Reason: " << strerror(errno) << endl;}\par
00073     {\cf20 // \}}\par
00074 \par
00075     {\cf19 if} (setsockopt(this->socket_fd, SOL_SOCKET, SO_REUSEADDR, &keepalive, {\cf17 sizeof}({\cf18 int}))) \{\par
00076         PLOGE << {\cf22 "ERR reuseaddr"} << endl;\par
00077     \}\par
00078 \par
00079     this->server_address.sin_family      = AF_INET;\par
00080     this->server_address.sin_port        = htons(port);\par
00081     this->server_address.sin_addr.s_addr = inet_addr(address.c_str());\par
00082     this->buffer_size                    = buffer_size;\par
00083 \par
00084     memset(this->server_address.sin_zero, {\cf23 '\\0'}, {\cf17 sizeof} this->server_address.sin_zero);\par
00085 \par
00086     this->mode = mode;\par
00087     {\cf19 if} (mode == Server) \{\par
00088         this->bind();\par
00089         this->listen(max_requests);\par
00090     \} {\cf19 else} \{\par
00091         {\cf17 struct }hostent *server_addr = gethostbyname(address.c_str());\par
00092         {\cf19 if} (server_addr == NULL) \{\par
00093             PLOGE << {\cf22 "Error: cannot find address "} << address << endl;\par
00094         \}\par
00095         {\cf17 struct }in_addr server_host           = *(in_addr *)server_addr->h_addr;\par
00096         this->server_address.sin_addr.s_addr = inet_addr(inet_ntoa(server_host));\par
00097         this->connect(address, port);\par
00098     \}\par
00099 \};\par
00100 \par
00101 {\cf18 void} Socket::connect({\cf18 string} address, {\cf18 int} port) \{\par
00102     {\cf19 if} (::connect(this->socket_fd, (sockaddr *)&server_address, {\cf17 sizeof}(server_address)) < 0 && errno != EINPROGRESS) \{\par
00103         PLOGE << {\cf22 "Error: cannot connect to socket on "} << address.c_str() << {\cf22 ":"} << port << {\cf22 " detail: "} << strerror(errno) << endl;\par
00104     \}\par
00105 \};\par
00106 \par
00107 {\cf18 void} Socket::bind() \{\par
00108     {\cf17 struct }sockaddr *server_address = ({\cf17 struct }sockaddr *)&this->server_address;\par
00109     {\cf18 int}              bind_result    = ::bind(this->socket_fd, server_address, {\cf17 sizeof} this->server_address);\par
00110     {\cf19 if} (bind_result != 0) \{\par
00111         PLOGE << {\cf22 "Error binding socket: "} << errno << std::endl;\par
00112         {\cf19 throw};\par
00113     \}\par
00114 \}\par
00115 \par
00116 {\cf18 int} Socket::listen({\cf18 int} max_requests) \{\par
00117     return ::listen(this->socket_fd, max_requests);\par
00118 \};\par
00119 \par
00120 {\cf18 int} Socket::accept({\cf18 char} *client_addr, {\cf18 int} *client_port) \{\par
00121     socklen_t           client_addr_len = {\cf17 sizeof}({\cf17 struct }sockaddr_in);\par
00122     {\cf17 struct }sockaddr_in *client          = ({\cf17 struct }sockaddr_in *)calloc(1, client_addr_len);\par
00123     {\cf18 int}                 accepted_fd     = ::accept(this->socket_fd, (sockaddr *)client, &client_addr_len);\par
00124     {\cf19 if} (accepted_fd != -1) \{\par
00125         inet_ntop(AF_INET, &client->sin_addr.s_addr, client_addr, INET_ADDRSTRLEN);\par
00126         *client_port = htons(client->sin_port);\par
00127         {\cf20 // fcntl(accepted_fd, F_SETFL, this->socket_flags);}\par
00128     \}\par
00129     free(client);\par
00130     {\cf19 return} accepted_fd;\par
00131 \};\par
00132 \par
00133 {\cf18 bool} Socket::has_event({\cf18 int} channel) \{\par
00134     fd_set         channel_list;\par
00135     {\cf17 struct }timeval timeout;\par
00136     timeout.tv_sec  = 0;\par
00137     timeout.tv_usec = 1000;\par
00138     FD_ZERO(&channel_list);\par
00139     FD_SET(channel, &channel_list);\par
00140     {\cf18 int} {\cf17 event} = select(channel + 1, &channel_list, NULL, NULL, &timeout);\par
00141     {\cf19 if} (event < 0) \{\par
00142         PLOGE << {\cf22 "Error getting event from channel "} << channel << {\cf22 ": "} << {\cf17 event} << std::endl;\par
00143         {\cf19 return} {\cf17 false};\par
00144     \} {\cf19 else} {\cf19 if} (event == 0) \{\par
00145         {\cf20 // std::cout << "Timeout occurred! No data after 100 miliseconds.\\n";}\par
00146         {\cf19 return} {\cf17 false};\par
00147     \}\par
00148     {\cf19 return} FD_ISSET(channel, &channel_list);\par
00149 \}\par
00150 \par
00151 {\cf18 int} Socket::receive(uint8_t *buffer, {\cf18 int} channel) \{\par
00152     {\cf20 // if (!this->has_event(channel)) return -1;}\par
00153     PLOGI << {\cf22 "Receiving data on channel "} << channel << {\cf22 "..."} << endl;\par
00154     {\cf18 int} bytes_received = 0;\par
00155     {\cf18 int} total_bytes    = 0;\par
00156     {\cf19 while} (total_bytes < BUFFER_SIZE) \{\par
00157         {\cf20 // PLOGI << "total_bytes: " << total_bytes << endl;}\par
00158         bytes_received = ::read(channel, buffer + total_bytes, BUFFER_SIZE - total_bytes);\par
00159         {\cf20 // PLOGE << "bytes_received: " << bytes_received << endl;}\par
00160         {\cf19 if} (bytes_received > 0) \{\par
00161             PLOGD << {\cf22 "Received data on channel "} << channel << {\cf22 ": "} << bytes_received << {\cf22 " bytes"}\par
00162                 << {\cf22 "\\n\\n"};\par
00163         \} {\cf19 else} {\cf19 if} (errno == EAGAIN || errno == EWOULDBLOCK) \{\par
00164             PLOGE << {\cf22 "Socket error on channel "} << channel << {\cf22 ": "} << ::strerror(errno) << std::endl;\par
00165         \} {\cf19 else} {\cf19 if} (errno) \{\par
00166             PLOGE << {\cf22 "Unrecoverable socket error on channel "} << channel << {\cf22 ": "} << ::strerror(errno) << std::endl;\par
00167             {\cf19 return} -1;\par
00168         \}\par
00169         {\cf19 if} (bytes_received == 0) \{\par
00170             PLOGW << {\cf22 "Bytes received is 0."} << endl;\par
00171             {\cf19 return} bytes_received;\par
00172         \}\par
00173         total_bytes += bytes_received;\par
00174     \}\par
00175     PLOGI << {\cf22 "Received "} << total_bytes << {\cf22 " bytes on channel "} << channel << std::endl;\par
00176     {\cf19 return} total_bytes;\par
00177 \}\par
00178 \par
00179 {\cf18 bool} Socket::has_error({\cf18 int} channel) \{\par
00180     {\cf20 // return false;  // to be debugged}\par
00181     {\cf19 if} (*this->interrupt) \{\par
00182         PLOGW << {\cf22 "Service interrupted by command line!"} << endl;\par
00183         {\cf19 return} {\cf17 true};\par
00184     \}\par
00185     {\cf18 int}       error;\par
00186     socklen_t err_len = {\cf17 sizeof}(error);\par
00187     {\cf18 int}       status  = ::getsockopt(channel, SOL_SOCKET, SO_ERROR, &error, &err_len);\par
00188     {\cf19 if} (status != 0) \{\par
00189         PLOGE << {\cf22 "Error getting socket status: "} << strerror(error) << {\cf22 "\\n\\n"};\par
00190     \}\par
00191     {\cf19 return} status != 0;\par
00192 \}\par
00193 \par
00194 {\cf18 bool} Socket::is_connected({\cf18 int} channel) \{\par
00195     {\cf19 return} {\cf17 true};\par
00196 \}\par
00197 \par
00198 {\cf20 // bool Socket::get_client_info(int channel, char **client_addr, int *client_port) \{}\par
00199 {\cf20 //     unique_ptr<struct sockaddr_in> client((struct sockaddr_in *)calloc(1, sizeof(struct sockaddr_in)));}\par
00200 {\cf20 //     socklen_t client_len;}\par
00201 {\cf20 //     int is_connected = getpeername(channel, (struct sockaddr *)client.get(), &client_len);}\par
00202 {\cf20 //     char* addr = inet_ntoa(client->sin_addr);}\par
00203 {\cf20 //     int port = ntohs(client->sin_port);}\par
00204 {\cf20 //     if (client_addr != NULL) \{}\par
00205 {\cf20 //         *client_port = port;}\par
00206 {\cf20 //         memmove(*client_addr, addr, client_len);}\par
00207 {\cf20 //     \}}\par
00208 {\cf20 //     return is_connected == 0;}\par
00209 {\cf20 // \}}\par
00210 \par
00211 {\cf18 int} Socket::send(uint8_t *bytes, {\cf18 size_t} size, {\cf18 int} channel) \{\par
00212     PLOGI << {\cf22 "Sending data on channel "} << channel << {\cf22 "..."} << std::endl;\par
00213     {\cf19 if} (this->has_error(channel)) \{\par
00214         PLOGI << {\cf22 "Channel "} << channel << {\cf22 " has error."} << std::endl;\par
00215         {\cf19 return} 0;\par
00216     \}\par
00217 \par
00218     {\cf18 int} result = -1;\par
00219     {\cf19 if} (this->is_connected(channel)) \{\par
00220         PLOGI << {\cf22 "Channel "} << channel << {\cf22 " is connected."} << std::endl;\par
00221         result = ::write(channel, bytes, BUFFER_SIZE);\par
00222         {\cf19 if} (result != -1) \{\par
00223             PLOGI << {\cf22 "Channel "} << channel << {\cf22 " sent "} << result << {\cf22 " bytes."} << std::endl;\par
00224         \} {\cf19 else} {\cf19 if} (errno == EAGAIN || errno == EWOULDBLOCK) \{\par
00225             PLOGE << {\cf22 "Socket error on channel "} << channel << {\cf22 ": "} << ::strerror(errno) << std::endl;\par
00226         \} {\cf19 else} {\cf19 if} (errno) \{\par
00227             PLOGE << {\cf22 "Unrecoverable socket error on channel "} << channel << {\cf22 ": "} << ::strerror(errno) << std::endl;\par
00228             {\cf19 throw};\par
00229         \}\par
00230     \}\par
00231     {\cf19 return} result;\par
00232 \};\par
00233 \par
00234 {\cf18 int} Socket::close({\cf18 int} channel) \{\par
00235     {\cf19 if} (!this->is_connected(channel)) \{\par
00236         PLOGW << {\cf22 "Channel "} << channel << {\cf22 " already disconnected."} << std::endl;\par
00237         {\cf19 return} 0;\par
00238     \}\par
00239     PLOGI << {\cf22 "Closing connection on channel "} << channel << std::endl;\par
00240     {\cf18 int} result = ::close(channel);\par
00241     {\cf19 if} (result == -1) \{\par
00242         PLOGE << {\cf22 "Error closing channel "} << channel << {\cf22 ": "} << strerror(errno) << std::endl;\par
00243     \}\par
00244     {\cf19 return} result;\par
00245 \}\par
00246 \par
00247 {\cf18 int} Socket::get_message_sync(uint8_t *buffer, {\cf18 int} channel) \{\par
00248     {\cf19 if} (this->has_error(channel))\par
00249         {\cf19 return} 0;\par
00250     ::memset(buffer, 0, BUFFER_SIZE);\par
00251     {\cf18 int} payload_size = 0;\par
00252     {\cf19 while} (!payload_size && ioctl(channel, FIONREAD, &payload_size) >= 0) \{\par
00253         {\cf20 // PLOGI << "Waiting for data to arrive..." << endl;}\par
00254         {\cf19 if} (*this->interrupt)\par
00255             {\cf19 return} 0;\par
00256         usleep(1000);\par
00257     \}\par
00258     payload_size = this->receive(buffer, channel);\par
00259     {\cf19 if} (payload_size == -1) \{\par
00260 \par
00261         {\cf19 throw};\par
00262     \}\par
00263 \par
00264     {\cf19 return} payload_size;\par
00265 \}\par
00266 \par
00267 {\cf18 int} Packet::get_max_payload_size() \{\par
00268     {\cf19 return} BUFFER_SIZE - 3 * {\cf17 sizeof}(uint16_t) - {\cf17 sizeof}(uint32_t);\par
00269 \}\par
00270 \par
00271 Packet::Packet(uint8_t *bytes) \{\par
00272     uint8_t *cursor   = bytes;\par
00273     {\cf18 size_t}   uint16_s = {\cf17 sizeof}(uint16_t);\par
00274     uint16_t prop;\par
00275 \par
00276     memmove(&prop, cursor, uint16_s);\par
00277     this->type = (PacketType)ntohs(prop);\par
00278     cursor += uint16_s;\par
00279 \par
00280     memmove(&prop, cursor, uint16_s);\par
00281     this->seq_index = ntohs(prop);\par
00282     cursor += uint16_s;\par
00283 \par
00284     uint32_t total_size;\par
00285     memmove(&total_size, cursor, {\cf17 sizeof}(uint32_t));\par
00286     this->total_size = ntohl(total_size);\par
00287     cursor += {\cf17 sizeof}(uint32_t);\par
00288 \par
00289     memmove(&prop, cursor, uint16_s);\par
00290     this->payload_size = ntohs(prop);\par
00291     cursor += uint16_s;\par
00292 \par
00293     {\cf19 if} (this->payload_size > this->get_max_payload_size()) \{\par
00294         PLOGE << {\cf22 "Buffer overflow: "} << this->payload_size - BUFFER_SIZE << {\cf22 " bigger than the buffer"} << endl;\par
00295         this->payload_size = this->get_max_payload_size();\par
00296     \}\par
00297     this->payload = (uint8_t *)calloc(this->payload_size, {\cf17 sizeof}(uint8_t));\par
00298     memmove(this->payload, cursor, this->payload_size);\par
00299 \};\par
00300 \par
00301 Packet::Packet(\par
00302     PacketType type, uint16_t seq_index, uint32_t total_size,\par
00303     uint16_t payload_size, uint8_t *payload) \{\par
00304     this->type         = type;\par
00305     this->seq_index    = seq_index;\par
00306     this->total_size   = total_size;\par
00307     this->payload_size = payload_size;\par
00308     this->payload      = (uint8_t *)calloc(payload_size, {\cf17 sizeof}(uint8_t));\par
00309     memmove(this->payload, payload, payload_size);\par
00310 \};\par
00311 \par
00312 Packet::~Packet() \{\par
00313     free(this->payload);\par
00314 \}\par
00315 \par
00316 {\cf18 size_t} Packet::to_bytes(uint8_t **bytes_ptr) \{\par
00317     {\cf18 size_t} uint16_s = {\cf17 sizeof}(uint16_t);\par
00318 \par
00319     {\cf18 size_t} packet_size = uint16_s;\par
00320     packet_size += uint16_s;\par
00321     packet_size += {\cf17 sizeof}(uint32_t);\par
00322     packet_size += uint16_s;\par
00323     packet_size += this->payload_size;\par
00324 \par
00325     *bytes_ptr      = (uint8_t *)calloc(BUFFER_SIZE, {\cf17 sizeof}(uint8_t));\par
00326     uint8_t *cursor = *bytes_ptr;\par
00327 \par
00328     uint16_t prop = htons(this->type);\par
00329     memmove(cursor, &prop, uint16_s);\par
00330     cursor += uint16_s;\par
00331 \par
00332     prop = htons(this->seq_index);\par
00333     memmove(cursor, &prop, uint16_s);\par
00334     cursor += uint16_s;\par
00335 \par
00336     uint32_t total_size = htonl(this->total_size);\par
00337     memmove(cursor, &total_size, {\cf17 sizeof}(uint32_t));\par
00338     cursor += {\cf17 sizeof}(uint32_t);\par
00339 \par
00340     prop = htons(this->payload_size);\par
00341     memmove(cursor, &prop, uint16_s);\par
00342     cursor += uint16_s;\par
00343 \par
00344     memmove(cursor, this->payload, this->payload_size);\par
00345     {\cf19 return} packet_size;\par
00346 \}\par
00347 \par
00348 {\cf18 int} Packet::send(shared_ptr<Socket> socket, {\cf18 int} channel) \{\par
00349     uint8_t *bytes;\par
00350     {\cf18 size_t}   packet_size = this->to_bytes(&bytes);\par
00351     {\cf18 int}      bytes_sent  = socket->send(bytes, packet_size, channel);\par
00352     free(bytes);\par
00353     {\cf19 if} (bytes_sent < 0) \{\par
00354         PLOGE << {\cf22 "Cannot write to socket. Reason: "} << strerror(errno) << endl;\par
00355         {\cf19 throw};\par
00356     \}\par
00357     PLOGD << {\cf22 "Sent packet with "} << packet_size << {\cf22 " bytes"} << endl;\par
00358     {\cf19 return} bytes_sent;\par
00359 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/socket_io/socket.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/socket_io/socket.hpp}
{\xe \v src/common/socket_io/socket.hpp}
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <sys/socket.h>}\par
{\f2 #include <netinet/in.h>}\par
{\f2 #include <iostream>}\par
{\f2 #include <memory>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Socket}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Packet}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b SocketMode} \{ {\b Server}
, {\b Client}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b PacketType} \{ {\b SessionInit}
, {\b FileChunk}
, {\b FileMetadataMsg}
, {\b ErrorMsg}
, {\b EventMsg}
, {\b CommandMsg}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v PacketType\:socket.hpp}
{\xe \v socket.hpp\:PacketType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b PacketType}}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v SessionInit\:socket.hpp}
{\xe \v socket.hpp\:SessionInit}
{\qr SessionInit{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
\cell }{\cell }{\row }
{\xe \v FileChunk\:socket.hpp}
{\xe \v socket.hpp\:FileChunk}
{\qr FileChunk{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
\cell }{\cell }{\row }
{\xe \v FileMetadataMsg\:socket.hpp}
{\xe \v socket.hpp\:FileMetadataMsg}
{\qr FileMetadataMsg{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\cell }{\cell }{\row }
{\xe \v ErrorMsg\:socket.hpp}
{\xe \v socket.hpp\:ErrorMsg}
{\qr ErrorMsg{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\cell }{\cell }{\row }
{\xe \v EventMsg\:socket.hpp}
{\xe \v socket.hpp\:EventMsg}
{\qr EventMsg{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\cell }{\cell }{\row }
{\xe \v CommandMsg\:socket.hpp}
{\xe \v socket.hpp\:CommandMsg}
{\qr CommandMsg{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 43} of file {\b socket.hpp}.}\par
}
{\xe \v SocketMode\:socket.hpp}
{\xe \v socket.hpp\:SocketMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b SocketMode}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Server\:socket.hpp}
{\xe \v socket.hpp\:Server}
{\qr Server{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
\cell }{\cell }{\row }
{\xe \v Client\:socket.hpp}
{\xe \v socket.hpp\:Client}
{\qr Client{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 11} of file {\b socket.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
socket.hpp\par \pard\plain 
{\tc\tcl2 \v src/common/socket_io/socket.hpp}
{\xe \v src/common/socket_io/socket.hpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SOCKET_H}\par
00002 {\cf21 #define SOCKET_H}\par
00003 \par
00004 {\cf21 #include<sys/socket.h>}\par
00005 {\cf21 #include<netinet/in.h>}\par
00006 {\cf21 #include <iostream>}\par
00007 {\cf21 #include <memory>}\par
00008 \par
00009 {\cf17 using namespace }std;\par
00010 \par
00011 {\cf17 enum} SocketMode \{\par
00012     Server, Client\par
00013 \};\par
00014 \par
00015 {\cf17 class }Socket \{\par
00016     {\cf17 struct }sockaddr_in server_address;\par
00017     SocketMode mode;\par
00018     {\cf20 // socklen_t addr_size;}\par
00019     {\cf18 void} init({\cf18 string} address, {\cf18 int} port, {\cf18 bool} *interrupt, SocketMode mode, {\cf18 int} buffer_size, {\cf18 int} max_requests);\par
00020 \par
00021     {\cf17 public}:\par
00022         {\cf18 int} buffer_size;\par
00023         {\cf18 int} socket_flags;\par
00024         {\cf18 int} socket_fd;\par
00025         {\cf18 bool} *interrupt;\par
00026 \par
00027         Socket({\cf18 string} address, {\cf18 int} port, {\cf18 bool} *interrupt, SocketMode mode, {\cf18 int} buffer_size);\par
00028         Socket({\cf18 string} address, {\cf18 int} port, {\cf18 bool} *interrupt, SocketMode mode, {\cf18 int} buffer_size, {\cf18 int} max_requests);\par
00029         {\cf18 int} listen({\cf18 int} max_requests);\par
00030         {\cf18 void} connect({\cf18 string} address, {\cf18 int} port);\par
00031         {\cf18 void} bind();\par
00032         {\cf18 int} accept({\cf18 char} *client_addr, {\cf18 int} *client_port);\par
00033         {\cf18 int} send(uint8_t* bytes, {\cf18 size_t} size, {\cf18 int} channel);\par
00034         {\cf18 int} receive(uint8_t *buffer, {\cf18 int} channel);\par
00035         {\cf18 int} close({\cf18 int} channel);\par
00036         {\cf18 bool} has_error({\cf18 int} channel);\par
00037         {\cf18 bool} is_connected({\cf18 int} channel);\par
00038         {\cf20 // bool get_client_info(int channel, char **client_addr, int *client_port);}\par
00039         {\cf18 bool} has_event({\cf18 int} channel);\par
00040         {\cf18 int} get_message_sync(uint8_t *buffer, {\cf18 int} channel);\par
00041 \};\par
00042 \par
00043 {\cf17 enum} PacketType \{\par
00044     SessionInit, FileChunk, FileMetadataMsg, ErrorMsg, EventMsg, CommandMsg, \par
00045 \};\par
00046 \par
00047 {\cf17 class }Packet \{\par
00048 \par
00049     {\cf17 public}:\par
00050         PacketType type;\par
00051         uint16_t seq_index;\par
00052         uint32_t total_size;\par
00053         uint16_t payload_size;\par
00054         uint8_t *payload;\par
00055 \par
00056         Packet(uint8_t *bytes);\par
00057         Packet(PacketType type, uint16_t seq_index, uint32_t total_size, uint16_t payload_size, uint8_t *payload);\par
00058         ~Packet();\par
00059         {\cf17 static} {\cf18 int} get_max_payload_size();\par
00060         {\cf18 size_t} to_bytes(uint8_t** bytes_ptr);\par
00061         {\cf18 int} send(shared_ptr<Socket> socket, {\cf18 int} channel);\par
00062 \};\par
00063 \par
00064 \par
00065 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common/vars.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/common/vars.hpp}
{\xe \v src/common/vars.hpp}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_REQUESTS}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_DEVICES_PER_USER}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BUFFER_SIZE}\~ 1024\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERVER_PORT}\~ 6999\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v BUFFER_SIZE\:vars.hpp}
{\xe \v vars.hpp\:BUFFER_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BUFFER_SIZE\~ 1024}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b vars.hpp}.}\par
}
{\xe \v MAX_DEVICES_PER_USER\:vars.hpp}
{\xe \v vars.hpp\:MAX_DEVICES_PER_USER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_DEVICES_PER_USER\~ 2}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b vars.hpp}.}\par
}
{\xe \v MAX_REQUESTS\:vars.hpp}
{\xe \v vars.hpp\:MAX_REQUESTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_REQUESTS\~ 10}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b vars.hpp}.}\par
}
{\xe \v SERVER_PORT\:vars.hpp}
{\xe \v vars.hpp\:SERVER_PORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERVER_PORT\~ 6999}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b vars.hpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
vars.hpp\par \pard\plain 
{\tc\tcl2 \v src/common/vars.hpp}
{\xe \v src/common/vars.hpp}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef VARS_H}\par
00002 {\cf21 #define VARS_H}\par
00003 \par
00004 {\cf21 #define MAX_REQUESTS 10}\par
00005 {\cf21 #define MAX_DEVICES_PER_USER 2}\par
00006 {\cf21 #define BUFFER_SIZE 1024}\par
00007 {\cf21 #define SERVER_PORT 6999}\par
00008 \par
00009 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/cpp-inquirer/inquirer.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/cpp-inquirer/inquirer.h}
{\xe \v src/include/cpp-inquirer/inquirer.h}
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <utility>}\par
{\f2 #include <vector>}\par
{\f2 #include <regex>}\par
{\f2 #include <cassert>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b alx::Question}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b alx::Inquirer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b alx}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum class {\b alx::Type} \{ {\b alx::text} = 0
, {\b alx::integer} = 1
, {\b alx::decimal} = 2
, {\b alx::yesNo} = 3
, {\b alx::confirm} = 4
, {\b alx::options} = 5
, {\b alx::regex} = 6
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
inquirer.h\par \pard\plain 
{\tc\tcl2 \v src/include/cpp-inquirer/inquirer.h}
{\xe \v src/include/cpp-inquirer/inquirer.h}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright \'A9 2023 Donatas Mockus}\par
00002 {\cf20 //}\par
00003 {\cf20 // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated}\par
00004 {\cf20 // documentation files (the \'93Software\'94), to deal in the Software without restriction, including without limitation }\par
00005 {\cf20 // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and}\par
00006 {\cf20 // to permit persons to whom the Software is furnished to do so, subject to the following conditions:}\par
00007 {\cf20 //}\par
00008 {\cf20 // The above copyright notice and this permission notice shall be included in all copies or substantial portions of}\par
00009 {\cf20 // the Software.}\par
00010 {\cf20 //}\par
00011 {\cf20 // THE SOFTWARE IS PROVIDED \'93AS IS\'94, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO}\par
00012 {\cf20 // THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE}\par
00013 {\cf20 // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,}\par
00014 {\cf20 // TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.}\par
00015 \par
00016 \par
00017 {\cf21 #ifndef CPP_INQUIRER_SRC_INQUIRER_H}\par
00018 {\cf21 #define CPP_INQUIRER_SRC_INQUIRER_H}\par
00019 \par
00020 {\cf21 #include <iostream>}\par
00021 {\cf21 #include <string>}\par
00022 {\cf21 #include <utility>}\par
00023 {\cf21 #include <vector>}\par
00024 {\cf21 #include <regex>}\par
00025 {\cf21 #include <cassert>}\par
00026 \par
00027 {\cf21 #ifdef _WIN32}\par
00028 {\cf21     #include <conio.h>}\par
00029 {\cf21 #endif}\par
00030 \par
00031 \par
00032 {\cf17 namespace }alx \{\par
00033 {\cf17 class }Inquirer;\par
00034 \par
00035 {\cf17 enum class} Type\par
00036 \{\par
00037     text = 0,\par
00038     integer = 1,\par
00039     decimal = 2,\par
00040     yesNo = 3,\par
00041     confirm = 4,\par
00042     options = 5,\par
00043     regex = 6\par
00044 \};\par
00045 \par
00046 {\cf17 class }Question\par
00047 \{\par
00048 {\cf17 public}:\par
00049     Question({\cf17 const} Question& q)\par
00050     \{\par
00051         m_key = q.m_key;\par
00052         m_question = q.m_question;\par
00053         m_answer = q.m_answer;\par
00054         m_type = q.m_type;\par
00055         {\cf19 if} (m_type == Type::options)\par
00056             m_options = q.m_options;\par
00057         {\cf19 else} {\cf19 if} (m_type == Type::regex)\par
00058             m_regex = q.m_regex;\par
00059     \}\par
00060 \par
00061     Question(std::string key, std::string question, {\cf17 const} Type type = Type::text)\par
00062         : m_key(std::move(key)),\par
00063           m_question(std::move(question)),\par
00064           m_type(type) \{\}\par
00065 \par
00066     Question(std::string key, std::string question, std::vector<std::string> options)\par
00067         : m_key(std::move(key)),\par
00068           m_question(std::move(question)),\par
00069           m_type(Type::options),\par
00070           m_options(std::move(options))\par
00071     \{\par
00072         {\cf19 if} (m_options.empty())\par
00073             {\cf19 throw} std::runtime_error({\cf22 "Must have one or more options"});\par
00074     \}\par
00075 \par
00076     Question(std::string key, std::string question, std::string regex)\par
00077         : m_key(std::move(key)),\par
00078           m_question(std::move(question)),\par
00079           m_type(Type::regex),\par
00080           m_regex(std::move(regex)) \{\}\par
00081 \par
00082     ~Question() \{\}\par
00083 \par
00084 {\cf17 private}:\par
00085     {\cf17 friend} Inquirer;\par
00086     std::string m_key;\par
00087     std::string m_question;\par
00088     std::string m_answer;\par
00089     Type m_type;\par
00090     std::vector<std::string> m_options;\par
00091     std::string m_regex;\par
00092 \};\par
00093 \par
00094 {\cf17 class }Inquirer\par
00095 \{\par
00096     std::vector<std::pair<std::string, Question>> m_questions;\par
00097     std::string m_title;\par
00098 \par
00099 {\cf17 public}:\par
00100     {\cf17 explicit} Inquirer(std::string title)\par
00101         : m_title(std::move(title)) \{\}\par
00102 \par
00103     {\cf18 void} add_question({\cf17 const} Question& question) \{ m_questions.emplace_back(question.m_key, question); \}\par
00104 \par
00105     {\cf18 void} ask()\par
00106     \{\par
00107         {\cf19 if} (!m_title.empty())\par
00108             std::cout << {\cf22 "\\033[34m>\\033[0m "} << m_title << {\cf23 '\\n'};\par
00109         {\cf19 for} ({\cf17 auto}& question : m_questions) \{\par
00110             {\cf17 auto}& q = question.second;\par
00111 \par
00112             {\cf17 auto} printQuestion = [&]({\cf17 const} std::string& append = {\cf22 ""}) \{\par
00113                 std::cout << {\cf22 "\\033[1m\\033[34m?\\033[0m \\033[1m"} << q.m_question << {\cf22 "\\033[0m "} << append;\par
00114             \};\par
00115 \par
00116             {\cf17 auto} takeInput = [](std::string& destination) \{\par
00117                 std::cout << {\cf22 "\\033[34m"};\par
00118                 std::getline(std::cin, destination);\par
00119                 std::cout << {\cf22 "\\033[0m"};\par
00120             \};\par
00121 \par
00122             {\cf19 switch} (q.m_type) \{\par
00123             {\cf19 case} Type::confirm: \{\par
00124                 printQuestion({\cf22 "(y/N) "});\par
00125                 std::string answer;\par
00126                 takeInput(answer);\par
00127                 {\cf19 while} (!(answer == {\cf22 "y"} || answer == {\cf22 "Y"} || answer == {\cf22 "n"} || answer == {\cf22 "N"})) \{\par
00128                     erase_lines(2);\par
00129                     printQuestion({\cf22 "(y/N) "});\par
00130                     takeInput(answer);\par
00131                 \}\par
00132                 q.m_answer = answer;\par
00133                 {\cf19 break};\par
00134             \}\par
00135             {\cf19 case} Type::text:\par
00136                 printQuestion();\par
00137                 takeInput(q.m_answer);\par
00138                 {\cf19 break};\par
00139             {\cf19 case} Type::integer: \{\par
00140                 printQuestion();\par
00141                 std::string answer;\par
00142                 takeInput(answer);\par
00143                 {\cf19 while} (!is_integer(answer)) \{\par
00144                     erase_lines(2);\par
00145                     printQuestion();\par
00146                     takeInput(answer);\par
00147                 \}\par
00148                 q.m_answer = answer;\par
00149                 {\cf19 break};\par
00150             \}\par
00151             {\cf19 case} Type::decimal: \{\par
00152                 printQuestion();\par
00153                 std::string answer;\par
00154                 takeInput(answer);\par
00155                 {\cf19 while} (!is_decimal(answer)) \{\par
00156                     erase_lines(2);\par
00157                     printQuestion();\par
00158                     takeInput(answer);\par
00159                 \}\par
00160                 q.m_answer = answer;\par
00161                 {\cf19 break};\par
00162             \}\par
00163             {\cf19 case} Type::yesNo: \{\par
00164                 {\cf17 const} std::string yes = {\cf22 "\\033[34myes\\033[0m no\\n"};\par
00165                 {\cf17 const} std::string no = {\cf22 "yes \\033[34mno\\033[0m\\n"};\par
00166                 std::cout << std::flush;\par
00167                 printQuestion(yes);\par
00168                 {\cf18 bool} position = {\cf17 true};\par
00169                 {\cf19 while} ({\cf17 true}) \{\par
00170                     {\cf17 const} {\cf18 int} key = getch();\par
00171                     {\cf19 if} (key == Inquirer::keySx) \{\par
00172                         position = {\cf17 true};\par
00173                         erase_lines(2);\par
00174                         printQuestion(yes);\par
00175                     \}\par
00176                     {\cf19 else} {\cf19 if} (key == Inquirer::keyDx) \{\par
00177                         position = {\cf17 false};\par
00178                         erase_lines(2);\par
00179                         printQuestion(no);\par
00180                     \}\par
00181                     {\cf19 if} (key == Inquirer::keyEnter) \{\par
00182                         q.m_answer = position ? {\cf22 "yes"} : {\cf22 "no"};\par
00183                         {\cf19 break};\par
00184                     \}\par
00185                 \}\par
00186                 {\cf19 break};\par
00187             \}\par
00188             {\cf19 case} Type::options: \{\par
00189                 {\cf18 unsigned} {\cf18 int} selectedIndex = 0;\par
00190                 {\cf17 auto} printOptions = [&]() \{\par
00191                     std::cout << {\cf23 '\\n'};\par
00192                     {\cf19 for} ({\cf18 int} i = 0; i < q.m_options.size(); ++i) \{\par
00193                         {\cf19 if} (i == selectedIndex)\par
00194                             std::cout << {\cf22 "\\033[34m> "} << q.m_options.at(i) << {\cf22 "\\033[0m\\n"};\par
00195                         {\cf19 else}\par
00196                             std::cout << {\cf22 "  "} << q.m_options.at(i) << {\cf22 "\\n"};\par
00197                     \}\par
00198                 \};\par
00199                 printQuestion();\par
00200                 printOptions();\par
00201 \par
00202                 {\cf19 while} ({\cf17 true}) \{\par
00203                     {\cf17 const} {\cf18 int} key = getch();\par
00204                     {\cf19 if} (key == Inquirer::keyDw) \{\par
00205                         selectedIndex = wrap_int(selectedIndex + 1, 0, q.m_options.size() - 1);\par
00206                         erase_lines(q.m_options.size() + 2);\par
00207                         printQuestion();\par
00208                         printOptions();\par
00209                     \}\par
00210                     {\cf19 else} {\cf19 if} (key == Inquirer::keyUp) \{\par
00211                         selectedIndex = wrap_int(selectedIndex - 1, 0, q.m_options.size() - 1);\par
00212                         erase_lines(q.m_options.size() + 2);\par
00213                         printQuestion();\par
00214                         printOptions();\par
00215                     \}\par
00216                     {\cf19 if} (key == Inquirer::keyEnter) \{\par
00217                         q.m_answer = q.m_options.at(selectedIndex);\par
00218                         erase_lines(q.m_options.size() + 2);\par
00219                         printQuestion({\cf22 "\\033[34m"} + q.m_options.at(selectedIndex) + {\cf22 "\\033[0m\\n"});\par
00220                         {\cf19 break};\par
00221                     \}\par
00222                 \}\par
00223                 {\cf19 break};\par
00224             \}\par
00225             {\cf19 case} Type::regex: \{\par
00226                 printQuestion();\par
00227                 std::string answer;\par
00228                 takeInput(answer);\par
00229                 {\cf19 while} (!std::regex_match(answer, std::regex(q.m_regex))) \{\par
00230                     erase_lines(2);\par
00231                     printQuestion();\par
00232                     takeInput(answer);\par
00233                 \}\par
00234                 q.m_answer = answer;\par
00235                 {\cf19 break};\par
00236             \}\par
00237             \}\par
00238         \}\par
00239     \}\par
00240 \par
00241     {\cf18 void} print_questions(){\cf17  const}\par
00242 {\cf17     }\{\par
00243         {\cf19 for} ({\cf17 const} {\cf17 auto}& q : m_questions) \{\par
00244             std::cout << q.second.m_question << {\cf22 " "} << {\cf17 static_cast<}{\cf18 int}{\cf17 >}(q.second.m_type) << {\cf23 '\\n'};\par
00245         \}\par
00246     \}\par
00247 \par
00248     {\cf18 void} print_answers(){\cf17  const}\par
00249 {\cf17     }\{\par
00250         {\cf19 for} ({\cf17 const} {\cf17 auto}& q : m_questions)\par
00251             std::cout << q.second.m_question << {\cf22 ": "} << q.second.m_answer << {\cf23 '\\n'};\par
00252     \}\par
00253 \par
00254     std::string answer({\cf17 const} std::string& key){\cf17  const}\par
00255 {\cf17     }\{\par
00256         {\cf19 for} ({\cf17 const} {\cf17 auto}& question : m_questions)\par
00257             {\cf19 if} (question.first == key)\par
00258                 {\cf19 return} question.second.m_answer;\par
00259         {\cf19 return} {\cf22 ""};\par
00260     \}\par
00261 \par
00262 {\cf17 private}:\par
00263 {\cf21     #ifdef _WIN32}\par
00264         {\cf17 static} {\cf18 int} {\cf17 const} keyDw = 80;\par
00265         {\cf17 static} {\cf18 int} {\cf17 const} keyUp = 72;\par
00266         {\cf17 static} {\cf18 int} {\cf17 const} keySx = 75;\par
00267         {\cf17 static} {\cf18 int} {\cf17 const} keyDx = 77;\par
00268         {\cf17 static} {\cf18 int} {\cf17 const} keyEnter = 13;\par
00269 {\cf21     #else}\par
00270         {\cf17 static} {\cf18 int} {\cf17 const} keyUp = 65;\par
00271         {\cf17 static} {\cf18 int} {\cf17 const} keyDw = 66;\par
00272         {\cf17 static} {\cf18 int} {\cf17 const} keySx = 68;\par
00273         {\cf17 static} {\cf18 int} {\cf17 const} keyDx = 67;\par
00274         {\cf17 static} {\cf18 int} {\cf17 const} keyEnter = 13;\par
00275 {\cf21     #endif}\par
00276 \par
00277     {\cf17 static} {\cf18 void} erase_lines({\cf17 const} {\cf18 unsigned} count = 1)\par
00278     \{\par
00279         {\cf19 if} (count == 0)\par
00280             {\cf19 return};\par
00281 \par
00282         std::cout << {\cf22 "\\x1b[2K"}; {\cf20 // Delete current line}\par
00283         {\cf19 for} ({\cf18 int} i = 1; i < count; ++i) \{\par
00284             std::cout << {\cf22 "\\x1b[1A"} {\cf20 // Move cursor one line up}\par
00285                 << {\cf22 "\\x1b[2K"}; {\cf20 // Delete current line}\par
00286         \}\par
00287         std::cout << {\cf23 '\\r'};\par
00288     \}\par
00289 \par
00290     {\cf17 static} {\cf18 bool} is_integer({\cf17 const} std::string& {\cf18 string})\par
00291     \{\par
00292         {\cf19 if} ({\cf18 string}.empty() || ((!isdigit({\cf18 string}[0])) && ({\cf18 string}[0] != {\cf23 '-'}) && ({\cf18 string}[0] != {\cf23 '+'}))) {\cf19 return} {\cf17 false};\par
00293         {\cf18 char}* p;\par
00294         strtol({\cf18 string}.c_str(), &p, 10);\par
00295         {\cf19 return} (*p == 0);\par
00296     \}\par
00297 \par
00298     {\cf17 static} {\cf18 bool} is_decimal({\cf17 const} std::string& {\cf18 string})\par
00299     \{\par
00300         {\cf19 if} ({\cf18 string}.empty() || ((!isdigit({\cf18 string}[0])) && ({\cf18 string}[0] != {\cf23 '-'}) && ({\cf18 string}[0] != {\cf23 '+'}))) {\cf19 return} {\cf17 false};\par
00301         {\cf18 char}* p;\par
00302         strtod({\cf18 string}.c_str(), &p);\par
00303         {\cf19 return} (*p == 0);\par
00304     \}\par
00305 \par
00306     {\cf17 static} {\cf18 unsigned} wrap_int({\cf18 unsigned} {\cf18 int} k, {\cf17 const} {\cf18 unsigned} lowerBound, {\cf17 const} {\cf18 unsigned} upperBound)\par
00307     \{\par
00308         {\cf17 const} {\cf18 unsigned} range_size = upperBound - lowerBound + 1;\par
00309 \par
00310         {\cf19 if} (k < lowerBound)\par
00311             k += range_size * ((lowerBound - k) / range_size + 1);\par
00312 \par
00313         {\cf19 return} lowerBound + (k - lowerBound) % range_size;\par
00314     \}\par
00315 \par
00316     {\cf17 static} {\cf18 int} getch()\par
00317     \{\par
00318         {\cf18 int} c; {\cf20 // This function should return the keystroke without allowing it to echo on screen}\par
00319 \par
00320 {\cf21         #ifdef _WIN32}\par
00321             c = _getch();\par
00322 {\cf21         #else}\par
00323             system({\cf22 "stty raw"});    {\cf20 // Raw input - wait for only a single keystroke}\par
00324             system({\cf22 "stty -echo"});  {\cf20 // Echo off}\par
00325             c = getchar();\par
00326             system({\cf22 "stty cooked"}); {\cf20 // Cooked input - reset}\par
00327             system({\cf22 "stty echo"});   {\cf20 // Echo on - Reset}\par
00328 {\cf21         #endif}\par
00329 \par
00330         {\cf19 return} c;\par
00331     \}\par
00332 \};\par
00333 \}\par
00334 {\cf21 #endif }{\cf20 //CPP_INQUIRER_SRC_INQUIRER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Appenders/AndroidAppender.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/AndroidAppender.h}
{\xe \v src/include/plog/Appenders/AndroidAppender.h}
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/IAppender.h>}\par
{\f2 #include <android/log.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::AndroidAppender< Formatter >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AndroidAppender.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/AndroidAppender.h}
{\xe \v src/include/plog/Appenders/AndroidAppender.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/IAppender.h>}\par
00003 {\cf21 #include <android/log.h>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 template}<{\cf17 class} Formatter>\par
00008     {\cf17 class }PLOG_LINKAGE_HIDDEN AndroidAppender : {\cf17 public} IAppender\par
00009     \{\par
00010     {\cf17 public}:\par
00011         AndroidAppender({\cf17 const} {\cf18 char}* tag) : m_tag(tag)\par
00012         \{\par
00013         \}\par
00014 \par
00015         {\cf17 virtual} {\cf18 void} write({\cf17 const} Record& record) PLOG_OVERRIDE\par
00016         \{\par
00017             std::string str = Formatter::format(record);\par
00018 \par
00019             __android_log_print(toPriority(record.getSeverity()), m_tag, {\cf22 "%s"}, str.c_str());\par
00020         \}\par
00021 \par
00022     {\cf17 private}:\par
00023         {\cf17 static} android_LogPriority toPriority(Severity severity)\par
00024         \{\par
00025             {\cf19 switch} (severity)\par
00026             \{\par
00027             {\cf19 case} fatal:\par
00028                 {\cf19 return} ANDROID_LOG_FATAL;\par
00029             {\cf19 case} error:\par
00030                 {\cf19 return} ANDROID_LOG_ERROR;\par
00031             {\cf19 case} warning:\par
00032                 {\cf19 return} ANDROID_LOG_WARN;\par
00033             {\cf19 case} info:\par
00034                 {\cf19 return} ANDROID_LOG_INFO;\par
00035             {\cf19 case} debug:\par
00036                 {\cf19 return} ANDROID_LOG_DEBUG;\par
00037             {\cf19 case} verbose:\par
00038                 {\cf19 return} ANDROID_LOG_VERBOSE;\par
00039             {\cf19 default}:\par
00040                 {\cf19 return} ANDROID_LOG_UNKNOWN;\par
00041             \}\par
00042         \}\par
00043 \par
00044     {\cf17 private}:\par
00045         {\cf17 const} {\cf18 char}* {\cf17 const} m_tag;\par
00046     \};\par
00047 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Appenders/ArduinoAppender.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/ArduinoAppender.h}
{\xe \v src/include/plog/Appenders/ArduinoAppender.h}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/IAppender.h>}\par
{\f2 #include <Arduino.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::ArduinoAppender< Formatter >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ArduinoAppender.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/ArduinoAppender.h}
{\xe \v src/include/plog/Appenders/ArduinoAppender.h}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/IAppender.h>}\par
00003 {\cf21 #include <Arduino.h>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 template}<{\cf17 class} Formatter>\par
00008     {\cf17 class }PLOG_LINKAGE_HIDDEN ArduinoAppender : {\cf17 public} IAppender\par
00009     \{\par
00010     {\cf17 public}:\par
00011         ArduinoAppender(Stream &stream) : m_stream(stream)\par
00012         \{\par
00013         \}\par
00014 \par
00015         {\cf17 virtual} {\cf18 void} write({\cf17 const} Record &record) PLOG_OVERRIDE\par
00016         \{\par
00017             m_stream.print(Formatter::format(record).c_str());\par
00018         \}\par
00019 \par
00020     {\cf17 private}:\par
00021         Stream &m_stream;\par
00022     \};\par
00023 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Appenders/ColorConsoleAppender.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/ColorConsoleAppender.h}
{\xe \v src/include/plog/Appenders/ColorConsoleAppender.h}
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/ConsoleAppender.h>}\par
{\f2 #include <plog/WinApi.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::ColorConsoleAppender< Formatter >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ColorConsoleAppender.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/ColorConsoleAppender.h}
{\xe \v src/include/plog/Appenders/ColorConsoleAppender.h}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/ConsoleAppender.h>}\par
00003 {\cf21 #include <plog/WinApi.h>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 template}<{\cf17 class} Formatter>\par
00008     {\cf17 class }PLOG_LINKAGE_HIDDEN ColorConsoleAppender : {\cf17 public} ConsoleAppender<Formatter>\par
00009     \{\par
00010     {\cf17 public}:\par
00011 {\cf21 #ifdef _WIN32}\par
00012 {\cf21 #   ifdef _MSC_VER}\par
00013 {\cf21 #       pragma warning(suppress: 26812) }{\cf20 //  Prefer 'enum class' over 'enum'}\par
00014 {\cf21 #   endif}\par
00015         ColorConsoleAppender(OutputStream outStream = streamStdOut)\par
00016             : ConsoleAppender<Formatter>(outStream)\par
00017             , m_originalAttr()\par
00018         \{\par
00019             {\cf19 if} (this->m_isatty)\par
00020             \{\par
00021                 CONSOLE_SCREEN_BUFFER_INFO csbiInfo;\par
00022                 GetConsoleScreenBufferInfo(this->m_outputHandle, &csbiInfo);\par
00023 \par
00024                 m_originalAttr = csbiInfo.wAttributes;\par
00025             \}\par
00026         \}\par
00027 {\cf21 #else}\par
00028         ColorConsoleAppender(OutputStream outStream = streamStdOut)\par
00029             : ConsoleAppender<Formatter>(outStream)\par
00030         \{\}\par
00031 {\cf21 #endif}\par
00032 \par
00033         {\cf17 virtual} {\cf18 void} write({\cf17 const} Record& record) PLOG_OVERRIDE\par
00034         \{\par
00035             util::nstring str = Formatter::format(record);\par
00036             util::MutexLock lock(this->m_mutex);\par
00037 \par
00038             setColor(record.getSeverity());\par
00039             this->writestr(str);\par
00040             resetColor();\par
00041         \}\par
00042 \par
00043     {\cf17 protected}:\par
00044         {\cf18 void} setColor(Severity severity)\par
00045         \{\par
00046             {\cf19 if} (this->m_isatty)\par
00047             \{\par
00048                 {\cf19 switch} (severity)\par
00049                 \{\par
00050 {\cf21 #ifdef _WIN32}\par
00051                 {\cf19 case} fatal:\par
00052                     SetConsoleTextAttribute(this->m_outputHandle, foreground::kRed | foreground::kGreen | foreground::kBlue | foreground::kIntensity | background::kRed); {\cf20 // white on red background}\par
00053                     {\cf19 break};\par
00054 \par
00055                 {\cf19 case} error:\par
00056                     SetConsoleTextAttribute(this->m_outputHandle, {\cf17 static_cast<}WORD{\cf17 >}(foreground::kRed | foreground::kIntensity | (m_originalAttr & 0xf0))); {\cf20 // red}\par
00057                     {\cf19 break};\par
00058 \par
00059                 {\cf19 case} warning:\par
00060                     SetConsoleTextAttribute(this->m_outputHandle, {\cf17 static_cast<}WORD{\cf17 >}(foreground::kRed | foreground::kGreen | foreground::kIntensity | (m_originalAttr & 0xf0))); {\cf20 // yellow}\par
00061                     {\cf19 break};\par
00062 \par
00063                 {\cf19 case} debug:\par
00064                 {\cf19 case} verbose:\par
00065                     SetConsoleTextAttribute(this->m_outputHandle, {\cf17 static_cast<}WORD{\cf17 >}(foreground::kGreen | foreground::kBlue | foreground::kIntensity | (m_originalAttr & 0xf0))); {\cf20 // cyan}\par
00066                     {\cf19 break};\par
00067 {\cf21 #else}\par
00068                 {\cf19 case} fatal:\par
00069                     this->m_outputStream << {\cf22 "\\x1B[97m\\x1B[41m"}; {\cf20 // white on red background}\par
00070                     {\cf19 break};\par
00071 \par
00072                 {\cf19 case} error:\par
00073                     this->m_outputStream << {\cf22 "\\x1B[91m"}; {\cf20 // red}\par
00074                     {\cf19 break};\par
00075 \par
00076                 {\cf19 case} warning:\par
00077                     this->m_outputStream << {\cf22 "\\x1B[93m"}; {\cf20 // yellow}\par
00078                     {\cf19 break};\par
00079 \par
00080                 {\cf19 case} debug:\par
00081                 {\cf19 case} verbose:\par
00082                     this->m_outputStream << {\cf22 "\\x1B[96m"}; {\cf20 // cyan}\par
00083                     {\cf19 break};\par
00084 {\cf21 #endif}\par
00085                 {\cf19 default}:\par
00086                     {\cf19 break};\par
00087                 \}\par
00088             \}\par
00089         \}\par
00090 \par
00091         {\cf18 void} resetColor()\par
00092         \{\par
00093             {\cf19 if} (this->m_isatty)\par
00094             \{\par
00095 {\cf21 #ifdef _WIN32}\par
00096                 SetConsoleTextAttribute(this->m_outputHandle, m_originalAttr);\par
00097 {\cf21 #else}\par
00098                 this->m_outputStream << {\cf22 "\\x1B[0m\\x1B[0K"};\par
00099 {\cf21 #endif}\par
00100             \}\par
00101         \}\par
00102 \par
00103     {\cf17 private}:\par
00104 {\cf21 #ifdef _WIN32}\par
00105         WORD   m_originalAttr;\par
00106 {\cf21 #endif}\par
00107     \};\par
00108 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Appenders/ConsoleAppender.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/ConsoleAppender.h}
{\xe \v src/include/plog/Appenders/ConsoleAppender.h}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/IAppender.h>}\par
{\f2 #include <plog/Util.h>}\par
{\f2 #include <plog/WinApi.h>}\par
{\f2 #include <iostream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::ConsoleAppender< Formatter >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b plog::OutputStream} \{ {\b plog::streamStdOut}
, {\b plog::streamStdErr}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ConsoleAppender.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/ConsoleAppender.h}
{\xe \v src/include/plog/Appenders/ConsoleAppender.h}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/IAppender.h>}\par
00003 {\cf21 #include <plog/Util.h>}\par
00004 {\cf21 #include <plog/WinApi.h>}\par
00005 {\cf21 #include <iostream>}\par
00006 \par
00007 {\cf17 namespace }plog\par
00008 \{\par
00009     {\cf17 enum} OutputStream\par
00010     \{\par
00011         streamStdOut,\par
00012         streamStdErr\par
00013     \};\par
00014 \par
00015     {\cf17 template}<{\cf17 class} Formatter>\par
00016     {\cf17 class }PLOG_LINKAGE_HIDDEN ConsoleAppender : {\cf17 public} IAppender\par
00017     \{\par
00018     {\cf17 public}:\par
00019 {\cf21 #ifdef _WIN32}\par
00020 {\cf21 #   ifdef _MSC_VER}\par
00021 {\cf21 #       pragma warning(suppress: 26812) }{\cf20 //  Prefer 'enum class' over 'enum'}\par
00022 {\cf21 #   endif}\par
00023         ConsoleAppender(OutputStream outStream = streamStdOut)\par
00024             : m_isatty(!!_isatty(_fileno(outStream == streamStdOut ? stdout : stderr)))\par
00025             , m_outputStream(outStream == streamStdOut ? std::cout : std::cerr)\par
00026             , m_outputHandle()\par
00027         \{\par
00028             {\cf19 if} (m_isatty)\par
00029             \{\par
00030                 m_outputHandle = GetStdHandle(outStream == streamStdOut ? stdHandle::kOutput : stdHandle::kErrorOutput);\par
00031             \}\par
00032         \}\par
00033 {\cf21 #else}\par
00034         ConsoleAppender(OutputStream outStream = streamStdOut)\par
00035             : m_isatty(!!isatty(fileno(outStream == streamStdOut ? stdout : stderr)))\par
00036             , m_outputStream(outStream == streamStdOut ? std::cout : std::cerr)\par
00037         \{\}\par
00038 {\cf21 #endif}\par
00039 \par
00040         {\cf17 virtual} {\cf18 void} write({\cf17 const} Record& record) PLOG_OVERRIDE\par
00041         \{\par
00042             util::nstring str = Formatter::format(record);\par
00043             util::MutexLock lock(m_mutex);\par
00044 \par
00045             writestr(str);\par
00046         \}\par
00047 \par
00048     {\cf17 protected}:\par
00049         {\cf18 void} writestr({\cf17 const} util::nstring& str)\par
00050         \{\par
00051 {\cf21 #ifdef _WIN32}\par
00052             {\cf19 if} (m_isatty)\par
00053             \{\par
00054                 {\cf17 const} std::wstring& wstr = util::toWide(str);\par
00055                 WriteConsoleW(m_outputHandle, wstr.c_str(), {\cf17 static_cast<}DWORD{\cf17 >}(wstr.size()), NULL, NULL);\par
00056             \}\par
00057             {\cf19 else}\par
00058             \{\par
00059 {\cf21 #   if PLOG_CHAR_IS_UTF8}\par
00060                 m_outputStream << str << std::flush;\par
00061 {\cf21 #   else}\par
00062                 m_outputStream << util::toNarrow(str, codePage::kActive) << std::flush;\par
00063 {\cf21 #   endif}\par
00064             \}\par
00065 {\cf21 #else}\par
00066             m_outputStream << str << std::flush;\par
00067 {\cf21 #endif}\par
00068         \}\par
00069 \par
00070     {\cf17 private}:\par
00071 {\cf21 #ifdef __BORLANDC__}\par
00072         {\cf17 static} {\cf18 int} _isatty({\cf18 int} fd) \{ return ::isatty(fd); \}\par
00073 {\cf21 #endif}\par
00074 \par
00075     {\cf17 protected}:\par
00076         util::Mutex m_mutex;\par
00077         {\cf17 const} {\cf18 bool}  m_isatty;\par
00078         std::ostream& m_outputStream;\par
00079 {\cf21 #ifdef _WIN32}\par
00080         HANDLE      m_outputHandle;\par
00081 {\cf21 #endif}\par
00082     \};\par
00083 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Appenders/DebugOutputAppender.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/DebugOutputAppender.h}
{\xe \v src/include/plog/Appenders/DebugOutputAppender.h}
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/IAppender.h>}\par
{\f2 #include <plog/WinApi.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::DebugOutputAppender< Formatter >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DebugOutputAppender.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/DebugOutputAppender.h}
{\xe \v src/include/plog/Appenders/DebugOutputAppender.h}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/IAppender.h>}\par
00003 {\cf21 #include <plog/WinApi.h>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 template}<{\cf17 class} Formatter>\par
00008     {\cf17 class }PLOG_LINKAGE_HIDDEN DebugOutputAppender : {\cf17 public} IAppender\par
00009     \{\par
00010     {\cf17 public}:\par
00011         {\cf17 virtual} {\cf18 void} write({\cf17 const} Record& record) PLOG_OVERRIDE\par
00012         \{\par
00013             OutputDebugStringW(util::toWide(Formatter::format(record)).c_str());\par
00014         \}\par
00015     \};\par
00016 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Appenders/DynamicAppender.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/DynamicAppender.h}
{\xe \v src/include/plog/Appenders/DynamicAppender.h}
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/IAppender.h>}\par
{\f2 #include <set>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::DynamicAppender}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DynamicAppender.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/DynamicAppender.h}
{\xe \v src/include/plog/Appenders/DynamicAppender.h}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/IAppender.h>}\par
00003 {\cf21 #include <set>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 class }PLOG_LINKAGE_HIDDEN DynamicAppender : {\cf17 public} IAppender\par
00008     \{\par
00009     {\cf17 public}:\par
00010         DynamicAppender& addAppender(IAppender* appender)\par
00011         \{\par
00012             assert(appender != {\cf17 this});\par
00013 \par
00014             util::MutexLock lock(m_mutex);\par
00015             m_appenders.insert(appender);\par
00016 \par
00017             {\cf19 return} *{\cf17 this};\par
00018         \}\par
00019 \par
00020         DynamicAppender& removeAppender(IAppender* appender)\par
00021         \{\par
00022             util::MutexLock lock(m_mutex);\par
00023             m_appenders.erase(appender);\par
00024 \par
00025             {\cf19 return} *{\cf17 this};\par
00026         \}\par
00027 \par
00028         {\cf17 virtual} {\cf18 void} write({\cf17 const} Record& record) PLOG_OVERRIDE\par
00029         \{\par
00030             util::MutexLock lock(m_mutex);\par
00031 \par
00032             {\cf19 for} (std::set<IAppender*>::iterator it = m_appenders.begin(); it != m_appenders.end(); ++it)\par
00033             \{\par
00034                 (*it)->write(record);\par
00035             \}\par
00036         \}\par
00037 \par
00038     {\cf17 private}:\par
00039         {\cf17 mutable} util::Mutex     m_mutex;\par
00040         std::set<IAppender*>    m_appenders;\par
00041     \};\par
00042 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Appenders/EventLogAppender.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/EventLogAppender.h}
{\xe \v src/include/plog/Appenders/EventLogAppender.h}
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/IAppender.h>}\par
{\f2 #include <plog/WinApi.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::EventLogAppender< Formatter >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::EventLogAppenderRegistry}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EventLogAppender.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/EventLogAppender.h}
{\xe \v src/include/plog/Appenders/EventLogAppender.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/IAppender.h>}\par
00003 {\cf21 #include <plog/WinApi.h>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 template} <{\cf17 class} Formatter>\par
00008     {\cf17 class }PLOG_LINKAGE_HIDDEN EventLogAppender : {\cf17 public} IAppender\par
00009     \{\par
00010     {\cf17 public}:\par
00011         EventLogAppender({\cf17 const} util::nchar* sourceName) : m_eventSource(RegisterEventSourceW(NULL, util::toWide(sourceName).c_str()))\par
00012         \{\par
00013         \}\par
00014 \par
00015         ~EventLogAppender()\par
00016         \{\par
00017             DeregisterEventSource(m_eventSource);\par
00018         \}\par
00019 \par
00020         {\cf17 virtual} {\cf18 void} write({\cf17 const} Record& record) PLOG_OVERRIDE\par
00021         \{\par
00022             util::nstring str = Formatter::format(record);\par
00023 \par
00024             write(record.getSeverity(), util::toWide(str).c_str());\par
00025         \}\par
00026 \par
00027     {\cf17 private}:\par
00028         {\cf18 void} write(Severity severity, {\cf17 const} {\cf18 wchar_t}* str)\par
00029         \{\par
00030             {\cf17 const} {\cf18 wchar_t}* logMessagePtr[] = \{ str \};\par
00031 \par
00032             ReportEventW(m_eventSource, logSeverityToType(severity), {\cf17 static_cast<}WORD{\cf17 >}(severity), 0, NULL, 1, 0, logMessagePtr, NULL);\par
00033         \}\par
00034 \par
00035         {\cf17 static} WORD logSeverityToType(plog::Severity severity)\par
00036         \{\par
00037             {\cf19 switch} (severity)\par
00038             \{\par
00039             {\cf19 case} plog::fatal:\par
00040             {\cf19 case} plog::error:\par
00041                 {\cf19 return} eventLog::kErrorType;\par
00042 \par
00043             {\cf19 case} plog::warning:\par
00044                 {\cf19 return} eventLog::kWarningType;\par
00045 \par
00046             {\cf19 case} plog::info:\par
00047             {\cf19 case} plog::debug:\par
00048             {\cf19 case} plog::verbose:\par
00049             {\cf19 default}:\par
00050                 {\cf19 return} eventLog::kInformationType;\par
00051             \}\par
00052         \}\par
00053 \par
00054     {\cf17 private}:\par
00055         HANDLE m_eventSource;\par
00056     \};\par
00057 \par
00058     {\cf17 class }EventLogAppenderRegistry\par
00059     \{\par
00060     {\cf17 public}:\par
00061         {\cf17 static} {\cf18 bool} add({\cf17 const} util::nchar* sourceName, {\cf17 const} util::nchar* logName = PLOG_NSTR({\cf22 "Application"}))\par
00062         \{\par
00063             std::wstring logKeyName;\par
00064             std::wstring sourceKeyName;\par
00065             getKeyNames(sourceName, logName, sourceKeyName, logKeyName);\par
00066 \par
00067             HKEY sourceKey;\par
00068             {\cf19 if} (0 != RegCreateKeyExW(hkey::kLocalMachine, sourceKeyName.c_str(), 0, NULL, 0, regSam::kSetValue, NULL, &sourceKey, NULL))\par
00069             \{\par
00070                 {\cf19 return} {\cf17 false};\par
00071             \}\par
00072 \par
00073             {\cf17 const} DWORD kTypesSupported = eventLog::kErrorType | eventLog::kWarningType | eventLog::kInformationType;\par
00074             RegSetValueExW(sourceKey, L{\cf22 "TypesSupported"}, 0, regType::kDword, {\cf17 reinterpret_cast<}{\cf17 const }BYTE*{\cf17 >}(&kTypesSupported), {\cf17 sizeof}(kTypesSupported));\par
00075 \par
00076             {\cf17 const} {\cf18 wchar_t} kEventMessageFile[] = L{\cf22 "%windir%\\\\Microsoft.NET\\\\Framework\\\\v4.0.30319\\\\EventLogMessages.dll;%windir%\\\\Microsoft.NET\\\\Framework\\\\v2.0.50727\\\\EventLogMessages.dll"};\par
00077             RegSetValueExW(sourceKey, L{\cf22 "EventMessageFile"}, 0, regType::kExpandSz, {\cf17 reinterpret_cast<}{\cf17 const }BYTE*{\cf17 >}(kEventMessageFile), {\cf17 sizeof}(kEventMessageFile) - {\cf17 sizeof}(*kEventMessageFile));\par
00078 \par
00079             RegCloseKey(sourceKey);\par
00080             {\cf19 return} {\cf17 true};\par
00081         \}\par
00082 \par
00083         {\cf17 static} {\cf18 bool} exists({\cf17 const} util::nchar* sourceName, {\cf17 const} util::nchar* logName = PLOG_NSTR({\cf22 "Application"}))\par
00084         \{\par
00085             std::wstring logKeyName;\par
00086             std::wstring sourceKeyName;\par
00087             getKeyNames(sourceName, logName, sourceKeyName, logKeyName);\par
00088 \par
00089             HKEY sourceKey;\par
00090             {\cf19 if} (0 != RegOpenKeyExW(hkey::kLocalMachine, sourceKeyName.c_str(), 0, regSam::kQueryValue, &sourceKey))\par
00091             \{\par
00092                 {\cf19 return} {\cf17 false};\par
00093             \}\par
00094 \par
00095             RegCloseKey(sourceKey);\par
00096             {\cf19 return} {\cf17 true};\par
00097         \}\par
00098 \par
00099         {\cf17 static} {\cf18 void} remove({\cf17 const} util::nchar* sourceName, {\cf17 const} util::nchar* logName = PLOG_NSTR({\cf22 "Application"}))\par
00100         \{\par
00101             std::wstring logKeyName;\par
00102             std::wstring sourceKeyName;\par
00103             getKeyNames(sourceName, logName, sourceKeyName, logKeyName);\par
00104 \par
00105             RegDeleteKeyW(hkey::kLocalMachine, sourceKeyName.c_str());\par
00106             RegDeleteKeyW(hkey::kLocalMachine, logKeyName.c_str());\par
00107         \}\par
00108 \par
00109     {\cf17 private}:\par
00110         {\cf17 static} {\cf18 void} getKeyNames({\cf17 const} util::nchar* sourceName, {\cf17 const} util::nchar* logName, std::wstring& sourceKeyName, std::wstring& logKeyName)\par
00111         \{\par
00112             {\cf17 const} std::wstring kPrefix = L{\cf22 "SYSTEM\\\\CurrentControlSet\\\\Services\\\\EventLog\\\\"};\par
00113             logKeyName = kPrefix + util::toWide(logName);\par
00114             sourceKeyName = logKeyName + L{\cf22 "\\\\"} + util::toWide(sourceName);\par
00115         \}\par
00116     \};\par
00117 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Appenders/IAppender.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/IAppender.h}
{\xe \v src/include/plog/Appenders/IAppender.h}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Record.h>}\par
{\f2 #include <plog/Util.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::IAppender}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
IAppender.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/IAppender.h}
{\xe \v src/include/plog/Appenders/IAppender.h}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Record.h>}\par
00003 {\cf21 #include <plog/Util.h>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 class }PLOG_LINKAGE IAppender\par
00008     \{\par
00009     {\cf17 public}:\par
00010         {\cf17 virtual} ~IAppender()\par
00011         \{\par
00012         \}\par
00013 \par
00014         {\cf17 virtual} {\cf18 void} write({\cf17 const} Record& record) = 0;\par
00015     \};\par
00016 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Appenders/RollingFileAppender.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/RollingFileAppender.h}
{\xe \v src/include/plog/Appenders/RollingFileAppender.h}
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/IAppender.h>}\par
{\f2 #include <plog/Converters/UTF8Converter.h>}\par
{\f2 #include <plog/Converters/NativeEOLConverter.h>}\par
{\f2 #include <plog/Util.h>}\par
{\f2 #include <algorithm>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::RollingFileAppender< Formatter, Converter >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RollingFileAppender.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Appenders/RollingFileAppender.h}
{\xe \v src/include/plog/Appenders/RollingFileAppender.h}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/IAppender.h>}\par
00003 {\cf21 #include <plog/Converters/UTF8Converter.h>}\par
00004 {\cf21 #include <plog/Converters/NativeEOLConverter.h>}\par
00005 {\cf21 #include <plog/Util.h>}\par
00006 {\cf21 #include <algorithm>}\par
00007 \par
00008 {\cf17 namespace }plog\par
00009 \{\par
00010     {\cf17 template}<{\cf17 class} Formatter, {\cf17 class} Converter = NativeEOLConverter<UTF8Converter> >\par
00011     {\cf17 class }PLOG_LINKAGE_HIDDEN RollingFileAppender : {\cf17 public} IAppender\par
00012     \{\par
00013     {\cf17 public}:\par
00014         RollingFileAppender({\cf17 const} util::nchar* fileName, {\cf18 size_t} maxFileSize = 0, {\cf18 int} maxFiles = 0)\par
00015             : m_fileSize()\par
00016             , m_maxFileSize()\par
00017             , m_maxFiles(maxFiles)\par
00018             , m_firstWrite(true)\par
00019         \{\par
00020             setFileName(fileName);\par
00021             setMaxFileSize(maxFileSize);\par
00022         \}\par
00023 \par
00024 {\cf21 #if defined(_WIN32) && !PLOG_CHAR_IS_UTF8}\par
00025         RollingFileAppender({\cf17 const} {\cf18 char}* fileName, {\cf18 size_t} maxFileSize = 0, {\cf18 int} maxFiles = 0)\par
00026             : m_fileSize()\par
00027             , m_maxFileSize()\par
00028             , m_maxFiles(maxFiles)\par
00029             , m_firstWrite(true)\par
00030         \{\par
00031             setFileName(fileName);\par
00032             setMaxFileSize(maxFileSize);\par
00033         \}\par
00034 {\cf21 #endif}\par
00035 \par
00036         {\cf17 virtual} {\cf18 void} write({\cf17 const} Record& record) PLOG_OVERRIDE\par
00037         \{\par
00038             util::MutexLock lock(m_mutex);\par
00039 \par
00040             {\cf19 if} (m_firstWrite)\par
00041             \{\par
00042                 openLogFile();\par
00043                 m_firstWrite = {\cf17 false};\par
00044             \}\par
00045             {\cf19 else} {\cf19 if} (m_maxFiles > 0 && m_fileSize > m_maxFileSize && {\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(-1) != m_fileSize)\par
00046             \{\par
00047                 rollLogFiles();\par
00048             \}\par
00049 \par
00050             {\cf18 size_t} bytesWritten = m_file.write(Converter::convert(Formatter::format(record)));\par
00051 \par
00052             {\cf19 if} ({\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(-1) != bytesWritten)\par
00053             \{\par
00054                 m_fileSize += bytesWritten;\par
00055             \}\par
00056         \}\par
00057 \par
00058         {\cf18 void} setFileName({\cf17 const} util::nchar* fileName)\par
00059         \{\par
00060             util::MutexLock lock(m_mutex);\par
00061 \par
00062             util::splitFileName(fileName, m_fileNameNoExt, m_fileExt);\par
00063 \par
00064             m_file.close();\par
00065             m_firstWrite = {\cf17 true};\par
00066         \}\par
00067 \par
00068 {\cf21 #if defined(_WIN32) && !PLOG_CHAR_IS_UTF8}\par
00069         {\cf18 void} setFileName({\cf17 const} {\cf18 char}* fileName)\par
00070         \{\par
00071             setFileName(util::toWide(fileName).c_str());\par
00072         \}\par
00073 {\cf21 #endif}\par
00074 \par
00075         {\cf18 void} setMaxFiles({\cf18 int} maxFiles)\par
00076         \{\par
00077             m_maxFiles = maxFiles;\par
00078         \}\par
00079 \par
00080         {\cf18 void} setMaxFileSize({\cf18 size_t} maxFileSize)\par
00081         \{\par
00082             m_maxFileSize = (std::max)(maxFileSize, {\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(1000)); {\cf20 // set a lower limit for the maxFileSize}\par
00083         \}\par
00084 \par
00085         {\cf18 void} rollLogFiles()\par
00086         \{\par
00087             m_file.close();\par
00088 \par
00089             util::nstring lastFileName = buildFileName(m_maxFiles - 1);\par
00090             util::File::unlink(lastFileName);\par
00091 \par
00092             {\cf19 for} ({\cf18 int} fileNumber = m_maxFiles - 2; fileNumber >= 0; --fileNumber)\par
00093             \{\par
00094                 util::nstring currentFileName = buildFileName(fileNumber);\par
00095                 util::nstring nextFileName = buildFileName(fileNumber + 1);\par
00096 \par
00097                 util::File::rename(currentFileName, nextFileName);\par
00098             \}\par
00099 \par
00100             openLogFile();\par
00101             m_firstWrite = {\cf17 false};\par
00102         \}\par
00103 \par
00104     {\cf17 private}:\par
00105         {\cf18 void} openLogFile()\par
00106         \{\par
00107             m_fileSize = m_file.open(buildFileName());\par
00108 \par
00109             {\cf19 if} (0 == m_fileSize)\par
00110             \{\par
00111                 {\cf18 size_t} bytesWritten = m_file.write(Converter::header(Formatter::header()));\par
00112 \par
00113                 {\cf19 if} ({\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(-1) != bytesWritten)\par
00114                 \{\par
00115                     m_fileSize += bytesWritten;\par
00116                 \}\par
00117             \}\par
00118         \}\par
00119 \par
00120         util::nstring buildFileName({\cf18 int} fileNumber = 0)\par
00121         \{\par
00122             util::nostringstream ss;\par
00123             ss << m_fileNameNoExt;\par
00124 \par
00125             {\cf19 if} (fileNumber > 0)\par
00126             \{\par
00127                 ss << {\cf23 '.'} << fileNumber;\par
00128             \}\par
00129 \par
00130             {\cf19 if} (!m_fileExt.empty())\par
00131             \{\par
00132                 ss << {\cf23 '.'} << m_fileExt;\par
00133             \}\par
00134 \par
00135             {\cf19 return} ss.str();\par
00136         \}\par
00137 \par
00138     {\cf17 private}:\par
00139         util::Mutex     m_mutex;\par
00140         util::File      m_file;\par
00141         {\cf18 size_t}          m_fileSize;\par
00142         {\cf18 size_t}          m_maxFileSize;\par
00143         {\cf18 int}             m_maxFiles;\par
00144         util::nstring   m_fileExt;\par
00145         util::nstring   m_fileNameNoExt;\par
00146         {\cf18 bool}            m_firstWrite;\par
00147     \};\par
00148 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Converters/NativeEOLConverter.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Converters/NativeEOLConverter.h}
{\xe \v src/include/plog/Converters/NativeEOLConverter.h}
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Converters/UTF8Converter.h>}\par
{\f2 #include <plog/Util.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::NativeEOLConverter< NextConverter >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NativeEOLConverter.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Converters/NativeEOLConverter.h}
{\xe \v src/include/plog/Converters/NativeEOLConverter.h}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Converters/UTF8Converter.h>}\par
00003 {\cf21 #include <plog/Util.h>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 template}<{\cf17 class} NextConverter = UTF8Converter>\par
00008     {\cf17 class }NativeEOLConverter : {\cf17 public} NextConverter\par
00009     \{\par
00010 {\cf21 #ifdef _WIN32}\par
00011     {\cf17 public}:\par
00012         {\cf17 static} std::string header({\cf17 const} util::nstring& str)\par
00013         \{\par
00014             {\cf19 return} NextConverter::header(fixLineEndings(str));\par
00015         \}\par
00016 \par
00017         {\cf17 static} std::string convert({\cf17 const} util::nstring& str)\par
00018         \{\par
00019             {\cf19 return} NextConverter::convert(fixLineEndings(str));\par
00020         \}\par
00021 \par
00022     {\cf17 private}:\par
00023         {\cf17 static} util::nstring fixLineEndings({\cf17 const} util::nstring& str)\par
00024         \{\par
00025             util::nstring output;\par
00026             output.reserve(str.length() * 2); {\cf20 // the worst case requires 2x chars}\par
00027 \par
00028             {\cf19 for} ({\cf18 size_t} i = 0; i < str.size(); ++i)\par
00029             \{\par
00030                 util::nchar ch = str[i];\par
00031 \par
00032                 {\cf19 if} (ch == PLOG_NSTR({\cf23 '\\n'}))\par
00033                 \{\par
00034                     output.push_back(PLOG_NSTR({\cf23 '\\r'}));\par
00035                 \}\par
00036 \par
00037                 output.push_back(ch);\par
00038             \}\par
00039 \par
00040             {\cf19 return} output;\par
00041         \}\par
00042 {\cf21 #endif}\par
00043     \};\par
00044 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Converters/UTF8Converter.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Converters/UTF8Converter.h}
{\xe \v src/include/plog/Converters/UTF8Converter.h}
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Util.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::UTF8Converter}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
UTF8Converter.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Converters/UTF8Converter.h}
{\xe \v src/include/plog/Converters/UTF8Converter.h}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Util.h>}\par
00003 \par
00004 {\cf17 namespace }plog\par
00005 \{\par
00006     {\cf17 class }UTF8Converter\par
00007     \{\par
00008     {\cf17 public}:\par
00009         {\cf17 static} std::string header({\cf17 const} util::nstring& str)\par
00010         \{\par
00011             {\cf17 const} {\cf18 char} kBOM[] = {\cf22 "\\xEF\\xBB\\xBF"};\par
00012 \par
00013             {\cf19 return} std::string(kBOM) + convert(str);\par
00014         \}\par
00015 \par
00016 {\cf21 #if PLOG_CHAR_IS_UTF8}\par
00017         {\cf17 static} {\cf17 const} std::string& convert({\cf17 const} util::nstring& str)\par
00018         \{\par
00019             {\cf19 return} str;\par
00020         \}\par
00021 {\cf21 #else}\par
00022         {\cf17 static} std::string convert({\cf17 const} util::nstring& str)\par
00023         \{\par
00024             {\cf19 return} util::toNarrow(str, codePage::kUTF8);\par
00025         \}\par
00026 {\cf21 #endif}\par
00027     \};\par
00028 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Formatters/CsvFormatter.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Formatters/CsvFormatter.h}
{\xe \v src/include/plog/Formatters/CsvFormatter.h}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Record.h>}\par
{\f2 #include <plog/Util.h>}\par
{\f2 #include <iomanip>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::CsvFormatterImpl< useUtcTime >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::CsvFormatter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::CsvFormatterUtcTime}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CsvFormatter.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Formatters/CsvFormatter.h}
{\xe \v src/include/plog/Formatters/CsvFormatter.h}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Record.h>}\par
00003 {\cf21 #include <plog/Util.h>}\par
00004 {\cf21 #include <iomanip>}\par
00005 \par
00006 {\cf17 namespace }plog\par
00007 \{\par
00008     {\cf17 template}<{\cf18 bool} useUtcTime>\par
00009     {\cf17 class }CsvFormatterImpl\par
00010     \{\par
00011     {\cf17 public}:\par
00012         {\cf17 static} util::nstring header()\par
00013         \{\par
00014             {\cf19 return} PLOG_NSTR({\cf22 "Date;Time;Severity;TID;This;Function;Message\\n"});\par
00015         \}\par
00016 \par
00017         {\cf17 static} util::nstring format({\cf17 const} Record& record)\par
00018         \{\par
00019             tm t;\par
00020             useUtcTime ? util::gmtime_s(&t, &record.getTime().time) : util::localtime_s(&t, &record.getTime().time);\par
00021 \par
00022             util::nostringstream ss;\par
00023             ss << t.tm_year + 1900 << PLOG_NSTR({\cf22 "/"}) << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(2) << t.tm_mon + 1 << PLOG_NSTR({\cf22 "/"}) << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(2) << t.tm_mday << PLOG_NSTR({\cf22 ";"});\par
00024             ss << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(2) << t.tm_hour << PLOG_NSTR({\cf22 ":"}) << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(2) << t.tm_min << PLOG_NSTR({\cf22 ":"}) << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(2) << t.tm_sec << PLOG_NSTR({\cf22 "."}) << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(3) << {\cf17 static_cast<}{\cf18 int}{\cf17 >} (record.getTime().millitm) << PLOG_NSTR({\cf22 ";"});\par
00025             ss << severityToString(record.getSeverity()) << PLOG_NSTR({\cf22 ";"});\par
00026             ss << record.getTid() << PLOG_NSTR({\cf22 ";"});\par
00027             ss << record.getObject() << PLOG_NSTR({\cf22 ";"});\par
00028             ss << record.getFunc() << PLOG_NSTR({\cf22 "@"}) << record.getLine() << PLOG_NSTR({\cf22 ";"});\par
00029 \par
00030             util::nstring message = record.getMessage();\par
00031 \par
00032             {\cf19 if} (message.size() > kMaxMessageSize)\par
00033             \{\par
00034                 message.resize(kMaxMessageSize);\par
00035                 message.append(PLOG_NSTR({\cf22 "..."}));\par
00036             \}\par
00037 \par
00038             util::nistringstream split(message);\par
00039             util::nstring token;\par
00040 \par
00041             {\cf19 while} (!split.eof())\par
00042             \{\par
00043                 std::getline(split, token, PLOG_NSTR({\cf23 '"'}));\par
00044                 ss << PLOG_NSTR({\cf22 "\\""}) << token << PLOG_NSTR({\cf22 "\\""});\par
00045             \}\par
00046 \par
00047             ss << PLOG_NSTR({\cf22 "\\n"});\par
00048 \par
00049             {\cf19 return} ss.str();\par
00050         \}\par
00051 \par
00052         {\cf17 static} {\cf17 const} {\cf18 size_t} kMaxMessageSize = 32000;\par
00053     \};\par
00054 \par
00055     {\cf17 class }CsvFormatter : {\cf17 public} CsvFormatterImpl<false> \{\};\par
00056     {\cf17 class }CsvFormatterUtcTime : {\cf17 public} CsvFormatterImpl<true> \{\};\par
00057 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Formatters/FuncMessageFormatter.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Formatters/FuncMessageFormatter.h}
{\xe \v src/include/plog/Formatters/FuncMessageFormatter.h}
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Record.h>}\par
{\f2 #include <plog/Util.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::FuncMessageFormatter}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FuncMessageFormatter.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Formatters/FuncMessageFormatter.h}
{\xe \v src/include/plog/Formatters/FuncMessageFormatter.h}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Record.h>}\par
00003 {\cf21 #include <plog/Util.h>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 class }FuncMessageFormatter\par
00008     \{\par
00009     {\cf17 public}:\par
00010         {\cf17 static} util::nstring header()\par
00011         \{\par
00012             {\cf19 return} util::nstring();\par
00013         \}\par
00014 \par
00015         {\cf17 static} util::nstring format({\cf17 const} Record& record)\par
00016         \{\par
00017             util::nostringstream ss;\par
00018             ss << record.getFunc() << PLOG_NSTR({\cf22 "@"}) << record.getLine() << PLOG_NSTR({\cf22 ": "}) << record.getMessage() << PLOG_NSTR({\cf22 "\\n"});\par
00019 \par
00020             {\cf19 return} ss.str();\par
00021         \}\par
00022     \};\par
00023 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Formatters/MessageOnlyFormatter.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Formatters/MessageOnlyFormatter.h}
{\xe \v src/include/plog/Formatters/MessageOnlyFormatter.h}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Record.h>}\par
{\f2 #include <plog/Util.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::MessageOnlyFormatter}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MessageOnlyFormatter.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Formatters/MessageOnlyFormatter.h}
{\xe \v src/include/plog/Formatters/MessageOnlyFormatter.h}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Record.h>}\par
00003 {\cf21 #include <plog/Util.h>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 class }MessageOnlyFormatter\par
00008     \{\par
00009     {\cf17 public}:\par
00010         {\cf17 static} util::nstring header()\par
00011         \{\par
00012             {\cf19 return} util::nstring();\par
00013         \}\par
00014 \par
00015         {\cf17 static} util::nstring format({\cf17 const} Record& record)\par
00016         \{\par
00017             util::nostringstream ss;\par
00018             ss << record.getMessage() << PLOG_NSTR({\cf22 "\\n"});\par
00019 \par
00020             {\cf19 return} ss.str();\par
00021         \}\par
00022     \};\par
00023 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Formatters/TxtFormatter.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Formatters/TxtFormatter.h}
{\xe \v src/include/plog/Formatters/TxtFormatter.h}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Record.h>}\par
{\f2 #include <plog/Util.h>}\par
{\f2 #include <iomanip>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::TxtFormatterImpl< useUtcTime >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::TxtFormatter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::TxtFormatterUtcTime}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TxtFormatter.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Formatters/TxtFormatter.h}
{\xe \v src/include/plog/Formatters/TxtFormatter.h}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Record.h>}\par
00003 {\cf21 #include <plog/Util.h>}\par
00004 {\cf21 #include <iomanip>}\par
00005 \par
00006 {\cf17 namespace }plog\par
00007 \{\par
00008     {\cf17 template}<{\cf18 bool} useUtcTime>\par
00009     {\cf17 class }TxtFormatterImpl\par
00010     \{\par
00011     {\cf17 public}:\par
00012         {\cf17 static} util::nstring header()\par
00013         \{\par
00014             {\cf19 return} util::nstring();\par
00015         \}\par
00016 \par
00017         {\cf17 static} util::nstring format({\cf17 const} Record& record)\par
00018         \{\par
00019             tm t;\par
00020             useUtcTime ? util::gmtime_s(&t, &record.getTime().time) : util::localtime_s(&t, &record.getTime().time);\par
00021 \par
00022             util::nostringstream ss;\par
00023             ss << t.tm_year + 1900 << {\cf22 "-"} << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(2) << t.tm_mon + 1 << PLOG_NSTR({\cf22 "-"}) << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(2) << t.tm_mday << PLOG_NSTR({\cf22 " "});\par
00024             ss << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(2) << t.tm_hour << PLOG_NSTR({\cf22 ":"}) << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(2) << t.tm_min << PLOG_NSTR({\cf22 ":"}) << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(2) << t.tm_sec << PLOG_NSTR({\cf22 "."}) << std::setfill(PLOG_NSTR({\cf23 '0'})) << std::setw(3) << {\cf17 static_cast<}{\cf18 int}{\cf17 >} (record.getTime().millitm) << PLOG_NSTR({\cf22 " "});\par
00025             ss << std::setfill(PLOG_NSTR({\cf23 ' '})) << std::setw(5) << std::left << severityToString(record.getSeverity()) << PLOG_NSTR({\cf22 " "});\par
00026             ss << PLOG_NSTR({\cf22 "["}) << record.getTid() << PLOG_NSTR({\cf22 "] "});\par
00027             ss << PLOG_NSTR({\cf22 "["}) << record.getFunc() << PLOG_NSTR({\cf22 "@"}) << record.getLine() << PLOG_NSTR({\cf22 "] "});\par
00028             ss << record.getMessage() << PLOG_NSTR({\cf22 "\\n"});\par
00029 \par
00030             {\cf19 return} ss.str();\par
00031         \}\par
00032     \};\par
00033 \par
00034     {\cf17 class }TxtFormatter : {\cf17 public} TxtFormatterImpl<false> \{\};\par
00035     {\cf17 class }TxtFormatterUtcTime : {\cf17 public} TxtFormatterImpl<true> \{\};\par
00036 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Helpers/AscDump.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Helpers/AscDump.h}
{\xe \v src/include/plog/Helpers/AscDump.h}
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Util.h>}\par
{\f2 #include <cctype>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::AscDump}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b util::nostringstream} & {\b plog::operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b AscDump} &{\b ascDump})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AscDump} {\b plog::ascdump} ({\b const} {\b void} *{\b ptr}, {\b size_t} size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Container} > {\b AscDump} {\b plog::ascdump} ({\b const} {\b Container} &{\b container})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T} , {\b size_t} N> {\b AscDump} {\b plog::ascdump} ({\b const} {\b T}(&{\b arr})[{\b N}])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AscDump.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Helpers/AscDump.h}
{\xe \v src/include/plog/Helpers/AscDump.h}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Util.h>}\par
00003 {\cf21 #include <cctype>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 class }AscDump\par
00008     \{\par
00009     {\cf17 public}:\par
00010         AscDump({\cf17 const} {\cf18 void}* ptr, {\cf18 size_t} size)\par
00011             : m_ptr(static_cast<const char*>(ptr))\par
00012             , m_size(size)\par
00013         \{\par
00014         \}\par
00015 \par
00016         {\cf17 friend} util::nostringstream& operator<<(util::nostringstream& stream, {\cf17 const} AscDump& ascDump);\par
00017 \par
00018     {\cf17 private}:\par
00019         {\cf17 const} {\cf18 char}* m_ptr;\par
00020         {\cf18 size_t} m_size;\par
00021     \};\par
00022 \par
00023     {\cf17 inline} util::nostringstream& operator<<(util::nostringstream& stream, {\cf17 const} AscDump& ascDump)\par
00024     \{\par
00025         {\cf19 for} ({\cf18 size_t} i = 0; i < ascDump.m_size; ++i)\par
00026         \{\par
00027             stream << (std::isprint(ascDump.m_ptr[i]) ? ascDump.m_ptr[i] : {\cf23 '.'});\par
00028         \}\par
00029 \par
00030         {\cf19 return} stream;\par
00031     \}\par
00032 \par
00033     {\cf17 inline} AscDump ascdump({\cf17 const} {\cf18 void}* ptr, {\cf18 size_t} size) \{ {\cf19 return} AscDump(ptr, size); \}\par
00034 \par
00035     {\cf17 template}<{\cf17 class} Container>\par
00036     {\cf17 inline} AscDump ascdump({\cf17 const} Container& container) \{ {\cf19 return} AscDump(container.data(), container.size() * {\cf17 sizeof}(*container.data())); \}\par
00037 \par
00038     {\cf17 template}<{\cf17 class} T, {\cf18 size_t} N>\par
00039     {\cf17 inline} AscDump ascdump({\cf17 const} T (&arr)[N]) \{ {\cf19 return} AscDump(arr, N * {\cf17 sizeof}(*arr)); \}\par
00040 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Helpers/HexDump.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Helpers/HexDump.h}
{\xe \v src/include/plog/Helpers/HexDump.h}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Util.h>}\par
{\f2 #include <iomanip>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::HexDump}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b util::nostringstream} & {\b plog::operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b HexDump} &{\b hexDump})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b HexDump} {\b plog::hexdump} ({\b const} {\b void} *{\b ptr}, {\b size_t} size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Container} > {\b HexDump} {\b plog::hexdump} ({\b const} {\b Container} &{\b container})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T} , {\b size_t} N> {\b HexDump} {\b plog::hexdump} ({\b const} {\b T}(&{\b arr})[{\b N}])\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
HexDump.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Helpers/HexDump.h}
{\xe \v src/include/plog/Helpers/HexDump.h}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Util.h>}\par
00003 {\cf21 #include <iomanip>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00007     {\cf17 class }HexDump\par
00008     \{\par
00009     {\cf17 public}:\par
00010         HexDump({\cf17 const} {\cf18 void}* ptr, {\cf18 size_t} size)\par
00011             : m_ptr(static_cast<const unsigned char*>(ptr))\par
00012             , m_size(size)\par
00013             , m_group(8)\par
00014             , m_digitSeparator({\cf22 " "})\par
00015             , m_groupSeparator({\cf22 "  "})\par
00016         \{\par
00017         \}\par
00018 \par
00019         HexDump& group({\cf18 size_t} group)\par
00020         \{\par
00021             m_group = group;\par
00022             {\cf19 return} *{\cf17 this};\par
00023         \}\par
00024 \par
00025         HexDump& separator({\cf17 const} {\cf18 char}* digitSeparator)\par
00026         \{\par
00027             m_digitSeparator = digitSeparator;\par
00028             {\cf19 return} *{\cf17 this};\par
00029         \}\par
00030 \par
00031         HexDump& separator({\cf17 const} {\cf18 char}* digitSeparator, {\cf17 const} {\cf18 char}* groupSeparator)\par
00032         \{\par
00033             m_digitSeparator = digitSeparator;\par
00034             m_groupSeparator = groupSeparator;\par
00035             {\cf19 return} *{\cf17 this};\par
00036         \}\par
00037 \par
00038         {\cf17 friend} util::nostringstream& operator<<(util::nostringstream& stream, {\cf17 const} HexDump&);\par
00039 \par
00040     {\cf17 private}:\par
00041         {\cf17 const} {\cf18 unsigned} {\cf18 char}* m_ptr;\par
00042         {\cf18 size_t} m_size;\par
00043         {\cf18 size_t} m_group;\par
00044         {\cf17 const} {\cf18 char}* m_digitSeparator;\par
00045         {\cf17 const} {\cf18 char}* m_groupSeparator;\par
00046     \};\par
00047 \par
00048     {\cf17 inline} util::nostringstream& operator<<(util::nostringstream& stream, {\cf17 const} HexDump& hexDump)\par
00049     \{\par
00050         stream << std::hex << std::setfill(PLOG_NSTR({\cf23 '0'}));\par
00051 \par
00052         {\cf19 for} ({\cf18 size_t} i = 0; i < hexDump.m_size;)\par
00053         \{\par
00054             stream << std::setw(2) << static_cast<int>(hexDump.m_ptr[i]);\par
00055 \par
00056             {\cf19 if} (++i < hexDump.m_size)\par
00057             \{\par
00058                 {\cf19 if} (hexDump.m_group > 0 && i % hexDump.m_group == 0)\par
00059                 \{\par
00060                     stream << hexDump.m_groupSeparator;\par
00061                 \}\par
00062                 {\cf19 else}\par
00063                 \{\par
00064                     stream << hexDump.m_digitSeparator;\par
00065                 \}\par
00066             \}\par
00067         \}\par
00068 \par
00069         {\cf19 return} stream;\par
00070     \}\par
00071 \par
00072     {\cf17 inline} HexDump hexdump({\cf17 const} {\cf18 void}* ptr, {\cf18 size_t} size) \{ {\cf19 return} HexDump(ptr, size); \}\par
00073 \par
00074     {\cf17 template}<{\cf17 class} Container>\par
00075     {\cf17 inline} HexDump hexdump({\cf17 const} Container& container) \{ {\cf19 return} HexDump(container.data(), container.size() * {\cf17 sizeof}(*container.data())); \}\par
00076 \par
00077     {\cf17 template}<{\cf17 class} T, {\cf18 size_t} N>\par
00078     {\cf17 inline} HexDump hexdump({\cf17 const} T (&arr)[N]) \{ {\cf19 return} HexDump(arr, N * {\cf17 sizeof}(*arr)); \}\par
00079 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Helpers/PrintVar.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Helpers/PrintVar.h}
{\xe \v src/include/plog/Helpers/PrintVar.h}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_1}(a1)\~ #a1 ": " << a1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_2}(a1,  a2)\~ {\b PLOG_IMPL_PRINT_VAR_1}(a1) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_3}(a1,  a2,  a3)\~ {\b PLOG_IMPL_PRINT_VAR_2}(a1, a2) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_4}(a1,  a2,  a3,  a4)\~ {\b PLOG_IMPL_PRINT_VAR_3}(a1, a2, a3) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_5}(a1,  a2,  a3,  a4,  a5)\~ {\b PLOG_IMPL_PRINT_VAR_4}(a1, a2, a3, a4) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a5)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_6}(a1,  a2,  a3,  a4,  a5,  a6)\~ {\b PLOG_IMPL_PRINT_VAR_5}(a1, a2, a3, a4, a5) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a6)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_7}(a1,  a2,  a3,  a4,  a5,  a6,  a7)\~ {\b PLOG_IMPL_PRINT_VAR_6}(a1, a2, a3, a4, a5, a6) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a7)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_8}(a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8)\~ {\b PLOG_IMPL_PRINT_VAR_7}(a1, a2, a3, a4, a5, a6, a7) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a8)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_9}(a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9)\~ {\b PLOG_IMPL_PRINT_VAR_8}(a1, a2, a3, a4, a5, a6, a7, a8) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_TAIL}(a)\~ << ", " {\b PLOG_IMPL_PRINT_VAR_1}(a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_EXPAND}(x)\~ x\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IMPL_PRINT_VAR_GET_MACRO}(x1,  x2,  x3,  x4,  x5,  x6,  x7,  x8,  x9,  NAME, ...)\~ NAME\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_PRINT_VAR}(...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v PLOG_IMPL_PRINT_VAR_1\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_1( a1)\~ #a1 ": " << a1}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_2\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_2( a1,  a2)\~ {\b PLOG_IMPL_PRINT_VAR_1}(a1) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a2)}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_3\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_3( a1,  a2,  a3)\~ {\b PLOG_IMPL_PRINT_VAR_2}(a1, a2) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a3)}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_4\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_4( a1,  a2,  a3,  a4)\~ {\b PLOG_IMPL_PRINT_VAR_3}(a1, a2, a3) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a4)}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_5\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_5( a1,  a2,  a3,  a4,  a5)\~ {\b PLOG_IMPL_PRINT_VAR_4}(a1, a2, a3, a4) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a5)}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_6\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_6( a1,  a2,  a3,  a4,  a5,  a6)\~ {\b PLOG_IMPL_PRINT_VAR_5}(a1, a2, a3, a4, a5) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a6)}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_7\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_7( a1,  a2,  a3,  a4,  a5,  a6,  a7)\~ {\b PLOG_IMPL_PRINT_VAR_6}(a1, a2, a3, a4, a5, a6) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a7)}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_8\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_8( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8)\~ {\b PLOG_IMPL_PRINT_VAR_7}(a1, a2, a3, a4, a5, a6, a7) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a8)}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_9\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_9( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9)\~ {\b PLOG_IMPL_PRINT_VAR_8}(a1, a2, a3, a4, a5, a6, a7, a8) {\b PLOG_IMPL_PRINT_VAR_TAIL}(a9)}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_EXPAND\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_EXPAND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_EXPAND( x)\~ x}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_GET_MACRO\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_GET_MACRO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_GET_MACRO( x1,  x2,  x3,  x4,  x5,  x6,  x7,  x8,  x9,  NAME,   {\i ...})\~ NAME}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_IMPL_PRINT_VAR_TAIL\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_IMPL_PRINT_VAR_TAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IMPL_PRINT_VAR_TAIL( a)\~ << ", " {\b PLOG_IMPL_PRINT_VAR_1}(a)}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b PrintVar.h}.}\par
}
{\xe \v PLOG_PRINT_VAR\:PrintVar.h}
{\xe \v PrintVar.h\:PLOG_PRINT_VAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_PRINT_VAR(  {\i ...})}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     PLOG_IMPL_PRINT_VAR_EXPAND(PLOG_IMPL_PRINT_VAR_GET_MACRO(__VA_ARGS__,\\\par
    PLOG_IMPL_PRINT_VAR_9, PLOG_IMPL_PRINT_VAR_8, PLOG_IMPL_PRINT_VAR_7, PLOG_IMPL_PRINT_VAR_6, PLOG_IMPL_PRINT_VAR_5,\\\par
    PLOG_IMPL_PRINT_VAR_4, PLOG_IMPL_PRINT_VAR_3, PLOG_IMPL_PRINT_VAR_2, PLOG_IMPL_PRINT_VAR_1, UNUSED)(__VA_ARGS__))\par
}
{
Definition at line {\b 22} of file {\b PrintVar.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PrintVar.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Helpers/PrintVar.h}
{\xe \v src/include/plog/Helpers/PrintVar.h}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #define PLOG_IMPL_PRINT_VAR_1(a1) #a1 ": " << a1}\par
00004 {\cf21 #define PLOG_IMPL_PRINT_VAR_2(a1, a2) PLOG_IMPL_PRINT_VAR_1(a1) PLOG_IMPL_PRINT_VAR_TAIL(a2)}\par
00005 {\cf21 #define PLOG_IMPL_PRINT_VAR_3(a1, a2, a3) PLOG_IMPL_PRINT_VAR_2(a1, a2) PLOG_IMPL_PRINT_VAR_TAIL(a3)}\par
00006 {\cf21 #define PLOG_IMPL_PRINT_VAR_4(a1, a2, a3, a4) PLOG_IMPL_PRINT_VAR_3(a1, a2, a3) PLOG_IMPL_PRINT_VAR_TAIL(a4)}\par
00007 {\cf21 #define PLOG_IMPL_PRINT_VAR_5(a1, a2, a3, a4, a5) PLOG_IMPL_PRINT_VAR_4(a1, a2, a3, a4) PLOG_IMPL_PRINT_VAR_TAIL(a5)}\par
00008 {\cf21 #define PLOG_IMPL_PRINT_VAR_6(a1, a2, a3, a4, a5, a6) PLOG_IMPL_PRINT_VAR_5(a1, a2, a3, a4, a5) PLOG_IMPL_PRINT_VAR_TAIL(a6)}\par
00009 {\cf21 #define PLOG_IMPL_PRINT_VAR_7(a1, a2, a3, a4, a5, a6, a7) PLOG_IMPL_PRINT_VAR_6(a1, a2, a3, a4, a5, a6) PLOG_IMPL_PRINT_VAR_TAIL(a7)}\par
00010 {\cf21 #define PLOG_IMPL_PRINT_VAR_8(a1, a2, a3, a4, a5, a6, a7, a8) PLOG_IMPL_PRINT_VAR_7(a1, a2, a3, a4, a5, a6, a7) PLOG_IMPL_PRINT_VAR_TAIL(a8)}\par
00011 {\cf21 #define PLOG_IMPL_PRINT_VAR_9(a1, a2, a3, a4, a5, a6, a7, a8, a9) PLOG_IMPL_PRINT_VAR_8(a1, a2, a3, a4, a5, a6, a7, a8) PLOG_IMPL_PRINT_VAR_TAIL(a9)}\par
00012 {\cf21 #define PLOG_IMPL_PRINT_VAR_TAIL(a) << ", " PLOG_IMPL_PRINT_VAR_1(a)}\par
00013 \par
00014 {\cf21 #define PLOG_IMPL_PRINT_VAR_EXPAND(x) x}\par
00015 \par
00016 {\cf21 #ifdef __GNUC__}\par
00017 {\cf21 #pragma GCC system_header }{\cf20 // disable warning: variadic macros are a C99 feature}\par
00018 {\cf21 #endif}\par
00019 \par
00020 {\cf21 #define PLOG_IMPL_PRINT_VAR_GET_MACRO(x1, x2, x3, x4, x5, x6, x7, x8, x9, NAME, ...) NAME}\par
00021 \par
00022 {\cf21 #define PLOG_PRINT_VAR(...) PLOG_IMPL_PRINT_VAR_EXPAND(PLOG_IMPL_PRINT_VAR_GET_MACRO(__VA_ARGS__,\\}\par
00023 {\cf21     PLOG_IMPL_PRINT_VAR_9, PLOG_IMPL_PRINT_VAR_8, PLOG_IMPL_PRINT_VAR_7, PLOG_IMPL_PRINT_VAR_6, PLOG_IMPL_PRINT_VAR_5,\\}\par
00024 {\cf21     PLOG_IMPL_PRINT_VAR_4, PLOG_IMPL_PRINT_VAR_3, PLOG_IMPL_PRINT_VAR_2, PLOG_IMPL_PRINT_VAR_1, UNUSED)(__VA_ARGS__))}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Init.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Init.h}
{\xe \v src/include/plog/Init.h}
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Logger.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b int} instanceId> {\b PLOG_LINKAGE_HIDDEN} {\b Logger}< {\b instanceId} > & {\b plog::init} ({\b Severity} {\b maxSeverity}={\b none}, {\b IAppender} *{\b appender}={\b NULL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & {\b plog::init} ({\b Severity} {\b maxSeverity}={\b none}, {\b IAppender} *{\b appender}={\b NULL})\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Init.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Init.h}
{\xe \v src/include/plog/Init.h}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Logger.h>}\par
00003 \par
00004 {\cf17 namespace }plog\par
00005 \{\par
00006     {\cf17 template}<{\cf18 int} instanceId>\par
00007     PLOG_LINKAGE_HIDDEN {\cf17 inline} Logger<instanceId>& init(Severity maxSeverity = none, IAppender* appender = NULL)\par
00008     \{\par
00009         {\cf17 static} Logger<instanceId> logger(maxSeverity);\par
00010         {\cf19 return} appender ? logger.addAppender(appender) : logger;\par
00011     \}\par
00012 \par
00013     {\cf17 inline} Logger<PLOG_DEFAULT_INSTANCE_ID>& init(Severity maxSeverity = none, IAppender* appender = NULL)\par
00014     \{\par
00015         {\cf19 return} init<PLOG_DEFAULT_INSTANCE_ID>(maxSeverity, appender);\par
00016     \}\par
00017 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Initializers/ConsoleInitializer.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Initializers/ConsoleInitializer.h}
{\xe \v src/include/plog/Initializers/ConsoleInitializer.h}
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/ColorConsoleAppender.h>}\par
{\f2 #include <plog/Init.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Formatter} , {\b int} instanceId> {\b PLOG_LINKAGE_HIDDEN} {\b Logger}< {\b instanceId} > & {\b plog::init} ({\b Severity} {\b maxSeverity}, {\b OutputStream} {\b outputStream})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Formatter} > {\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & {\b plog::init} ({\b Severity} {\b maxSeverity}, {\b OutputStream} {\b outputStream})\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ConsoleInitializer.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Initializers/ConsoleInitializer.h}
{\xe \v src/include/plog/Initializers/ConsoleInitializer.h}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/ColorConsoleAppender.h>}\par
00003 {\cf21 #include <plog/Init.h>}\par
00004 \par
00005 {\cf17 namespace }plog\par
00006 \{\par
00008     {\cf20 // ColorConsoleAppender with any Formatter}\par
00009 \par
00010     {\cf17 template}<{\cf17 class} Formatter, {\cf18 int} instanceId>\par
00011     PLOG_LINKAGE_HIDDEN {\cf17 inline} Logger<instanceId>& init(Severity maxSeverity, OutputStream outputStream)\par
00012     \{\par
00013         {\cf17 static} ColorConsoleAppender<Formatter> appender(outputStream);\par
00014         {\cf19 return} init<instanceId>(maxSeverity, &appender);\par
00015     \}\par
00016 \par
00017     {\cf17 template}<{\cf17 class} Formatter>\par
00018     {\cf17 inline} Logger<PLOG_DEFAULT_INSTANCE_ID>& init(Severity maxSeverity, OutputStream outputStream)\par
00019     \{\par
00020         {\cf19 return} init<Formatter, PLOG_DEFAULT_INSTANCE_ID>(maxSeverity, outputStream);\par
00021     \}\par
00022 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Initializers/RollingFileInitializer.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Initializers/RollingFileInitializer.h}
{\xe \v src/include/plog/Initializers/RollingFileInitializer.h}
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/RollingFileAppender.h>}\par
{\f2 #include <plog/Formatters/TxtFormatter.h>}\par
{\f2 #include <plog/Formatters/CsvFormatter.h>}\par
{\f2 #include <plog/Init.h>}\par
{\f2 #include <cstring>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Formatter} , {\b int} instanceId> {\b PLOG_LINKAGE_HIDDEN} {\b Logger}< {\b instanceId} > & {\b plog::init} ({\b Severity} {\b maxSeverity}, {\b const} {\b util::nchar} *{\b fileName}, {\b size_t} {\b maxFileSize}=0, {\b int} {\b maxFiles}=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Formatter} > {\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & {\b plog::init} ({\b Severity} {\b maxSeverity}, {\b const} {\b util::nchar} *{\b fileName}, {\b size_t} {\b maxFileSize}=0, {\b int} {\b maxFiles}=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b int} instanceId> {\b Logger}< {\b instanceId} > & {\b plog::init} ({\b Severity} {\b maxSeverity}, {\b const} {\b util::nchar} *{\b fileName}, {\b size_t} {\b maxFileSize}=0, {\b int} {\b maxFiles}=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > & {\b plog::init} ({\b Severity} {\b maxSeverity}, {\b const} {\b util::nchar} *{\b fileName}, {\b size_t} {\b maxFileSize}=0, {\b int} {\b maxFiles}=0)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RollingFileInitializer.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Initializers/RollingFileInitializer.h}
{\xe \v src/include/plog/Initializers/RollingFileInitializer.h}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/RollingFileAppender.h>}\par
00003 {\cf21 #include <plog/Formatters/TxtFormatter.h>}\par
00004 {\cf21 #include <plog/Formatters/CsvFormatter.h>}\par
00005 {\cf21 #include <plog/Init.h>}\par
00006 {\cf21 #include <cstring>}\par
00007 \par
00008 {\cf17 namespace }plog\par
00009 \{\par
00011     {\cf20 // RollingFileAppender with any Formatter}\par
00012 \par
00013     {\cf17 template}<{\cf17 class} Formatter, {\cf18 int} instanceId>\par
00014     PLOG_LINKAGE_HIDDEN {\cf17 inline} Logger<instanceId>& init(Severity maxSeverity, {\cf17 const} util::nchar* fileName, {\cf18 size_t} maxFileSize = 0, {\cf18 int} maxFiles = 0)\par
00015     \{\par
00016         {\cf17 static} RollingFileAppender<Formatter> rollingFileAppender(fileName, maxFileSize, maxFiles);\par
00017         {\cf19 return} init<instanceId>(maxSeverity, &rollingFileAppender);\par
00018     \}\par
00019 \par
00020     {\cf17 template}<{\cf17 class} Formatter>\par
00021     {\cf17 inline} Logger<PLOG_DEFAULT_INSTANCE_ID>& init(Severity maxSeverity, {\cf17 const} util::nchar* fileName, {\cf18 size_t} maxFileSize = 0, {\cf18 int} maxFiles = 0)\par
00022     \{\par
00023         {\cf19 return} init<Formatter, PLOG_DEFAULT_INSTANCE_ID>(maxSeverity, fileName, maxFileSize, maxFiles);\par
00024     \}\par
00025 \par
00027     {\cf20 // RollingFileAppender with TXT/CSV chosen by file extension}\par
00028 \par
00029     {\cf17 namespace}\par
00030     \{\par
00031         {\cf17 inline} {\cf18 bool} isCsv({\cf17 const} util::nchar* fileName)\par
00032         \{\par
00033             {\cf17 const} util::nchar* dot = util::findExtensionDot(fileName);\par
00034 {\cf21 #if PLOG_CHAR_IS_UTF8}\par
00035             {\cf19 return} dot && 0 == std::strcmp(dot, {\cf22 ".csv"});\par
00036 {\cf21 #else}\par
00037             {\cf19 return} dot && 0 == std::wcscmp(dot, L{\cf22 ".csv"});\par
00038 {\cf21 #endif}\par
00039         \}\par
00040     \}\par
00041 \par
00042     {\cf17 template}<{\cf18 int} instanceId>\par
00043     {\cf17 inline} Logger<instanceId>& init(Severity maxSeverity, {\cf17 const} util::nchar* fileName, {\cf18 size_t} maxFileSize = 0, {\cf18 int} maxFiles = 0)\par
00044     \{\par
00045         {\cf19 return} isCsv(fileName) ? init<CsvFormatter, instanceId>(maxSeverity, fileName, maxFileSize, maxFiles) : init<TxtFormatter, instanceId>(maxSeverity, fileName, maxFileSize, maxFiles);\par
00046     \}\par
00047 \par
00048     {\cf17 inline} Logger<PLOG_DEFAULT_INSTANCE_ID>& init(Severity maxSeverity, {\cf17 const} util::nchar* fileName, {\cf18 size_t} maxFileSize = 0, {\cf18 int} maxFiles = 0)\par
00049     \{\par
00050         {\cf19 return} init<PLOG_DEFAULT_INSTANCE_ID>(maxSeverity, fileName, maxFileSize, maxFiles);\par
00051     \}\par
00052 \par
00054     {\cf20 // CHAR variants for Windows}\par
00055 \par
00056 {\cf21 #if defined(_WIN32) && !PLOG_CHAR_IS_UTF8}\par
00057     {\cf17 template}<{\cf17 class} Formatter, {\cf18 int} instanceId>\par
00058     {\cf17 inline} Logger<instanceId>& init(Severity maxSeverity, {\cf17 const} {\cf18 char}* fileName, {\cf18 size_t} maxFileSize = 0, {\cf18 int} maxFiles = 0)\par
00059     \{\par
00060         {\cf19 return} init<Formatter, instanceId>(maxSeverity, util::toWide(fileName).c_str(), maxFileSize, maxFiles);\par
00061     \}\par
00062 \par
00063     {\cf17 template}<{\cf17 class} Formatter>\par
00064     {\cf17 inline} Logger<PLOG_DEFAULT_INSTANCE_ID>& init(Severity maxSeverity, {\cf17 const} {\cf18 char}* fileName, {\cf18 size_t} maxFileSize = 0, {\cf18 int} maxFiles = 0)\par
00065     \{\par
00066         {\cf19 return} init<Formatter, PLOG_DEFAULT_INSTANCE_ID>(maxSeverity, fileName, maxFileSize, maxFiles);\par
00067     \}\par
00068 \par
00069     {\cf17 template}<{\cf18 int} instanceId>\par
00070     {\cf17 inline} Logger<instanceId>& init(Severity maxSeverity, {\cf17 const} {\cf18 char}* fileName, {\cf18 size_t} maxFileSize = 0, {\cf18 int} maxFiles = 0)\par
00071     \{\par
00072         {\cf19 return} init<instanceId>(maxSeverity, util::toWide(fileName).c_str(), maxFileSize, maxFiles);\par
00073     \}\par
00074 \par
00075     {\cf17 inline} Logger<PLOG_DEFAULT_INSTANCE_ID>& init(Severity maxSeverity, {\cf17 const} {\cf18 char}* fileName, {\cf18 size_t} maxFileSize = 0, {\cf18 int} maxFiles = 0)\par
00076     \{\par
00077         {\cf19 return} init<PLOG_DEFAULT_INSTANCE_ID>(maxSeverity, fileName, maxFileSize, maxFiles);\par
00078     \}\par
00079 {\cf21 #endif}\par
00080 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Log.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Log.h}
{\xe \v src/include/plog/Log.h}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Logger.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_GET_THIS}()\~ reinterpret_cast<void*>(0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_GET_FUNC}()\~ __PRETTY_FUNCTION__\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_GET_FILE}()\~ ""\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IF_PLOG_}(instanceId,  severity)\~ if (!{\b plog::get}<instanceId>() || !{\b plog::get}<instanceId>()->checkSeverity(severity)) \{;\} else\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IF_PLOG}(severity)\~ {\b IF_PLOG_}({\b PLOG_DEFAULT_INSTANCE_ID}, severity)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_}(instanceId,  severity)\~ {\b IF_PLOG_}(instanceId, severity) (*{\b plog::get}<instanceId>()) += {\b plog::Record}(severity, {\b PLOG_GET_FUNC}(), __LINE__, {\b PLOG_GET_FILE}(), {\b PLOG_GET_THIS}(), instanceId).ref()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG}(severity)\~ {\b PLOG_}({\b PLOG_DEFAULT_INSTANCE_ID}, severity)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_VERBOSE}\~ {\b PLOG}({\b plog::verbose})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_DEBUG}\~ {\b PLOG}({\b plog::debug})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_INFO}\~ {\b PLOG}({\b plog::info})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_WARNING}\~ {\b PLOG}({\b plog::warning})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_ERROR}\~ {\b PLOG}({\b plog::error})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_FATAL}\~ {\b PLOG}({\b plog::fatal})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_NONE}\~ {\b PLOG}({\b plog::none})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_VERBOSE_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::verbose})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_DEBUG_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::debug})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_INFO_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::info})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_WARNING_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::warning})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_ERROR_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::error})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_FATAL_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::fatal})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_NONE_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::none})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGV}\~ {\b PLOG_VERBOSE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGD}\~ {\b PLOG_DEBUG}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGI}\~ {\b PLOG_INFO}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGW}\~ {\b PLOG_WARNING}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGE}\~ {\b PLOG_ERROR}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGF}\~ {\b PLOG_FATAL}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGN}\~ {\b PLOG_NONE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGV_}(instanceId)\~ {\b PLOG_VERBOSE_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGD_}(instanceId)\~ {\b PLOG_DEBUG_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGI_}(instanceId)\~ {\b PLOG_INFO_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGW_}(instanceId)\~ {\b PLOG_WARNING_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGE_}(instanceId)\~ {\b PLOG_ERROR_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGF_}(instanceId)\~ {\b PLOG_FATAL_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGN_}(instanceId)\~ {\b PLOG_NONE_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IF_}(instanceId,  severity,  condition)\~ if (!(condition)) \{;\} else {\b PLOG_}(instanceId, severity)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_IF}(severity,  condition)\~ {\b PLOG_IF_}({\b PLOG_DEFAULT_INSTANCE_ID}, severity, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_VERBOSE_IF}(condition)\~ {\b PLOG_IF}({\b plog::verbose}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_DEBUG_IF}(condition)\~ {\b PLOG_IF}({\b plog::debug}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_INFO_IF}(condition)\~ {\b PLOG_IF}({\b plog::info}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_WARNING_IF}(condition)\~ {\b PLOG_IF}({\b plog::warning}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_ERROR_IF}(condition)\~ {\b PLOG_IF}({\b plog::error}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_FATAL_IF}(condition)\~ {\b PLOG_IF}({\b plog::fatal}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_NONE_IF}(condition)\~ {\b PLOG_IF}({\b plog::none}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_VERBOSE_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::verbose}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_DEBUG_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::debug}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_INFO_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::info}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_WARNING_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::warning}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_ERROR_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::error}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_FATAL_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::fatal}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_NONE_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::none}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGV_IF}(condition)\~ {\b PLOG_VERBOSE_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGD_IF}(condition)\~ {\b PLOG_DEBUG_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGI_IF}(condition)\~ {\b PLOG_INFO_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGW_IF}(condition)\~ {\b PLOG_WARNING_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGE_IF}(condition)\~ {\b PLOG_ERROR_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGF_IF}(condition)\~ {\b PLOG_FATAL_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGN_IF}(condition)\~ {\b PLOG_NONE_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGV_IF_}(instanceId,  condition)\~ {\b PLOG_VERBOSE_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGD_IF_}(instanceId,  condition)\~ {\b PLOG_DEBUG_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGI_IF_}(instanceId,  condition)\~ {\b PLOG_INFO_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGW_IF_}(instanceId,  condition)\~ {\b PLOG_WARNING_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGE_IF_}(instanceId,  condition)\~ {\b PLOG_ERROR_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGF_IF_}(instanceId,  condition)\~ {\b PLOG_FATAL_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOGN_IF_}(instanceId,  condition)\~ {\b PLOG_NONE_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_}(instanceId,  severity)\~ {\b IF_PLOG_}(instanceId, severity) (*{\b plog::get}<instanceId>()) += {\b plog::Record}(severity, {\b PLOG_GET_FUNC}(), __LINE__, {\b PLOG_GET_FILE}(), {\b PLOG_GET_THIS}(), instanceId).ref()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG}(severity)\~ {\b PLOG_}({\b PLOG_DEFAULT_INSTANCE_ID}, severity)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_VERBOSE}\~ {\b PLOG}({\b plog::verbose})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_DEBUG}\~ {\b PLOG}({\b plog::debug})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_INFO}\~ {\b PLOG}({\b plog::info})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_WARNING}\~ {\b PLOG}({\b plog::warning})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_ERROR}\~ {\b PLOG}({\b plog::error})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_FATAL}\~ {\b PLOG}({\b plog::fatal})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_NONE}\~ {\b PLOG}({\b plog::none})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_VERBOSE_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::verbose})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_DEBUG_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::debug})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_INFO_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::info})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_WARNING_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::warning})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_ERROR_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::error})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_FATAL_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::fatal})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_NONE_}(instanceId)\~ {\b PLOG_}(instanceId, {\b plog::none})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGV}\~ {\b PLOG_VERBOSE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGD}\~ {\b PLOG_DEBUG}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGI}\~ {\b PLOG_INFO}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGW}\~ {\b PLOG_WARNING}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGE}\~ {\b PLOG_ERROR}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGF}\~ {\b PLOG_FATAL}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGN}\~ {\b PLOG_NONE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGV_}(instanceId)\~ {\b PLOG_VERBOSE_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGD_}(instanceId)\~ {\b PLOG_DEBUG_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGI_}(instanceId)\~ {\b PLOG_INFO_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGW_}(instanceId)\~ {\b PLOG_WARNING_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGE_}(instanceId)\~ {\b PLOG_ERROR_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGF_}(instanceId)\~ {\b PLOG_FATAL_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGN_}(instanceId)\~ {\b PLOG_NONE_}(instanceId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_IF_}(instanceId,  severity,  condition)\~ if (!(condition)) \{;\} else {\b PLOG_}(instanceId, severity)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_IF}(severity,  condition)\~ {\b PLOG_IF_}({\b PLOG_DEFAULT_INSTANCE_ID}, severity, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_VERBOSE_IF}(condition)\~ {\b PLOG_IF}({\b plog::verbose}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_DEBUG_IF}(condition)\~ {\b PLOG_IF}({\b plog::debug}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_INFO_IF}(condition)\~ {\b PLOG_IF}({\b plog::info}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_WARNING_IF}(condition)\~ {\b PLOG_IF}({\b plog::warning}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_ERROR_IF}(condition)\~ {\b PLOG_IF}({\b plog::error}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_FATAL_IF}(condition)\~ {\b PLOG_IF}({\b plog::fatal}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_NONE_IF}(condition)\~ {\b PLOG_IF}({\b plog::none}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_VERBOSE_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::verbose}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_DEBUG_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::debug}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_INFO_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::info}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_WARNING_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::warning}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_ERROR_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::error}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_FATAL_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::fatal}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOG_NONE_IF_}(instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::none}, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGV_IF}(condition)\~ {\b PLOG_VERBOSE_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGD_IF}(condition)\~ {\b PLOG_DEBUG_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGI_IF}(condition)\~ {\b PLOG_INFO_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGW_IF}(condition)\~ {\b PLOG_WARNING_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGE_IF}(condition)\~ {\b PLOG_ERROR_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGF_IF}(condition)\~ {\b PLOG_FATAL_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGN_IF}(condition)\~ {\b PLOG_NONE_IF}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGV_IF_}(instanceId,  condition)\~ {\b PLOG_VERBOSE_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGD_IF_}(instanceId,  condition)\~ {\b PLOG_DEBUG_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGI_IF_}(instanceId,  condition)\~ {\b PLOG_INFO_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGW_IF_}(instanceId,  condition)\~ {\b PLOG_WARNING_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGE_IF_}(instanceId,  condition)\~ {\b PLOG_ERROR_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGF_IF_}(instanceId,  condition)\~ {\b PLOG_FATAL_IF_}(instanceId, condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOGN_IF_}(instanceId,  condition)\~ {\b PLOG_NONE_IF_}(instanceId, condition)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v IF_PLOG\:Log.h}
{\xe \v Log.h\:IF_PLOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IF_PLOG( severity)\~ {\b IF_PLOG_}({\b PLOG_DEFAULT_INSTANCE_ID}, severity)}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b Log.h}.}\par
}
{\xe \v IF_PLOG_\:Log.h}
{\xe \v Log.h\:IF_PLOG_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IF_PLOG_( instanceId,  severity)\~ if (!{\b plog::get}<instanceId>() || !{\b plog::get}<instanceId>()->checkSeverity(severity)) \{;\} else}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b Log.h}.}\par
}
{\xe \v LOG\:Log.h}
{\xe \v Log.h\:LOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG( severity)\~ {\b PLOG_}({\b PLOG_DEFAULT_INSTANCE_ID}, severity)}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 131} of file {\b Log.h}.}\par
}
{\xe \v LOG_\:Log.h}
{\xe \v Log.h\:LOG_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_( instanceId,  severity)\~ {\b IF_PLOG_}(instanceId, severity) (*{\b plog::get}<instanceId>()) += {\b plog::Record}(severity, {\b PLOG_GET_FUNC}(), __LINE__, {\b PLOG_GET_FILE}(), {\b PLOG_GET_THIS}(), instanceId).ref()}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 130} of file {\b Log.h}.}\par
}
{\xe \v LOG_DEBUG\:Log.h}
{\xe \v Log.h\:LOG_DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_DEBUG\~ {\b PLOG}({\b plog::debug})}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 134} of file {\b Log.h}.}\par
}
{\xe \v LOG_DEBUG_\:Log.h}
{\xe \v Log.h\:LOG_DEBUG_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_DEBUG_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::debug})}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 142} of file {\b Log.h}.}\par
}
{\xe \v LOG_DEBUG_IF\:Log.h}
{\xe \v Log.h\:LOG_DEBUG_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_DEBUG_IF( condition)\~ {\b PLOG_IF}({\b plog::debug}, condition)}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 172} of file {\b Log.h}.}\par
}
{\xe \v LOG_DEBUG_IF_\:Log.h}
{\xe \v Log.h\:LOG_DEBUG_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_DEBUG_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::debug}, condition)}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 180} of file {\b Log.h}.}\par
}
{\xe \v LOG_ERROR\:Log.h}
{\xe \v Log.h\:LOG_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_ERROR\~ {\b PLOG}({\b plog::error})}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 137} of file {\b Log.h}.}\par
}
{\xe \v LOG_ERROR_\:Log.h}
{\xe \v Log.h\:LOG_ERROR_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_ERROR_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::error})}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 145} of file {\b Log.h}.}\par
}
{\xe \v LOG_ERROR_IF\:Log.h}
{\xe \v Log.h\:LOG_ERROR_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_ERROR_IF( condition)\~ {\b PLOG_IF}({\b plog::error}, condition)}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 175} of file {\b Log.h}.}\par
}
{\xe \v LOG_ERROR_IF_\:Log.h}
{\xe \v Log.h\:LOG_ERROR_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_ERROR_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::error}, condition)}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 183} of file {\b Log.h}.}\par
}
{\xe \v LOG_FATAL\:Log.h}
{\xe \v Log.h\:LOG_FATAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_FATAL\~ {\b PLOG}({\b plog::fatal})}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 138} of file {\b Log.h}.}\par
}
{\xe \v LOG_FATAL_\:Log.h}
{\xe \v Log.h\:LOG_FATAL_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_FATAL_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::fatal})}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 146} of file {\b Log.h}.}\par
}
{\xe \v LOG_FATAL_IF\:Log.h}
{\xe \v Log.h\:LOG_FATAL_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_FATAL_IF( condition)\~ {\b PLOG_IF}({\b plog::fatal}, condition)}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 176} of file {\b Log.h}.}\par
}
{\xe \v LOG_FATAL_IF_\:Log.h}
{\xe \v Log.h\:LOG_FATAL_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_FATAL_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::fatal}, condition)}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 184} of file {\b Log.h}.}\par
}
{\xe \v LOG_IF\:Log.h}
{\xe \v Log.h\:LOG_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_IF( severity,  condition)\~ {\b PLOG_IF_}({\b PLOG_DEFAULT_INSTANCE_ID}, severity, condition)}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 169} of file {\b Log.h}.}\par
}
{\xe \v LOG_IF_\:Log.h}
{\xe \v Log.h\:LOG_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_IF_( instanceId,  severity,  condition)\~ if (!(condition)) \{;\} else {\b PLOG_}(instanceId, severity)}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 168} of file {\b Log.h}.}\par
}
{\xe \v LOG_INFO\:Log.h}
{\xe \v Log.h\:LOG_INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_INFO\~ {\b PLOG}({\b plog::info})}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 135} of file {\b Log.h}.}\par
}
{\xe \v LOG_INFO_\:Log.h}
{\xe \v Log.h\:LOG_INFO_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_INFO_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::info})}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 143} of file {\b Log.h}.}\par
}
{\xe \v LOG_INFO_IF\:Log.h}
{\xe \v Log.h\:LOG_INFO_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_INFO_IF( condition)\~ {\b PLOG_IF}({\b plog::info}, condition)}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 173} of file {\b Log.h}.}\par
}
{\xe \v LOG_INFO_IF_\:Log.h}
{\xe \v Log.h\:LOG_INFO_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_INFO_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::info}, condition)}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 181} of file {\b Log.h}.}\par
}
{\xe \v LOG_NONE\:Log.h}
{\xe \v Log.h\:LOG_NONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_NONE\~ {\b PLOG}({\b plog::none})}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 139} of file {\b Log.h}.}\par
}
{\xe \v LOG_NONE_\:Log.h}
{\xe \v Log.h\:LOG_NONE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_NONE_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::none})}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 147} of file {\b Log.h}.}\par
}
{\xe \v LOG_NONE_IF\:Log.h}
{\xe \v Log.h\:LOG_NONE_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_NONE_IF( condition)\~ {\b PLOG_IF}({\b plog::none}, condition)}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 177} of file {\b Log.h}.}\par
}
{\xe \v LOG_NONE_IF_\:Log.h}
{\xe \v Log.h\:LOG_NONE_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_NONE_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::none}, condition)}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 185} of file {\b Log.h}.}\par
}
{\xe \v LOG_VERBOSE\:Log.h}
{\xe \v Log.h\:LOG_VERBOSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_VERBOSE\~ {\b PLOG}({\b plog::verbose})}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 133} of file {\b Log.h}.}\par
}
{\xe \v LOG_VERBOSE_\:Log.h}
{\xe \v Log.h\:LOG_VERBOSE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_VERBOSE_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::verbose})}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 141} of file {\b Log.h}.}\par
}
{\xe \v LOG_VERBOSE_IF\:Log.h}
{\xe \v Log.h\:LOG_VERBOSE_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_VERBOSE_IF( condition)\~ {\b PLOG_IF}({\b plog::verbose}, condition)}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 171} of file {\b Log.h}.}\par
}
{\xe \v LOG_VERBOSE_IF_\:Log.h}
{\xe \v Log.h\:LOG_VERBOSE_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_VERBOSE_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::verbose}, condition)}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 179} of file {\b Log.h}.}\par
}
{\xe \v LOG_WARNING\:Log.h}
{\xe \v Log.h\:LOG_WARNING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_WARNING\~ {\b PLOG}({\b plog::warning})}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 136} of file {\b Log.h}.}\par
}
{\xe \v LOG_WARNING_\:Log.h}
{\xe \v Log.h\:LOG_WARNING_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_WARNING_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::warning})}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 144} of file {\b Log.h}.}\par
}
{\xe \v LOG_WARNING_IF\:Log.h}
{\xe \v Log.h\:LOG_WARNING_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_WARNING_IF( condition)\~ {\b PLOG_IF}({\b plog::warning}, condition)}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 174} of file {\b Log.h}.}\par
}
{\xe \v LOG_WARNING_IF_\:Log.h}
{\xe \v Log.h\:LOG_WARNING_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOG_WARNING_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::warning}, condition)}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 182} of file {\b Log.h}.}\par
}
{\xe \v LOGD\:Log.h}
{\xe \v Log.h\:LOGD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGD\~ {\b PLOG_DEBUG}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 150} of file {\b Log.h}.}\par
}
{\xe \v LOGD_\:Log.h}
{\xe \v Log.h\:LOGD_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGD_( instanceId)\~ {\b PLOG_DEBUG_}(instanceId)}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 158} of file {\b Log.h}.}\par
}
{\xe \v LOGD_IF\:Log.h}
{\xe \v Log.h\:LOGD_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGD_IF( condition)\~ {\b PLOG_DEBUG_IF}(condition)}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 188} of file {\b Log.h}.}\par
}
{\xe \v LOGD_IF_\:Log.h}
{\xe \v Log.h\:LOGD_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGD_IF_( instanceId,  condition)\~ {\b PLOG_DEBUG_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 196} of file {\b Log.h}.}\par
}
{\xe \v LOGE\:Log.h}
{\xe \v Log.h\:LOGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGE\~ {\b PLOG_ERROR}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 153} of file {\b Log.h}.}\par
}
{\xe \v LOGE_\:Log.h}
{\xe \v Log.h\:LOGE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGE_( instanceId)\~ {\b PLOG_ERROR_}(instanceId)}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 161} of file {\b Log.h}.}\par
}
{\xe \v LOGE_IF\:Log.h}
{\xe \v Log.h\:LOGE_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGE_IF( condition)\~ {\b PLOG_ERROR_IF}(condition)}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 191} of file {\b Log.h}.}\par
}
{\xe \v LOGE_IF_\:Log.h}
{\xe \v Log.h\:LOGE_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGE_IF_( instanceId,  condition)\~ {\b PLOG_ERROR_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 199} of file {\b Log.h}.}\par
}
{\xe \v LOGF\:Log.h}
{\xe \v Log.h\:LOGF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGF\~ {\b PLOG_FATAL}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 154} of file {\b Log.h}.}\par
}
{\xe \v LOGF_\:Log.h}
{\xe \v Log.h\:LOGF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGF_( instanceId)\~ {\b PLOG_FATAL_}(instanceId)}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 162} of file {\b Log.h}.}\par
}
{\xe \v LOGF_IF\:Log.h}
{\xe \v Log.h\:LOGF_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGF_IF( condition)\~ {\b PLOG_FATAL_IF}(condition)}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 192} of file {\b Log.h}.}\par
}
{\xe \v LOGF_IF_\:Log.h}
{\xe \v Log.h\:LOGF_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGF_IF_( instanceId,  condition)\~ {\b PLOG_FATAL_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 200} of file {\b Log.h}.}\par
}
{\xe \v LOGI\:Log.h}
{\xe \v Log.h\:LOGI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGI\~ {\b PLOG_INFO}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 151} of file {\b Log.h}.}\par
}
{\xe \v LOGI_\:Log.h}
{\xe \v Log.h\:LOGI_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGI_( instanceId)\~ {\b PLOG_INFO_}(instanceId)}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 159} of file {\b Log.h}.}\par
}
{\xe \v LOGI_IF\:Log.h}
{\xe \v Log.h\:LOGI_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGI_IF( condition)\~ {\b PLOG_INFO_IF}(condition)}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 189} of file {\b Log.h}.}\par
}
{\xe \v LOGI_IF_\:Log.h}
{\xe \v Log.h\:LOGI_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGI_IF_( instanceId,  condition)\~ {\b PLOG_INFO_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 197} of file {\b Log.h}.}\par
}
{\xe \v LOGN\:Log.h}
{\xe \v Log.h\:LOGN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGN\~ {\b PLOG_NONE}}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 155} of file {\b Log.h}.}\par
}
{\xe \v LOGN_\:Log.h}
{\xe \v Log.h\:LOGN_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGN_( instanceId)\~ {\b PLOG_NONE_}(instanceId)}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 163} of file {\b Log.h}.}\par
}
{\xe \v LOGN_IF\:Log.h}
{\xe \v Log.h\:LOGN_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGN_IF( condition)\~ {\b PLOG_NONE_IF}(condition)}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 193} of file {\b Log.h}.}\par
}
{\xe \v LOGN_IF_\:Log.h}
{\xe \v Log.h\:LOGN_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGN_IF_( instanceId,  condition)\~ {\b PLOG_NONE_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 201} of file {\b Log.h}.}\par
}
{\xe \v LOGV\:Log.h}
{\xe \v Log.h\:LOGV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGV\~ {\b PLOG_VERBOSE}}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 149} of file {\b Log.h}.}\par
}
{\xe \v LOGV_\:Log.h}
{\xe \v Log.h\:LOGV_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGV_( instanceId)\~ {\b PLOG_VERBOSE_}(instanceId)}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 157} of file {\b Log.h}.}\par
}
{\xe \v LOGV_IF\:Log.h}
{\xe \v Log.h\:LOGV_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGV_IF( condition)\~ {\b PLOG_VERBOSE_IF}(condition)}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 187} of file {\b Log.h}.}\par
}
{\xe \v LOGV_IF_\:Log.h}
{\xe \v Log.h\:LOGV_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGV_IF_( instanceId,  condition)\~ {\b PLOG_VERBOSE_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 195} of file {\b Log.h}.}\par
}
{\xe \v LOGW\:Log.h}
{\xe \v Log.h\:LOGW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGW\~ {\b PLOG_WARNING}}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 152} of file {\b Log.h}.}\par
}
{\xe \v LOGW_\:Log.h}
{\xe \v Log.h\:LOGW_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGW_( instanceId)\~ {\b PLOG_WARNING_}(instanceId)}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 160} of file {\b Log.h}.}\par
}
{\xe \v LOGW_IF\:Log.h}
{\xe \v Log.h\:LOGW_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGW_IF( condition)\~ {\b PLOG_WARNING_IF}(condition)}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 190} of file {\b Log.h}.}\par
}
{\xe \v LOGW_IF_\:Log.h}
{\xe \v Log.h\:LOGW_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOGW_IF_( instanceId,  condition)\~ {\b PLOG_WARNING_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 198} of file {\b Log.h}.}\par
}
{\xe \v PLOG\:Log.h}
{\xe \v Log.h\:PLOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG( severity)\~ {\b PLOG_}({\b PLOG_DEFAULT_INSTANCE_ID}, severity)}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b Log.h}.}\par
}
{\xe \v PLOG_\:Log.h}
{\xe \v Log.h\:PLOG_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_( instanceId,  severity)\~ {\b IF_PLOG_}(instanceId, severity) (*{\b plog::get}<instanceId>()) += {\b plog::Record}(severity, {\b PLOG_GET_FUNC}(), __LINE__, {\b PLOG_GET_FILE}(), {\b PLOG_GET_THIS}(), instanceId).ref()}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b Log.h}.}\par
}
{\xe \v PLOG_DEBUG\:Log.h}
{\xe \v Log.h\:PLOG_DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_DEBUG\~ {\b PLOG}({\b plog::debug})}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b Log.h}.}\par
}
{\xe \v PLOG_DEBUG_\:Log.h}
{\xe \v Log.h\:PLOG_DEBUG_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_DEBUG_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::debug})}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 62} of file {\b Log.h}.}\par
}
{\xe \v PLOG_DEBUG_IF\:Log.h}
{\xe \v Log.h\:PLOG_DEBUG_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_DEBUG_IF( condition)\~ {\b PLOG_IF}({\b plog::debug}, condition)}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 92} of file {\b Log.h}.}\par
}
{\xe \v PLOG_DEBUG_IF_\:Log.h}
{\xe \v Log.h\:PLOG_DEBUG_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_DEBUG_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::debug}, condition)}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 100} of file {\b Log.h}.}\par
}
{\xe \v PLOG_ERROR\:Log.h}
{\xe \v Log.h\:PLOG_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_ERROR\~ {\b PLOG}({\b plog::error})}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b Log.h}.}\par
}
{\xe \v PLOG_ERROR_\:Log.h}
{\xe \v Log.h\:PLOG_ERROR_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_ERROR_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::error})}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b Log.h}.}\par
}
{\xe \v PLOG_ERROR_IF\:Log.h}
{\xe \v Log.h\:PLOG_ERROR_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_ERROR_IF( condition)\~ {\b PLOG_IF}({\b plog::error}, condition)}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 95} of file {\b Log.h}.}\par
}
{\xe \v PLOG_ERROR_IF_\:Log.h}
{\xe \v Log.h\:PLOG_ERROR_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_ERROR_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::error}, condition)}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 103} of file {\b Log.h}.}\par
}
{\xe \v PLOG_FATAL\:Log.h}
{\xe \v Log.h\:PLOG_FATAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_FATAL\~ {\b PLOG}({\b plog::fatal})}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b Log.h}.}\par
}
{\xe \v PLOG_FATAL_\:Log.h}
{\xe \v Log.h\:PLOG_FATAL_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_FATAL_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::fatal})}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b Log.h}.}\par
}
{\xe \v PLOG_FATAL_IF\:Log.h}
{\xe \v Log.h\:PLOG_FATAL_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_FATAL_IF( condition)\~ {\b PLOG_IF}({\b plog::fatal}, condition)}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 96} of file {\b Log.h}.}\par
}
{\xe \v PLOG_FATAL_IF_\:Log.h}
{\xe \v Log.h\:PLOG_FATAL_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_FATAL_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::fatal}, condition)}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 104} of file {\b Log.h}.}\par
}
{\xe \v PLOG_GET_FILE\:Log.h}
{\xe \v Log.h\:PLOG_GET_FILE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_GET_FILE()\~ ""}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b Log.h}.}\par
}
{\xe \v PLOG_GET_FUNC\:Log.h}
{\xe \v Log.h\:PLOG_GET_FUNC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_GET_FUNC()\~ __PRETTY_FUNCTION__}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b Log.h}.}\par
}
{\xe \v PLOG_GET_THIS\:Log.h}
{\xe \v Log.h\:PLOG_GET_THIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_GET_THIS()\~ reinterpret_cast<void*>(0)}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b Log.h}.}\par
}
{\xe \v PLOG_IF\:Log.h}
{\xe \v Log.h\:PLOG_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IF( severity,  condition)\~ {\b PLOG_IF_}({\b PLOG_DEFAULT_INSTANCE_ID}, severity, condition)}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 89} of file {\b Log.h}.}\par
}
{\xe \v PLOG_IF_\:Log.h}
{\xe \v Log.h\:PLOG_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_IF_( instanceId,  severity,  condition)\~ if (!(condition)) \{;\} else {\b PLOG_}(instanceId, severity)}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 88} of file {\b Log.h}.}\par
}
{\xe \v PLOG_INFO\:Log.h}
{\xe \v Log.h\:PLOG_INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_INFO\~ {\b PLOG}({\b plog::info})}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 55} of file {\b Log.h}.}\par
}
{\xe \v PLOG_INFO_\:Log.h}
{\xe \v Log.h\:PLOG_INFO_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_INFO_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::info})}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 63} of file {\b Log.h}.}\par
}
{\xe \v PLOG_INFO_IF\:Log.h}
{\xe \v Log.h\:PLOG_INFO_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_INFO_IF( condition)\~ {\b PLOG_IF}({\b plog::info}, condition)}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 93} of file {\b Log.h}.}\par
}
{\xe \v PLOG_INFO_IF_\:Log.h}
{\xe \v Log.h\:PLOG_INFO_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_INFO_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::info}, condition)}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 101} of file {\b Log.h}.}\par
}
{\xe \v PLOG_NONE\:Log.h}
{\xe \v Log.h\:PLOG_NONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_NONE\~ {\b PLOG}({\b plog::none})}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 59} of file {\b Log.h}.}\par
}
{\xe \v PLOG_NONE_\:Log.h}
{\xe \v Log.h\:PLOG_NONE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_NONE_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::none})}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 67} of file {\b Log.h}.}\par
}
{\xe \v PLOG_NONE_IF\:Log.h}
{\xe \v Log.h\:PLOG_NONE_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_NONE_IF( condition)\~ {\b PLOG_IF}({\b plog::none}, condition)}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 97} of file {\b Log.h}.}\par
}
{\xe \v PLOG_NONE_IF_\:Log.h}
{\xe \v Log.h\:PLOG_NONE_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_NONE_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::none}, condition)}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 105} of file {\b Log.h}.}\par
}
{\xe \v PLOG_VERBOSE\:Log.h}
{\xe \v Log.h\:PLOG_VERBOSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_VERBOSE\~ {\b PLOG}({\b plog::verbose})}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b Log.h}.}\par
}
{\xe \v PLOG_VERBOSE_\:Log.h}
{\xe \v Log.h\:PLOG_VERBOSE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_VERBOSE_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::verbose})}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 61} of file {\b Log.h}.}\par
}
{\xe \v PLOG_VERBOSE_IF\:Log.h}
{\xe \v Log.h\:PLOG_VERBOSE_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_VERBOSE_IF( condition)\~ {\b PLOG_IF}({\b plog::verbose}, condition)}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 91} of file {\b Log.h}.}\par
}
{\xe \v PLOG_VERBOSE_IF_\:Log.h}
{\xe \v Log.h\:PLOG_VERBOSE_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_VERBOSE_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::verbose}, condition)}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 99} of file {\b Log.h}.}\par
}
{\xe \v PLOG_WARNING\:Log.h}
{\xe \v Log.h\:PLOG_WARNING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_WARNING\~ {\b PLOG}({\b plog::warning})}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b Log.h}.}\par
}
{\xe \v PLOG_WARNING_\:Log.h}
{\xe \v Log.h\:PLOG_WARNING_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_WARNING_( instanceId)\~ {\b PLOG_}(instanceId, {\b plog::warning})}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 64} of file {\b Log.h}.}\par
}
{\xe \v PLOG_WARNING_IF\:Log.h}
{\xe \v Log.h\:PLOG_WARNING_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_WARNING_IF( condition)\~ {\b PLOG_IF}({\b plog::warning}, condition)}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 94} of file {\b Log.h}.}\par
}
{\xe \v PLOG_WARNING_IF_\:Log.h}
{\xe \v Log.h\:PLOG_WARNING_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_WARNING_IF_( instanceId,  condition)\~ {\b PLOG_IF_}(instanceId, {\b plog::warning}, condition)}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 102} of file {\b Log.h}.}\par
}
{\xe \v PLOGD\:Log.h}
{\xe \v Log.h\:PLOGD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGD\~ {\b PLOG_DEBUG}}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 70} of file {\b Log.h}.}\par
}
{\xe \v PLOGD_\:Log.h}
{\xe \v Log.h\:PLOGD_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGD_( instanceId)\~ {\b PLOG_DEBUG_}(instanceId)}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 78} of file {\b Log.h}.}\par
}
{\xe \v PLOGD_IF\:Log.h}
{\xe \v Log.h\:PLOGD_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGD_IF( condition)\~ {\b PLOG_DEBUG_IF}(condition)}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 108} of file {\b Log.h}.}\par
}
{\xe \v PLOGD_IF_\:Log.h}
{\xe \v Log.h\:PLOGD_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGD_IF_( instanceId,  condition)\~ {\b PLOG_DEBUG_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 116} of file {\b Log.h}.}\par
}
{\xe \v PLOGE\:Log.h}
{\xe \v Log.h\:PLOGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGE\~ {\b PLOG_ERROR}}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 73} of file {\b Log.h}.}\par
}
{\xe \v PLOGE_\:Log.h}
{\xe \v Log.h\:PLOGE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGE_( instanceId)\~ {\b PLOG_ERROR_}(instanceId)}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b Log.h}.}\par
}
{\xe \v PLOGE_IF\:Log.h}
{\xe \v Log.h\:PLOGE_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGE_IF( condition)\~ {\b PLOG_ERROR_IF}(condition)}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 111} of file {\b Log.h}.}\par
}
{\xe \v PLOGE_IF_\:Log.h}
{\xe \v Log.h\:PLOGE_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGE_IF_( instanceId,  condition)\~ {\b PLOG_ERROR_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 119} of file {\b Log.h}.}\par
}
{\xe \v PLOGF\:Log.h}
{\xe \v Log.h\:PLOGF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGF\~ {\b PLOG_FATAL}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b Log.h}.}\par
}
{\xe \v PLOGF_\:Log.h}
{\xe \v Log.h\:PLOGF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGF_( instanceId)\~ {\b PLOG_FATAL_}(instanceId)}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 82} of file {\b Log.h}.}\par
}
{\xe \v PLOGF_IF\:Log.h}
{\xe \v Log.h\:PLOGF_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGF_IF( condition)\~ {\b PLOG_FATAL_IF}(condition)}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 112} of file {\b Log.h}.}\par
}
{\xe \v PLOGF_IF_\:Log.h}
{\xe \v Log.h\:PLOGF_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGF_IF_( instanceId,  condition)\~ {\b PLOG_FATAL_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 120} of file {\b Log.h}.}\par
}
{\xe \v PLOGI\:Log.h}
{\xe \v Log.h\:PLOGI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGI\~ {\b PLOG_INFO}}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 71} of file {\b Log.h}.}\par
}
{\xe \v PLOGI_\:Log.h}
{\xe \v Log.h\:PLOGI_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGI_( instanceId)\~ {\b PLOG_INFO_}(instanceId)}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b Log.h}.}\par
}
{\xe \v PLOGI_IF\:Log.h}
{\xe \v Log.h\:PLOGI_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGI_IF( condition)\~ {\b PLOG_INFO_IF}(condition)}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 109} of file {\b Log.h}.}\par
}
{\xe \v PLOGI_IF_\:Log.h}
{\xe \v Log.h\:PLOGI_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGI_IF_( instanceId,  condition)\~ {\b PLOG_INFO_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 117} of file {\b Log.h}.}\par
}
{\xe \v PLOGN\:Log.h}
{\xe \v Log.h\:PLOGN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGN\~ {\b PLOG_NONE}}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b Log.h}.}\par
}
{\xe \v PLOGN_\:Log.h}
{\xe \v Log.h\:PLOGN_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGN_( instanceId)\~ {\b PLOG_NONE_}(instanceId)}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b Log.h}.}\par
}
{\xe \v PLOGN_IF\:Log.h}
{\xe \v Log.h\:PLOGN_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGN_IF( condition)\~ {\b PLOG_NONE_IF}(condition)}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 113} of file {\b Log.h}.}\par
}
{\xe \v PLOGN_IF_\:Log.h}
{\xe \v Log.h\:PLOGN_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGN_IF_( instanceId,  condition)\~ {\b PLOG_NONE_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 121} of file {\b Log.h}.}\par
}
{\xe \v PLOGV\:Log.h}
{\xe \v Log.h\:PLOGV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGV\~ {\b PLOG_VERBOSE}}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b Log.h}.}\par
}
{\xe \v PLOGV_\:Log.h}
{\xe \v Log.h\:PLOGV_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGV_( instanceId)\~ {\b PLOG_VERBOSE_}(instanceId)}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b Log.h}.}\par
}
{\xe \v PLOGV_IF\:Log.h}
{\xe \v Log.h\:PLOGV_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGV_IF( condition)\~ {\b PLOG_VERBOSE_IF}(condition)}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 107} of file {\b Log.h}.}\par
}
{\xe \v PLOGV_IF_\:Log.h}
{\xe \v Log.h\:PLOGV_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGV_IF_( instanceId,  condition)\~ {\b PLOG_VERBOSE_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 115} of file {\b Log.h}.}\par
}
{\xe \v PLOGW\:Log.h}
{\xe \v Log.h\:PLOGW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGW\~ {\b PLOG_WARNING}}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b Log.h}.}\par
}
{\xe \v PLOGW_\:Log.h}
{\xe \v Log.h\:PLOGW_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGW_( instanceId)\~ {\b PLOG_WARNING_}(instanceId)}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b Log.h}.}\par
}
{\xe \v PLOGW_IF\:Log.h}
{\xe \v Log.h\:PLOGW_IF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGW_IF( condition)\~ {\b PLOG_WARNING_IF}(condition)}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 110} of file {\b Log.h}.}\par
}
{\xe \v PLOGW_IF_\:Log.h}
{\xe \v Log.h\:PLOGW_IF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOGW_IF_( instanceId,  condition)\~ {\b PLOG_WARNING_IF_}(instanceId, condition)}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 118} of file {\b Log.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Log.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Log.h}
{\xe \v src/include/plog/Log.h}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00002 {\cf20 //  Plog - portable and simple log for C++}\par
00003 {\cf20 //  Documentation and sources: https://github.com/SergiusTheBest/plog}\par
00004 {\cf20 //  License: MIT, https://choosealicense.com/licenses/mit}\par
00005 \par
00006 {\cf21 #pragma once}\par
00007 {\cf21 #include <plog/Logger.h>}\par
00008 \par
00010 {\cf20 // Helper macros that get context info}\par
00011 \par
00012 {\cf21 #if defined(PLOG_ENABLE_GET_THIS) && defined(_MSC_VER) && _MSC_VER >= 1600 && !defined(__INTELLISENSE__) && !defined(__INTEL_COMPILER) && !defined(__llvm__) && !defined(__RESHARPER__) }{\cf20 // >= Visual Studio 2010, skip IntelliSense, Intel Compiler, Clang Code Model and ReSharper}\par
00013 {\cf21 #   define PLOG_GET_THIS()      __if_exists(this) \{ this \} __if_not_exists(this) \{ 0 \}}\par
00014 {\cf21 #else}\par
00015 {\cf21 #   define PLOG_GET_THIS()      reinterpret_cast<void*>(0)}\par
00016 {\cf21 #endif}\par
00017 \par
00018 {\cf21 #ifdef _MSC_VER}\par
00019 {\cf21 #   define PLOG_GET_FUNC()      __FUNCTION__}\par
00020 {\cf21 #elif defined(__BORLANDC__)}\par
00021 {\cf21 #   define PLOG_GET_FUNC()      __FUNC__}\par
00022 {\cf21 #else}\par
00023 {\cf21 #   define PLOG_GET_FUNC()      __PRETTY_FUNCTION__}\par
00024 {\cf21 #endif}\par
00025 \par
00026 {\cf21 #ifdef PLOG_CAPTURE_FILE}\par
00027 {\cf21 #   define PLOG_GET_FILE()      __FILE__}\par
00028 {\cf21 #else}\par
00029 {\cf21 #   define PLOG_GET_FILE()      ""}\par
00030 {\cf21 #endif}\par
00031 \par
00033 {\cf20 // Log severity level checker}\par
00034 \par
00035 {\cf21 #ifdef PLOG_DISABLE_LOGGING}\par
00036 {\cf21 #   ifdef _MSC_VER}\par
00037 {\cf21 #       define IF_PLOG_(instanceId, severity)  __pragma(warning(push)) __pragma(warning(disable:4127)) if (true) \{;\} else __pragma(warning(pop)) }{\cf20 // conditional expression is constant}\par
00038 {\cf21 #   else}\par
00039 {\cf21 #       define IF_PLOG_(instanceId, severity)   if (true) \{;\} else}\par
00040 {\cf21 #   endif}\par
00041 {\cf21 #else}\par
00042 {\cf21 #   define IF_PLOG_(instanceId, severity)   if (!plog::get<instanceId>() || !plog::get<instanceId>()->checkSeverity(severity)) \{;\} else}\par
00043 {\cf21 #endif}\par
00044 \par
00045 {\cf21 #define IF_PLOG(severity)                IF_PLOG_(PLOG_DEFAULT_INSTANCE_ID, severity)}\par
00046 \par
00048 {\cf20 // Main logging macros}\par
00049 \par
00050 {\cf21 #define PLOG_(instanceId, severity)      IF_PLOG_(instanceId, severity) (*plog::get<instanceId>()) += plog::Record(severity, PLOG_GET_FUNC(), __LINE__, PLOG_GET_FILE(), PLOG_GET_THIS(), instanceId).ref()}\par
00051 {\cf21 #define PLOG(severity)                   PLOG_(PLOG_DEFAULT_INSTANCE_ID, severity)}\par
00052 \par
00053 {\cf21 #define PLOG_VERBOSE                     PLOG(plog::verbose)}\par
00054 {\cf21 #define PLOG_DEBUG                       PLOG(plog::debug)}\par
00055 {\cf21 #define PLOG_INFO                        PLOG(plog::info)}\par
00056 {\cf21 #define PLOG_WARNING                     PLOG(plog::warning)}\par
00057 {\cf21 #define PLOG_ERROR                       PLOG(plog::error)}\par
00058 {\cf21 #define PLOG_FATAL                       PLOG(plog::fatal)}\par
00059 {\cf21 #define PLOG_NONE                        PLOG(plog::none)}\par
00060 \par
00061 {\cf21 #define PLOG_VERBOSE_(instanceId)        PLOG_(instanceId, plog::verbose)}\par
00062 {\cf21 #define PLOG_DEBUG_(instanceId)          PLOG_(instanceId, plog::debug)}\par
00063 {\cf21 #define PLOG_INFO_(instanceId)           PLOG_(instanceId, plog::info)}\par
00064 {\cf21 #define PLOG_WARNING_(instanceId)        PLOG_(instanceId, plog::warning)}\par
00065 {\cf21 #define PLOG_ERROR_(instanceId)          PLOG_(instanceId, plog::error)}\par
00066 {\cf21 #define PLOG_FATAL_(instanceId)          PLOG_(instanceId, plog::fatal)}\par
00067 {\cf21 #define PLOG_NONE_(instanceId)           PLOG_(instanceId, plog::none)}\par
00068 \par
00069 {\cf21 #define PLOGV                            PLOG_VERBOSE}\par
00070 {\cf21 #define PLOGD                            PLOG_DEBUG}\par
00071 {\cf21 #define PLOGI                            PLOG_INFO}\par
00072 {\cf21 #define PLOGW                            PLOG_WARNING}\par
00073 {\cf21 #define PLOGE                            PLOG_ERROR}\par
00074 {\cf21 #define PLOGF                            PLOG_FATAL}\par
00075 {\cf21 #define PLOGN                            PLOG_NONE}\par
00076 \par
00077 {\cf21 #define PLOGV_(instanceId)               PLOG_VERBOSE_(instanceId)}\par
00078 {\cf21 #define PLOGD_(instanceId)               PLOG_DEBUG_(instanceId)}\par
00079 {\cf21 #define PLOGI_(instanceId)               PLOG_INFO_(instanceId)}\par
00080 {\cf21 #define PLOGW_(instanceId)               PLOG_WARNING_(instanceId)}\par
00081 {\cf21 #define PLOGE_(instanceId)               PLOG_ERROR_(instanceId)}\par
00082 {\cf21 #define PLOGF_(instanceId)               PLOG_FATAL_(instanceId)}\par
00083 {\cf21 #define PLOGN_(instanceId)               PLOG_NONE_(instanceId)}\par
00084 \par
00086 {\cf20 // Conditional logging macros}\par
00087 \par
00088 {\cf21 #define PLOG_IF_(instanceId, severity, condition)  if (!(condition)) \{;\} else PLOG_(instanceId, severity)}\par
00089 {\cf21 #define PLOG_IF(severity, condition)               PLOG_IF_(PLOG_DEFAULT_INSTANCE_ID, severity, condition)}\par
00090 \par
00091 {\cf21 #define PLOG_VERBOSE_IF(condition)               PLOG_IF(plog::verbose, condition)}\par
00092 {\cf21 #define PLOG_DEBUG_IF(condition)                 PLOG_IF(plog::debug, condition)}\par
00093 {\cf21 #define PLOG_INFO_IF(condition)                  PLOG_IF(plog::info, condition)}\par
00094 {\cf21 #define PLOG_WARNING_IF(condition)               PLOG_IF(plog::warning, condition)}\par
00095 {\cf21 #define PLOG_ERROR_IF(condition)                 PLOG_IF(plog::error, condition)}\par
00096 {\cf21 #define PLOG_FATAL_IF(condition)                 PLOG_IF(plog::fatal, condition)}\par
00097 {\cf21 #define PLOG_NONE_IF(condition)                  PLOG_IF(plog::none, condition)}\par
00098 \par
00099 {\cf21 #define PLOG_VERBOSE_IF_(instanceId, condition)  PLOG_IF_(instanceId, plog::verbose, condition)}\par
00100 {\cf21 #define PLOG_DEBUG_IF_(instanceId, condition)    PLOG_IF_(instanceId, plog::debug, condition)}\par
00101 {\cf21 #define PLOG_INFO_IF_(instanceId, condition)     PLOG_IF_(instanceId, plog::info, condition)}\par
00102 {\cf21 #define PLOG_WARNING_IF_(instanceId, condition)  PLOG_IF_(instanceId, plog::warning, condition)}\par
00103 {\cf21 #define PLOG_ERROR_IF_(instanceId, condition)    PLOG_IF_(instanceId, plog::error, condition)}\par
00104 {\cf21 #define PLOG_FATAL_IF_(instanceId, condition)    PLOG_IF_(instanceId, plog::fatal, condition)}\par
00105 {\cf21 #define PLOG_NONE_IF_(instanceId, condition)     PLOG_IF_(instanceId, plog::none, condition)}\par
00106 \par
00107 {\cf21 #define PLOGV_IF(condition)                      PLOG_VERBOSE_IF(condition)}\par
00108 {\cf21 #define PLOGD_IF(condition)                      PLOG_DEBUG_IF(condition)}\par
00109 {\cf21 #define PLOGI_IF(condition)                      PLOG_INFO_IF(condition)}\par
00110 {\cf21 #define PLOGW_IF(condition)                      PLOG_WARNING_IF(condition)}\par
00111 {\cf21 #define PLOGE_IF(condition)                      PLOG_ERROR_IF(condition)}\par
00112 {\cf21 #define PLOGF_IF(condition)                      PLOG_FATAL_IF(condition)}\par
00113 {\cf21 #define PLOGN_IF(condition)                      PLOG_NONE_IF(condition)}\par
00114 \par
00115 {\cf21 #define PLOGV_IF_(instanceId, condition)         PLOG_VERBOSE_IF_(instanceId, condition)}\par
00116 {\cf21 #define PLOGD_IF_(instanceId, condition)         PLOG_DEBUG_IF_(instanceId, condition)}\par
00117 {\cf21 #define PLOGI_IF_(instanceId, condition)         PLOG_INFO_IF_(instanceId, condition)}\par
00118 {\cf21 #define PLOGW_IF_(instanceId, condition)         PLOG_WARNING_IF_(instanceId, condition)}\par
00119 {\cf21 #define PLOGE_IF_(instanceId, condition)         PLOG_ERROR_IF_(instanceId, condition)}\par
00120 {\cf21 #define PLOGF_IF_(instanceId, condition)         PLOG_FATAL_IF_(instanceId, condition)}\par
00121 {\cf21 #define PLOGN_IF_(instanceId, condition)         PLOG_NONE_IF_(instanceId, condition)}\par
00122 \par
00123 {\cf20 // Old macro names for downward compatibility. To bypass including these macro names, add}\par
00124 {\cf20 // #define PLOG_OMIT_LOG_DEFINES before #include <plog/Log.h>}\par
00125 {\cf21 #ifndef PLOG_OMIT_LOG_DEFINES}\par
00126 \par
00128 {\cf20 // Main logging macros - can be changed later to point at macros for a different logging package}\par
00129 \par
00130 {\cf21 #define LOG_(instanceId, severity)      IF_PLOG_(instanceId, severity) (*plog::get<instanceId>()) += plog::Record(severity, PLOG_GET_FUNC(), __LINE__, PLOG_GET_FILE(), PLOG_GET_THIS(), instanceId).ref()}\par
00131 {\cf21 #define LOG(severity)                   PLOG_(PLOG_DEFAULT_INSTANCE_ID, severity)}\par
00132 \par
00133 {\cf21 #define LOG_VERBOSE                     PLOG(plog::verbose)}\par
00134 {\cf21 #define LOG_DEBUG                       PLOG(plog::debug)}\par
00135 {\cf21 #define LOG_INFO                        PLOG(plog::info)}\par
00136 {\cf21 #define LOG_WARNING                     PLOG(plog::warning)}\par
00137 {\cf21 #define LOG_ERROR                       PLOG(plog::error)}\par
00138 {\cf21 #define LOG_FATAL                       PLOG(plog::fatal)}\par
00139 {\cf21 #define LOG_NONE                        PLOG(plog::none)}\par
00140 \par
00141 {\cf21 #define LOG_VERBOSE_(instanceId)        PLOG_(instanceId, plog::verbose)}\par
00142 {\cf21 #define LOG_DEBUG_(instanceId)          PLOG_(instanceId, plog::debug)}\par
00143 {\cf21 #define LOG_INFO_(instanceId)           PLOG_(instanceId, plog::info)}\par
00144 {\cf21 #define LOG_WARNING_(instanceId)        PLOG_(instanceId, plog::warning)}\par
00145 {\cf21 #define LOG_ERROR_(instanceId)          PLOG_(instanceId, plog::error)}\par
00146 {\cf21 #define LOG_FATAL_(instanceId)          PLOG_(instanceId, plog::fatal)}\par
00147 {\cf21 #define LOG_NONE_(instanceId)           PLOG_(instanceId, plog::none)}\par
00148 \par
00149 {\cf21 #define LOGV                            PLOG_VERBOSE}\par
00150 {\cf21 #define LOGD                            PLOG_DEBUG}\par
00151 {\cf21 #define LOGI                            PLOG_INFO}\par
00152 {\cf21 #define LOGW                            PLOG_WARNING}\par
00153 {\cf21 #define LOGE                            PLOG_ERROR}\par
00154 {\cf21 #define LOGF                            PLOG_FATAL}\par
00155 {\cf21 #define LOGN                            PLOG_NONE}\par
00156 \par
00157 {\cf21 #define LOGV_(instanceId)               PLOG_VERBOSE_(instanceId)}\par
00158 {\cf21 #define LOGD_(instanceId)               PLOG_DEBUG_(instanceId)}\par
00159 {\cf21 #define LOGI_(instanceId)               PLOG_INFO_(instanceId)}\par
00160 {\cf21 #define LOGW_(instanceId)               PLOG_WARNING_(instanceId)}\par
00161 {\cf21 #define LOGE_(instanceId)               PLOG_ERROR_(instanceId)}\par
00162 {\cf21 #define LOGF_(instanceId)               PLOG_FATAL_(instanceId)}\par
00163 {\cf21 #define LOGN_(instanceId)               PLOG_NONE_(instanceId)}\par
00164 \par
00166 {\cf20 // Conditional logging macros}\par
00167 \par
00168 {\cf21 #define LOG_IF_(instanceId, severity, condition)  if (!(condition)) \{;\} else PLOG_(instanceId, severity)}\par
00169 {\cf21 #define LOG_IF(severity, condition)               PLOG_IF_(PLOG_DEFAULT_INSTANCE_ID, severity, condition)}\par
00170 \par
00171 {\cf21 #define LOG_VERBOSE_IF(condition)               PLOG_IF(plog::verbose, condition)}\par
00172 {\cf21 #define LOG_DEBUG_IF(condition)                 PLOG_IF(plog::debug, condition)}\par
00173 {\cf21 #define LOG_INFO_IF(condition)                  PLOG_IF(plog::info, condition)}\par
00174 {\cf21 #define LOG_WARNING_IF(condition)               PLOG_IF(plog::warning, condition)}\par
00175 {\cf21 #define LOG_ERROR_IF(condition)                 PLOG_IF(plog::error, condition)}\par
00176 {\cf21 #define LOG_FATAL_IF(condition)                 PLOG_IF(plog::fatal, condition)}\par
00177 {\cf21 #define LOG_NONE_IF(condition)                  PLOG_IF(plog::none, condition)}\par
00178 \par
00179 {\cf21 #define LOG_VERBOSE_IF_(instanceId, condition)  PLOG_IF_(instanceId, plog::verbose, condition)}\par
00180 {\cf21 #define LOG_DEBUG_IF_(instanceId, condition)    PLOG_IF_(instanceId, plog::debug, condition)}\par
00181 {\cf21 #define LOG_INFO_IF_(instanceId, condition)     PLOG_IF_(instanceId, plog::info, condition)}\par
00182 {\cf21 #define LOG_WARNING_IF_(instanceId, condition)  PLOG_IF_(instanceId, plog::warning, condition)}\par
00183 {\cf21 #define LOG_ERROR_IF_(instanceId, condition)    PLOG_IF_(instanceId, plog::error, condition)}\par
00184 {\cf21 #define LOG_FATAL_IF_(instanceId, condition)    PLOG_IF_(instanceId, plog::fatal, condition)}\par
00185 {\cf21 #define LOG_NONE_IF_(instanceId, condition)     PLOG_IF_(instanceId, plog::none, condition)}\par
00186 \par
00187 {\cf21 #define LOGV_IF(condition)                      PLOG_VERBOSE_IF(condition)}\par
00188 {\cf21 #define LOGD_IF(condition)                      PLOG_DEBUG_IF(condition)}\par
00189 {\cf21 #define LOGI_IF(condition)                      PLOG_INFO_IF(condition)}\par
00190 {\cf21 #define LOGW_IF(condition)                      PLOG_WARNING_IF(condition)}\par
00191 {\cf21 #define LOGE_IF(condition)                      PLOG_ERROR_IF(condition)}\par
00192 {\cf21 #define LOGF_IF(condition)                      PLOG_FATAL_IF(condition)}\par
00193 {\cf21 #define LOGN_IF(condition)                      PLOG_NONE_IF(condition)}\par
00194 \par
00195 {\cf21 #define LOGV_IF_(instanceId, condition)         PLOG_VERBOSE_IF_(instanceId, condition)}\par
00196 {\cf21 #define LOGD_IF_(instanceId, condition)         PLOG_DEBUG_IF_(instanceId, condition)}\par
00197 {\cf21 #define LOGI_IF_(instanceId, condition)         PLOG_INFO_IF_(instanceId, condition)}\par
00198 {\cf21 #define LOGW_IF_(instanceId, condition)         PLOG_WARNING_IF_(instanceId, condition)}\par
00199 {\cf21 #define LOGE_IF_(instanceId, condition)         PLOG_ERROR_IF_(instanceId, condition)}\par
00200 {\cf21 #define LOGF_IF_(instanceId, condition)         PLOG_FATAL_IF_(instanceId, condition)}\par
00201 {\cf21 #define LOGN_IF_(instanceId, condition)         PLOG_NONE_IF_(instanceId, condition)}\par
00202 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Logger.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Logger.h}
{\xe \v src/include/plog/Logger.h}
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Appenders/IAppender.h>}\par
{\f2 #include <plog/Util.h>}\par
{\f2 #include <vector>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::Logger< instanceId >}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_DEFAULT_INSTANCE_ID}\~ 0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b int} instanceId> {\b Logger}< {\b instanceId} > * {\b plog::get} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Logger}< {\b PLOG_DEFAULT_INSTANCE_ID} > * {\b plog::get} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v PLOG_DEFAULT_INSTANCE_ID\:Logger.h}
{\xe \v Logger.h\:PLOG_DEFAULT_INSTANCE_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_DEFAULT_INSTANCE_ID\~ 0}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b Logger.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Logger.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Logger.h}
{\xe \v src/include/plog/Logger.h}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <plog/Appenders/IAppender.h>}\par
00003 {\cf21 #include <plog/Util.h>}\par
00004 {\cf21 #include <vector>}\par
00005 \par
00006 {\cf21 #ifdef PLOG_DEFAULT_INSTANCE }{\cf20 // for backward compatibility}\par
00007 {\cf21 #   define PLOG_DEFAULT_INSTANCE_ID PLOG_DEFAULT_INSTANCE}\par
00008 {\cf21 #endif}\par
00009 \par
00010 {\cf21 #ifndef PLOG_DEFAULT_INSTANCE_ID}\par
00011 {\cf21 #   define PLOG_DEFAULT_INSTANCE_ID 0}\par
00012 {\cf21 #endif}\par
00013 \par
00014 {\cf17 namespace }plog\par
00015 \{\par
00016     {\cf17 template}<{\cf18 int} instanceId>\par
00017     {\cf17 class }PLOG_LINKAGE Logger : {\cf17 public} util::Singleton<Logger<instanceId> >, {\cf17 public} IAppender\par
00018     \{\par
00019     {\cf17 public}:\par
00020         Logger(Severity maxSeverity = none) : m_maxSeverity(maxSeverity)\par
00021         \{\par
00022         \}\par
00023 \par
00024         Logger& addAppender(IAppender* appender)\par
00025         \{\par
00026             assert(appender != {\cf17 this});\par
00027             m_appenders.push_back(appender);\par
00028             {\cf19 return} *{\cf17 this};\par
00029         \}\par
00030 \par
00031         Severity getMaxSeverity(){\cf17  const}\par
00032 {\cf17         }\{\par
00033             {\cf19 return} m_maxSeverity;\par
00034         \}\par
00035 \par
00036         {\cf18 void} setMaxSeverity(Severity severity)\par
00037         \{\par
00038             m_maxSeverity = severity;\par
00039         \}\par
00040 \par
00041         {\cf18 bool} checkSeverity(Severity severity){\cf17  const}\par
00042 {\cf17         }\{\par
00043             {\cf19 return} severity <= m_maxSeverity;\par
00044         \}\par
00045 \par
00046         {\cf17 virtual} {\cf18 void} write({\cf17 const} Record& record) PLOG_OVERRIDE\par
00047         \{\par
00048             {\cf19 if} (checkSeverity(record.getSeverity()))\par
00049             \{\par
00050                 *{\cf17 this} += record;\par
00051             \}\par
00052         \}\par
00053 \par
00054         {\cf18 void} operator+=({\cf17 const} Record& record)\par
00055         \{\par
00056             {\cf19 for} (std::vector<IAppender*>::iterator it = m_appenders.begin(); it != m_appenders.end(); ++it)\par
00057             \{\par
00058                 (*it)->write(record);\par
00059             \}\par
00060         \}\par
00061 \par
00062     {\cf17 private}:\par
00063         Severity m_maxSeverity;\par
00064 {\cf21 #ifdef _MSC_VER}\par
00065 {\cf21 #   pragma warning(push)}\par
00066 {\cf21 #   pragma warning(disable:4251) }{\cf20 // needs to have dll-interface to be used by clients of class}\par
00067 {\cf21 #endif}\par
00068         std::vector<IAppender*> m_appenders;\par
00069 {\cf21 #ifdef _MSC_VER}\par
00070 {\cf21 #   pragma warning(pop)}\par
00071 {\cf21 #endif}\par
00072     \};\par
00073 \par
00074     {\cf17 template}<{\cf18 int} instanceId>\par
00075     {\cf17 inline} Logger<instanceId>* get()\par
00076     \{\par
00077         {\cf19 return} Logger<instanceId>::getInstance();\par
00078     \}\par
00079 \par
00080     {\cf17 inline} Logger<PLOG_DEFAULT_INSTANCE_ID>* get()\par
00081     \{\par
00082         {\cf19 return} Logger<PLOG_DEFAULT_INSTANCE_ID>::getInstance();\par
00083     \}\par
00084 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Record.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Record.h}
{\xe \v src/include/plog/Record.h}
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstdarg>}\par
{\f2 #include <plog/Severity.h>}\par
{\f2 #include <plog/Util.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b plog::detail::meta::enableIf< B, T >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b plog::detail::meta::enableIf< true, T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b plog::detail::meta::No}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b plog::detail::meta::Yes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b plog::detail::meta::isConvertible< From, To >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b plog::detail::meta::isConvertibleToNString< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b plog::detail::meta::isConvertibleToString< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b plog::detail::meta::isContainer< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b plog::detail::meta::isFilesystemPath< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::Record}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog::detail}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog::detail::meta}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T} > {\b T} & {\b plog::detail::meta::declval} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b plog::detail::operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b char} *{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b plog::detail::operator<<} ({\b util::nostringstream} &{\b stream}, {\b char} *{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b plog::detail::operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} std::string &{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T1} , {\b class} {\b T2} > {\b void} {\b plog::detail::operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} std::pair< {\b T1}, {\b T2} > &{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T} > {\b meta::enableIf}< {\b meta::isConvertibleToNString}< {\b T} >::value, {\b void} >::type {\b plog::detail::operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b T} &{\b data})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b T} > {\b meta::enableIf}< {\b meta::isContainer}< {\b T} >::value &&!{\b meta::isConvertibleToNString}< {\b T} >::value &&!{\b meta::isConvertibleToString}< {\b T} >::value &&!{\b meta::isFilesystemPath}< {\b T} >::value, {\b void} >::type {\b plog::detail::operator<<} ({\b util::nostringstream} &{\b stream}, {\b const} {\b T} &{\b data})\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Record.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Record.h}
{\xe \v src/include/plog/Record.h}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <cstdarg>}\par
00003 {\cf21 #include <plog/Severity.h>}\par
00004 {\cf21 #include <plog/Util.h>}\par
00005 \par
00006 {\cf21 #ifdef __cplusplus_cli}\par
00007 {\cf21 #include <vcclr.h>}  {\cf20 // For PtrToStringChars}\par
00008 {\cf21 #endif}\par
00009 \par
00010 {\cf17 namespace }plog\par
00011 \{\par
00012     {\cf17 namespace }detail\par
00013     \{\par
00014 {\cf21 #if !defined(_MSC_VER) || _MSC_VER > 1400 }{\cf20 // MSVC 2005 doesn't understand `enableIf`, so drop all `meta`}\par
00015         {\cf17 namespace }meta\par
00016         \{\par
00017             {\cf17 template}<{\cf17 class} T>\par
00018             {\cf17 inline} T& declval()\par
00019             \{\par
00020 {\cf21 #ifdef __INTEL_COMPILER}\par
00021 {\cf21 #    pragma warning(suppress: 327) }{\cf20 // NULL reference is not allowed}\par
00022 {\cf21 #endif}\par
00023                 {\cf19 return} *{\cf17 reinterpret_cast<}T*{\cf17 >}(0);\par
00024             \}\par
00025 \par
00026             {\cf17 template}<{\cf18 bool} B, {\cf17 class} T = {\cf18 void}>\par
00027             {\cf17 struct }enableIf \{\};\par
00028 \par
00029             {\cf17 template}<{\cf17 class} T>\par
00030             {\cf17 struct }enableIf<true, T> \{ {\cf17 typedef} T type; \};\par
00031 \par
00032             {\cf17 struct }No  \{ {\cf18 char} a[1]; \};\par
00033             {\cf17 struct }Yes \{ {\cf18 char} a[2]; \};\par
00034 \par
00035             {\cf17 template} <{\cf17 class} From, {\cf17 class} To>\par
00036             {\cf17 struct }isConvertible\par
00037             \{\par
00038                 {\cf20 // `+ sizeof(U*)` is required for GCC 4.5-4.7}\par
00039                 {\cf17 template}<{\cf17 class} U>\par
00040                 {\cf17 static} {\cf17 typename} enableIf<!!(sizeof(static_cast<To>(meta::declval<U>())) + {\cf17 sizeof}(U*)), Yes>::type test({\cf18 int});\par
00041 \par
00042                 {\cf17 template}<{\cf17 class} U>\par
00043                 {\cf17 static} No test(...);\par
00044 \par
00045                 {\cf17 enum} \{ value = {\cf17 sizeof}(test<From>(0)) == {\cf17 sizeof}(Yes) \};\par
00046             \};\par
00047 \par
00048             {\cf17 template} <{\cf17 class} T>\par
00049             {\cf17 struct }isConvertibleToNString : isConvertible<T, util::nstring> \{\};\par
00050 \par
00051             {\cf17 template} <{\cf17 class} T>\par
00052             {\cf17 struct }isConvertibleToString : isConvertible<T, std::string> \{\};\par
00053 \par
00054             {\cf17 template} <{\cf17 class} T>\par
00055             {\cf17 struct }isContainer\par
00056             \{\par
00057                 {\cf17 template}<{\cf17 class} U>\par
00058                 {\cf17 static} {\cf17 typename} meta::enableIf<!!({\cf17 sizeof}(\par
00059 {\cf21 #if defined(_MSC_VER) && _MSC_VER < 1700 }{\cf20 // MSVC 2010 doesn't understand `typename T::const_iterator`}\par
00060                     meta::declval<U>().begin()) + {\cf17 sizeof}(meta::declval<U>().end()\par
00061 {\cf21 #else}\par
00062                     {\cf17 typename} U::const_iterator\par
00063 {\cf21 #endif}\par
00064                     )), Yes>::type test({\cf18 int});\par
00065 \par
00066                 {\cf17 template}<{\cf17 class} U>\par
00067                 {\cf17 static} No test(...);\par
00068 \par
00069                 {\cf17 enum} \{ value = {\cf17 sizeof}(test<T>(0)) == {\cf17 sizeof}(Yes) \};\par
00070             \};\par
00071 \par
00072             {\cf20 // Detects `std::filesystem::path` and `boost::filesystem::path`. They look like containers}\par
00073             {\cf20 // but we don't want to treat them as containers, so we use this detector to filter them out.}\par
00074             {\cf17 template} <{\cf17 class} T>\par
00075             {\cf17 struct }isFilesystemPath\par
00076             \{\par
00077                 {\cf17 template}<{\cf17 class} U>\par
00078                 {\cf17 static} {\cf17 typename} meta::enableIf<!!(sizeof(meta::declval<U>().preferred_separator)), Yes>::type test({\cf18 int});\par
00079 \par
00080                 {\cf17 template}<{\cf17 class} U>\par
00081                 {\cf17 static} No test(...);\par
00082 \par
00083                 {\cf17 enum} \{ value = {\cf17 sizeof}(test<T>(0)) == {\cf17 sizeof}(Yes) \};\par
00084             \};\par
00085         \}\par
00086 {\cf21 #endif}\par
00087 \par
00089         {\cf20 // Stream output operators as free functions}\par
00090 \par
00091 {\cf21 #if PLOG_ENABLE_WCHAR_INPUT}\par
00092         {\cf17 inline} {\cf18 void} operator<<(util::nostringstream& stream, {\cf17 const} {\cf18 wchar_t}* data)\par
00093         \{\par
00094             data = data ? data : L{\cf22 "(null)"};\par
00095 \par
00096 {\cf21 #   ifdef _WIN32}\par
00097 {\cf21 #       if PLOG_CHAR_IS_UTF8}\par
00098             std::operator<<(stream, util::toNarrow(data, codePage::kUTF8));\par
00099 {\cf21 #       else}\par
00100             std::operator<<(stream, data);\par
00101 {\cf21 #       endif}\par
00102 {\cf21 #   else}\par
00103             std::operator<<(stream, util::toNarrow(data));\par
00104 {\cf21 #   endif}\par
00105         \}\par
00106 \par
00107         {\cf17 inline} {\cf18 void} operator<<(util::nostringstream& stream, {\cf18 wchar_t}* data)\par
00108         \{\par
00109             plog::detail::operator<<(stream, const_cast<const wchar_t*>(data));\par
00110         \}\par
00111 \par
00112         {\cf17 inline} {\cf18 void} operator<<(util::nostringstream& stream, {\cf17 const} std::wstring& data)\par
00113         \{\par
00114             plog::detail::operator<<(stream, data.c_str());\par
00115         \}\par
00116 {\cf21 #endif}\par
00117 \par
00118         {\cf17 inline} {\cf18 void} operator<<(util::nostringstream& stream, {\cf17 const} {\cf18 char}* data)\par
00119         \{\par
00120             data = data ? data : {\cf22 "(null)"};\par
00121 \par
00122 {\cf21 #if defined(_WIN32) && defined(__BORLANDC__)}\par
00123 {\cf21 #   if PLOG_CHAR_IS_UTF8}\par
00124             stream << data;\par
00125 {\cf21 #   else}\par
00126             stream << util::toWide(data);\par
00127 {\cf21 #   endif}\par
00128 {\cf21 #elif defined(_WIN32)}\par
00129 {\cf21 #   if PLOG_CHAR_IS_UTF8}\par
00130             std::operator<<(stream, data);\par
00131 {\cf21 #   else}\par
00132             std::operator<<(stream, util::toWide(data));\par
00133 {\cf21 #   endif}\par
00134 {\cf21 #else}\par
00135             std::operator<<(stream, data);\par
00136 {\cf21 #endif}\par
00137         \}\par
00138 \par
00139         {\cf17 inline} {\cf18 void} operator<<(util::nostringstream& stream, {\cf18 char}* data)\par
00140         \{\par
00141             plog::detail::operator<<(stream, const_cast<const char*>(data));\par
00142         \}\par
00143 \par
00144         {\cf17 inline} {\cf18 void} operator<<(util::nostringstream& stream, {\cf17 const} std::string& data)\par
00145         \{\par
00146             plog::detail::operator<<(stream, data.c_str());\par
00147         \}\par
00148 \par
00149 {\cf21 #ifdef __cpp_char8_t}\par
00150         {\cf17 inline} {\cf18 void} operator<<(util::nostringstream& stream, {\cf17 const} {\cf18 char8_t}* data)\par
00151         \{\par
00152 {\cf21 #   if PLOG_CHAR_IS_UTF8}\par
00153             plog::detail::operator<<(stream, reinterpret_cast<const char*>(data));\par
00154 {\cf21 #   else}\par
00155             plog::detail::operator<<(stream, util::toWide(reinterpret_cast<const char*>(data), codePage::kUTF8));\par
00156 {\cf21 #   endif}\par
00157         \}\par
00158 {\cf21 #endif }{\cf20 //__cpp_char8_t}\par
00159 \par
00160         {\cf20 // Print `std::pair`}\par
00161         {\cf17 template}<{\cf17 class} T1, {\cf17 class} T2>\par
00162         {\cf17 inline} {\cf18 void} operator<<(util::nostringstream& stream, {\cf17 const} std::pair<T1, T2>& data)\par
00163         \{\par
00164             stream << data.first;\par
00165             stream << {\cf22 ":"};\par
00166             stream << data.second;\par
00167         \}\par
00168 \par
00169 {\cf21 #if defined(__clang__) || !defined(__GNUC__) || (__GNUC__ * 100 + __GNUC_MINOR__) >= 405 }{\cf20 // skip for GCC < 4.5 due to https://gcc.gnu.org/bugzilla/show_bug.cgi?id=38600}\par
00170 {\cf21 #if !defined(_MSC_VER) || _MSC_VER > 1400 }{\cf20 // MSVC 2005 doesn't understand `enableIf`, so drop all `meta`}\par
00171         {\cf20 // Print data that can be casted to `std::basic_string`.}\par
00172         {\cf17 template}<{\cf17 class} T>\par
00173         {\cf17 inline} {\cf17 typename} meta::enableIf<meta::isConvertibleToNString<T>::value, {\cf18 void}>::type operator<<(util::nostringstream& stream, {\cf17 const} T& data)\par
00174         \{\par
00175             plog::detail::operator<<(stream, static_cast<util::nstring>(data));\par
00176         \}\par
00177 \par
00178         {\cf20 // Print std containers}\par
00179         {\cf17 template}<{\cf17 class} T>\par
00180         {\cf17 inline} {\cf17 typename} meta::enableIf<meta::isContainer<T>::value &&\par
00181             !meta::isConvertibleToNString<T>::value &&\par
00182             !meta::isConvertibleToString<T>::value &&\par
00183             !meta::isFilesystemPath<T>::value, {\cf18 void}>::type operator<<(util::nostringstream& stream, {\cf17 const} T& data)\par
00184         \{\par
00185             stream << {\cf22 "["};\par
00186 \par
00187             {\cf19 for} ({\cf17 typename} T::const_iterator it = data.begin(); it != data.end();)\par
00188             \{\par
00189                 stream << *it;\par
00190 \par
00191                 {\cf19 if} (++it == data.end())\par
00192                 \{\par
00193                     {\cf19 break};\par
00194                 \}\par
00195 \par
00196                 stream << {\cf22 ", "};\par
00197             \}\par
00198 \par
00199             stream << {\cf22 "]"};\par
00200         \}\par
00201 {\cf21 #endif}\par
00202 {\cf21 #endif}\par
00203 \par
00204 {\cf21 #ifdef __cplusplus_cli}\par
00205         {\cf17 inline} {\cf18 void} operator<<(util::nostringstream& stream, System::String^ data)\par
00206         \{\par
00207             cli::pin_ptr<const System::Char> ptr = PtrToStringChars(data);\par
00208             plog::detail::operator<<(stream, static_cast<const wchar_t*>(ptr));\par
00209         \}\par
00210 {\cf21 #endif}\par
00211 \par
00212 {\cf21 #if defined(_WIN32) && (!defined(_MSC_VER) || _MSC_VER > 1400) }{\cf20 // MSVC 2005 doesn't understand `enableIf`, so drop all `meta`}\par
00213         {\cf17 namespace }meta\par
00214         \{\par
00215             {\cf17 template}<{\cf18 bool} Value>\par
00216             {\cf17 struct }valueType \{ {\cf17 enum} \{ value = Value \}; \};\par
00217 \par
00218             {\cf17 template}<{\cf17 class} T, {\cf17 class} Stream>\par
00219             {\cf17 inline} No operator<<(Stream&, {\cf17 const} T&);\par
00220 \par
00221             {\cf17 template}<{\cf17 class} T, {\cf17 class} Stream>\par
00222             {\cf17 struct }isStreamable : valueType<sizeof(operator<<(meta::declval<Stream>(), meta::declval<const T>())) != sizeof(No)> \{\};\par
00223 \par
00224             template<class Stream>\par
00225             struct isStreamable<std::ios_base& PLOG_CDECL (std::ios_base&), Stream> : valueType<true> \{\};\par
00226 \par
00227             template<class Stream, size_t N>\par
00228             struct isStreamable<wchar_t[N], Stream> : valueType<false> \{\};\par
00229 \par
00230             template<class Stream, size_t N>\par
00231             struct isStreamable<const wchar_t[N], Stream> : valueType<false> \{\};\par
00232 \par
00233             {\cf20 // meta doesn't work well for deleted functions and C++20 has `operator<<(std::ostream&, const wchar_t*) = delete` so exlicitly define it}\par
00234             template<>\par
00235             struct isStreamable<const wchar_t*, std::ostream> : valueType<false> \{\};\par
00236 \par
00237 #   ifdef __cpp_char8_t\par
00238             {\cf20 // meta doesn't work well for deleted functions and C++20 has `operator<<(std::ostream&, const char8_t*) = delete` so exlicitly define it}\par
00239             template<class Stream, size_t N>\par
00240             struct isStreamable<char8_t[N], Stream> : valueType<false> \{\};\par
00241 \par
00242             template<class Stream>\par
00243             struct isStreamable<const char8_t*, Stream> : valueType<false> \{\};\par
00244 #   endif {\cf20 //__cpp_char8_t}\par
00245         \}\par
00246 \par
00247         template<class T>\par
00248         inline typename meta::enableIf<meta::isStreamable<T, std::ostream>::value && !meta::isStreamable<T, std::wostream>::value, void>::type operator<<(std::wostringstream& stream, const T& data)\par
00249         \{\par
00250             std::ostringstream ss;\par
00251             ss << data;\par
00252             stream << ss.str();\par
00253         \}\par
00254 #endif\par
00255     \}\par
00256 \par
00257     class Record\par
00258     \{\par
00259     public:\par
00260         Record(Severity severity, const char* func, size_t line, const char* file, const void* object, int instanceId)\par
00261             : m_severity(severity), m_tid(util::gettid()), m_object(object), m_line(line), m_func(func), m_file(file), m_instanceId(instanceId)\par
00262         \{\par
00263             util::ftime(&m_time);\par
00264         \}\par
00265 \par
00266         Record& ref()\par
00267         \{\par
00268             return *this;\par
00269         \}\par
00270 \par
00272         {\cf20 // Stream output operators}\par
00273 \par
00274         Record& operator<<(char data)\par
00275         \{\par
00276             char str[] = \{ data, 0 \};\par
00277             return *this << str;\par
00278         \}\par
00279 \par
00280 #if PLOG_ENABLE_WCHAR_INPUT\par
00281         Record& operator<<(wchar_t data)\par
00282         \{\par
00283             wchar_t str[] = \{ data, 0 \};\par
00284             return *this << str;\par
00285         \}\par
00286 #endif\par
00287 \par
00288         Record& operator<<(util::nostream& (PLOG_CDECL *data)(util::nostream&))\par
00289         \{\par
00290             m_message << data;\par
00291             return *this;\par
00292         \}\par
00293 \par
00294 #ifdef QT_VERSION\par
00295         Record& operator<<(const QString& data)\par
00296         \{\par
00297 #   if PLOG_CHAR_IS_UTF8\par
00298             return *this << data.toStdString();\par
00299 #   else\par
00300             return *this << data.toStdWString();\par
00301 #   endif\par
00302         \}\par
00303 \par
00304 #   if QT_VERSION < 0x060000\par
00305         Record& operator<<(const QStringRef& data)\par
00306         \{\par
00307             return *this << data.toString();\par
00308         \}\par
00309 #   endif\par
00310 \par
00311 #   ifdef QSTRINGVIEW_H\par
00312         Record& operator<<(QStringView data)\par
00313         \{\par
00314             return *this << data.toString();\par
00315         \}\par
00316 #   endif\par
00317 #endif\par
00318 \par
00319         template<typename T>\par
00320         Record& operator<<(const T& data)\par
00321         \{\par
00322             using namespace plog::detail;\par
00323 \par
00324             m_message << data;\par
00325             return *this;\par
00326         \}\par
00327 \par
00328 #ifndef __cplusplus_cli\par
00329         Record& printf(const char* format, ...)\par
00330         \{\par
00331             using namespace util;\par
00332 \par
00333             char* str = NULL;\par
00334             va_list ap;\par
00335 \par
00336             va_start(ap, format);\par
00337             int len = vasprintf(&str, format, ap);\par
00338             static_cast<void>(len);\par
00339             va_end(ap);\par
00340 \par
00341             *this << str;\par
00342             free(str);\par
00343 \par
00344             return *this;\par
00345         \}\par
00346 \par
00347 #ifdef _WIN32\par
00348         Record& printf(const wchar_t* format, ...)\par
00349         \{\par
00350             using namespace util;\par
00351 \par
00352             wchar_t* str = NULL;\par
00353             va_list ap;\par
00354 \par
00355             va_start(ap, format);\par
00356             int len = vaswprintf(&str, format, ap);\par
00357             static_cast<void>(len);\par
00358             va_end(ap);\par
00359 \par
00360             *this << str;\par
00361             free(str);\par
00362 \par
00363             return *this;\par
00364         \}\par
00365 #endif\par
00366 #endif {\cf20 //__cplusplus_cli}\par
00367 \par
00369         {\cf20 // Getters}\par
00370 \par
00371         virtual const util::Time& getTime() const\par
00372         \{\par
00373             return m_time;\par
00374         \}\par
00375 \par
00376         virtual Severity getSeverity() const\par
00377         \{\par
00378             return m_severity;\par
00379         \}\par
00380 \par
00381         virtual unsigned int getTid() const\par
00382         \{\par
00383             return m_tid;\par
00384         \}\par
00385 \par
00386         virtual const void* getObject() const\par
00387         \{\par
00388             return m_object;\par
00389         \}\par
00390 \par
00391         virtual size_t getLine() const\par
00392         \{\par
00393             return m_line;\par
00394         \}\par
00395 \par
00396         virtual const util::nchar* getMessage() const\par
00397         \{\par
00398             m_messageStr = m_message.str();\par
00399             return m_messageStr.c_str();\par
00400         \}\par
00401 \par
00402         virtual const char* getFunc() const\par
00403         \{\par
00404             m_funcStr = util::processFuncName(m_func);\par
00405             return m_funcStr.c_str();\par
00406         \}\par
00407 \par
00408         virtual const char* getFile() const\par
00409         \{\par
00410             return m_file;\par
00411         \}\par
00412 \par
00413         virtual ~Record() {\cf20 // virtual destructor to satisfy -Wnon-virtual-dtor warning}\par
00414         \{\par
00415         \}\par
00416 \par
00417         virtual int getInstanceId() const\par
00418         \{\par
00419             return m_instanceId;\par
00420         \}\par
00421 \par
00422     private:\par
00423         util::Time              m_time;\par
00424         const Severity          m_severity;\par
00425         const unsigned int      m_tid;\par
00426         const void* const       m_object;\par
00427         const size_t            m_line;\par
00428         util::nostringstream    m_message;\par
00429         const char* const       m_func;\par
00430         const char* const       m_file;\par
00431         const int               m_instanceId;\par
00432         mutable std::string     m_funcStr;\par
00433         mutable util::nstring   m_messageStr;\par
00434     \};\par
00435 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Severity.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Severity.h}
{\xe \v src/include/plog/Severity.h}
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cctype>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b plog::Severity} \{ {\b plog::none} = 0
, {\b plog::fatal} = 1
, {\b plog::error} = 2
, {\b plog::warning} = 3
, {\b plog::info} = 4
, {\b plog::debug} = 5
, {\b plog::verbose} = 6
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b plog::severityToString} ({\b Severity} {\b severity})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Severity} {\b plog::severityFromString} ({\b const} {\b char} *{\b str})\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Severity.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Severity.h}
{\xe \v src/include/plog/Severity.h}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <cctype>}\par
00003 \par
00004 {\cf17 namespace }plog\par
00005 \{\par
00006     {\cf17 enum} Severity\par
00007     \{\par
00008         none = 0,\par
00009         fatal = 1,\par
00010         error = 2,\par
00011         warning = 3,\par
00012         info = 4,\par
00013         debug = 5,\par
00014         verbose = 6\par
00015     \};\par
00016 \par
00017 {\cf21 #ifdef _MSC_VER}\par
00018 {\cf21 #   pragma warning(suppress: 26812) }{\cf20 //  Prefer 'enum class' over 'enum'}\par
00019 {\cf21 #endif}\par
00020     {\cf17 inline} {\cf17 const} {\cf18 char}* severityToString(Severity severity)\par
00021     \{\par
00022         {\cf19 switch} (severity)\par
00023         \{\par
00024         {\cf19 case} fatal:\par
00025             {\cf19 return} {\cf22 "FATAL"};\par
00026         {\cf19 case} error:\par
00027             {\cf19 return} {\cf22 "ERROR"};\par
00028         {\cf19 case} warning:\par
00029             {\cf19 return} {\cf22 "WARN"};\par
00030         {\cf19 case} info:\par
00031             {\cf19 return} {\cf22 "INFO"};\par
00032         {\cf19 case} debug:\par
00033             {\cf19 return} {\cf22 "DEBUG"};\par
00034         {\cf19 case} verbose:\par
00035             {\cf19 return} {\cf22 "VERB"};\par
00036         {\cf19 default}:\par
00037             {\cf19 return} {\cf22 "NONE"};\par
00038         \}\par
00039     \}\par
00040 \par
00041     {\cf17 inline} Severity severityFromString({\cf17 const} {\cf18 char}* str)\par
00042     \{\par
00043         {\cf19 switch} (std::toupper(str[0]))\par
00044         \{\par
00045         {\cf19 case} {\cf23 'F'}:\par
00046             {\cf19 return} fatal;\par
00047         {\cf19 case} {\cf23 'E'}:\par
00048             {\cf19 return} error;\par
00049         {\cf19 case} {\cf23 'W'}:\par
00050             {\cf19 return} warning;\par
00051         {\cf19 case} {\cf23 'I'}:\par
00052             {\cf19 return} info;\par
00053         {\cf19 case} {\cf23 'D'}:\par
00054             {\cf19 return} debug;\par
00055         {\cf19 case} {\cf23 'V'}:\par
00056             {\cf19 return} verbose;\par
00057         {\cf19 default}:\par
00058             {\cf19 return} none;\par
00059         \}\par
00060     \}\par
00061 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/Util.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Util.h}
{\xe \v src/include/plog/Util.h}
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cassert>}\par
{\f2 #include <cstring>}\par
{\f2 #include <cstdio>}\par
{\f2 #include <cstdlib>}\par
{\f2 #include <sstream>}\par
{\f2 #include <fcntl.h>}\par
{\f2 #include <sys/stat.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <sys/time.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b plog::util::Time}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::util::NonCopyable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::util::File}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::util::Mutex}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::util::MutexLock}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b plog::util::Singleton< T >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b plog::util}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_ENABLE_WCHAR_INPUT}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_CHAR_IS_UTF8}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_LINKAGE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_LINKAGE_HIDDEN}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_NSTR}(x)\~ x\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_CDECL}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLOG_OVERRIDE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} std::string {\b plog::util::nstring}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} std::ostringstream {\b plog::util::nostringstream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} std::istringstream {\b plog::util::nistringstream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} std::ostream {\b plog::util::nostream}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b char} {\b plog::util::nchar}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b plog::util::localtime_s} ({\b struct} {\b tm} *{\b t}, {\b const} {\b time_t} *time)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b plog::util::gmtime_s} ({\b struct} {\b tm} *{\b t}, {\b const} {\b time_t} *time)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b plog::util::ftime} ({\b Time} *{\b t})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b unsigned} {\b int} {\b plog::util::gettid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b plog::util::vasprintf} ({\b char} **{\b strp}, {\b const} {\b char} *format, {\b va_list} {\b ap})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b plog::util::processFuncName} ({\b const} {\b char} *{\b func})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b nchar} * {\b plog::util::findExtensionDot} ({\b const} {\b nchar} *{\b fileName})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b plog::util::splitFileName} ({\b const} {\b nchar} *{\b fileName}, {\b nstring} &{\b fileNameNoExt}, {\b nstring} &{\b fileExt})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v PLOG_CDECL\:Util.h}
{\xe \v Util.h\:PLOG_CDECL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_CDECL}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 94} of file {\b Util.h}.}\par
}
{\xe \v PLOG_CHAR_IS_UTF8\:Util.h}
{\xe \v Util.h\:PLOG_CHAR_IS_UTF8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_CHAR_IS_UTF8\~ 1}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b Util.h}.}\par
}
{\xe \v PLOG_ENABLE_WCHAR_INPUT\:Util.h}
{\xe \v Util.h\:PLOG_ENABLE_WCHAR_INPUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_ENABLE_WCHAR_INPUT\~ 0}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b Util.h}.}\par
}
{\xe \v PLOG_LINKAGE\:Util.h}
{\xe \v Util.h\:PLOG_LINKAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_LINKAGE}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 55} of file {\b Util.h}.}\par
}
{\xe \v PLOG_LINKAGE_HIDDEN\:Util.h}
{\xe \v Util.h\:PLOG_LINKAGE_HIDDEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_LINKAGE_HIDDEN}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 59} of file {\b Util.h}.}\par
}
{\xe \v PLOG_NSTR\:Util.h}
{\xe \v Util.h\:PLOG_NSTR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_NSTR( x)\~ x}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 85} of file {\b Util.h}.}\par
}
{\xe \v PLOG_OVERRIDE\:Util.h}
{\xe \v Util.h\:PLOG_OVERRIDE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLOG_OVERRIDE}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 100} of file {\b Util.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Util.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/Util.h}
{\xe \v src/include/plog/Util.h}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 {\cf21 #include <cassert>}\par
00003 {\cf21 #include <cstring>}\par
00004 {\cf21 #include <cstdio>}\par
00005 {\cf21 #include <cstdlib>}\par
00006 {\cf21 #include <sstream>}\par
00007 {\cf21 #include <fcntl.h>}\par
00008 {\cf21 #include <sys/stat.h>}\par
00009 \par
00010 {\cf21 #ifndef PLOG_ENABLE_WCHAR_INPUT}\par
00011 {\cf21 #   ifdef _WIN32}\par
00012 {\cf21 #       define PLOG_ENABLE_WCHAR_INPUT 1}\par
00013 {\cf21 #   else}\par
00014 {\cf21 #       define PLOG_ENABLE_WCHAR_INPUT 0}\par
00015 {\cf21 #   endif}\par
00016 {\cf21 #endif}\par
00017 \par
00019 {\cf20 // PLOG_CHAR_IS_UTF8 specifies character encoding of `char` type. On *nix}\par
00020 {\cf20 // systems it's set to UTF-8 while on Windows in can be ANSI or UTF-8. It}\par
00021 {\cf20 // automatically detects `/utf-8` command line option in MSVC. Also it can}\par
00022 {\cf20 // be set manually if required.}\par
00023 {\cf20 // This option allows to support http://utf8everywhere.org approach.}\par
00024 \par
00025 {\cf21 #ifndef PLOG_CHAR_IS_UTF8}\par
00026 {\cf21 #   if defined(_WIN32) && !defined(_UTF8)}\par
00027 {\cf21 #       define PLOG_CHAR_IS_UTF8 0}\par
00028 {\cf21 #   else}\par
00029 {\cf21 #       define PLOG_CHAR_IS_UTF8 1}\par
00030 {\cf21 #   endif}\par
00031 {\cf21 #endif}\par
00032 \par
00033 {\cf21 #ifdef _WIN32}\par
00034 {\cf21 #   if defined(PLOG_EXPORT)}\par
00035 {\cf21 #       define PLOG_LINKAGE __declspec(dllexport)}\par
00036 {\cf21 #   elif defined(PLOG_IMPORT)}\par
00037 {\cf21 #       define PLOG_LINKAGE __declspec(dllimport)}\par
00038 {\cf21 #   endif}\par
00039 {\cf21 #   if defined(PLOG_GLOBAL)}\par
00040 {\cf21 #       error "PLOG_GLOBAL isn't supported on Windows"}\par
00041 {\cf21 #   endif}\par
00042 {\cf21 #else}\par
00043 {\cf21 #   if defined(PLOG_GLOBAL)}\par
00044 {\cf21 #       define PLOG_LINKAGE __attribute__ ((visibility ("default")))}\par
00045 {\cf21 #   elif defined(PLOG_LOCAL)}\par
00046 {\cf21 #       define PLOG_LINKAGE __attribute__ ((visibility ("hidden")))}\par
00047 {\cf21 #       define PLOG_LINKAGE_HIDDEN PLOG_LINKAGE}\par
00048 {\cf21 #   endif}\par
00049 {\cf21 #   if defined(PLOG_EXPORT) || defined(PLOG_IMPORT)}\par
00050 {\cf21 #       error "PLOG_EXPORT/PLOG_IMPORT is supported only on Windows"}\par
00051 {\cf21 #   endif}\par
00052 {\cf21 #endif}\par
00053 \par
00054 {\cf21 #ifndef PLOG_LINKAGE}\par
00055 {\cf21 #   define PLOG_LINKAGE}\par
00056 {\cf21 #endif}\par
00057 \par
00058 {\cf21 #ifndef PLOG_LINKAGE_HIDDEN}\par
00059 {\cf21 #   define PLOG_LINKAGE_HIDDEN}\par
00060 {\cf21 #endif}\par
00061 \par
00062 {\cf21 #ifdef _WIN32}\par
00063 {\cf21 #   include <plog/WinApi.h>}\par
00064 {\cf21 #   include <time.h>}\par
00065 {\cf21 #   include <sys/timeb.h>}\par
00066 {\cf21 #   include <io.h>}\par
00067 {\cf21 #   include <share.h>}\par
00068 {\cf21 #else}\par
00069 {\cf21 #   include <unistd.h>}\par
00070 {\cf21 #   include <sys/time.h>}\par
00071 {\cf21 #   if defined(__linux__) || defined(__FreeBSD__)}\par
00072 {\cf21 #       include <sys/syscall.h>}\par
00073 {\cf21 #   elif defined(__rtems__)}\par
00074 {\cf21 #       include <rtems.h>}\par
00075 {\cf21 #   endif}\par
00076 {\cf21 #   if defined(_POSIX_THREADS)}\par
00077 {\cf21 #       include <pthread.h>}\par
00078 {\cf21 #   endif}\par
00079 {\cf21 #   if PLOG_ENABLE_WCHAR_INPUT}\par
00080 {\cf21 #       include <iconv.h>}\par
00081 {\cf21 #   endif}\par
00082 {\cf21 #endif}\par
00083 \par
00084 {\cf21 #if PLOG_CHAR_IS_UTF8}\par
00085 {\cf21 #   define PLOG_NSTR(x)    x}\par
00086 {\cf21 #else}\par
00087 {\cf21 #   define _PLOG_NSTR(x)   L##x}\par
00088 {\cf21 #   define PLOG_NSTR(x)    _PLOG_NSTR(x)}\par
00089 {\cf21 #endif}\par
00090 \par
00091 {\cf21 #ifdef _WIN32}\par
00092 {\cf21 #   define PLOG_CDECL      __cdecl}\par
00093 {\cf21 #else}\par
00094 {\cf21 #   define PLOG_CDECL}\par
00095 {\cf21 #endif}\par
00096 \par
00097 {\cf21 #if __cplusplus >= 201103L || defined(_MSC_VER) && _MSC_VER >= 1700}\par
00098 {\cf21 #   define PLOG_OVERRIDE override}\par
00099 {\cf21 #else}\par
00100 {\cf21 #   define PLOG_OVERRIDE}\par
00101 {\cf21 #endif}\par
00102 \par
00103 {\cf17 namespace }plog\par
00104 \{\par
00105     {\cf17 namespace }util\par
00106     \{\par
00107 {\cf21 #if PLOG_CHAR_IS_UTF8}\par
00108         {\cf17 typedef} std::string nstring;\par
00109         {\cf17 typedef} std::ostringstream nostringstream;\par
00110         {\cf17 typedef} std::istringstream nistringstream;\par
00111         {\cf17 typedef} std::ostream nostream;\par
00112         {\cf17 typedef} {\cf18 char} nchar;\par
00113 {\cf21 #else}\par
00114         {\cf17 typedef} std::wstring nstring;\par
00115         {\cf17 typedef} std::wostringstream nostringstream;\par
00116         {\cf17 typedef} std::wistringstream nistringstream;\par
00117         {\cf17 typedef} std::wostream nostream;\par
00118         {\cf17 typedef} {\cf18 wchar_t} nchar;\par
00119 {\cf21 #endif}\par
00120 \par
00121         {\cf17 inline} {\cf18 void} localtime_s({\cf17 struct} tm* t, {\cf17 const} time_t* time)\par
00122         \{\par
00123 {\cf21 #if defined(_WIN32) && defined(__BORLANDC__)}\par
00124             ::localtime_s(time, t);\par
00125 {\cf21 #elif defined(_WIN32) && defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR)}\par
00126             *t = *::localtime(time);\par
00127 {\cf21 #elif defined(_WIN32)}\par
00128             ::localtime_s(t, time);\par
00129 {\cf21 #else}\par
00130             ::localtime_r(time, t);\par
00131 {\cf21 #endif}\par
00132         \}\par
00133 \par
00134         {\cf17 inline} {\cf18 void} gmtime_s({\cf17 struct} tm* t, {\cf17 const} time_t* time)\par
00135         \{\par
00136 {\cf21 #if defined(_WIN32) && defined(__BORLANDC__)}\par
00137             ::gmtime_s(time, t);\par
00138 {\cf21 #elif defined(_WIN32) && defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR)}\par
00139             *t = *::gmtime(time);\par
00140 {\cf21 #elif defined(_WIN32)}\par
00141             ::gmtime_s(t, time);\par
00142 {\cf21 #else}\par
00143             ::gmtime_r(time, t);\par
00144 {\cf21 #endif}\par
00145         \}\par
00146 \par
00147 {\cf21 #ifdef _WIN32}\par
00148         {\cf17 typedef} timeb Time;\par
00149 \par
00150         {\cf17 inline} {\cf18 void} ftime(Time* t)\par
00151         \{\par
00152             ::ftime(t);\par
00153         \}\par
00154 {\cf21 #else}\par
00155         {\cf17 struct }Time\par
00156         \{\par
00157             time_t time;\par
00158             {\cf18 unsigned} {\cf18 short} millitm;\par
00159         \};\par
00160 \par
00161         {\cf17 inline} {\cf18 void} ftime(Time* t)\par
00162         \{\par
00163             timeval tv;\par
00164             ::gettimeofday(&tv, NULL);\par
00165 \par
00166             t->time = tv.tv_sec;\par
00167             t->millitm = {\cf17 static_cast<}{\cf18 unsigned} {\cf18 short}{\cf17 >}(tv.tv_usec / 1000);\par
00168         \}\par
00169 {\cf21 #endif}\par
00170 \par
00171         {\cf17 inline} {\cf18 unsigned} {\cf18 int} gettid()\par
00172         \{\par
00173 {\cf21 #ifdef _WIN32}\par
00174             {\cf19 return} GetCurrentThreadId();\par
00175 {\cf21 #elif defined(__linux__)}\par
00176             {\cf19 return} {\cf17 static_cast<}{\cf18 unsigned} {\cf18 int}{\cf17 >}(::syscall(__NR_gettid));\par
00177 {\cf21 #elif defined(__FreeBSD__)}\par
00178             {\cf18 long} tid;\par
00179             syscall(SYS_thr_self, &tid);\par
00180             {\cf19 return} {\cf17 static_cast<}{\cf18 unsigned} {\cf18 int}{\cf17 >}(tid);\par
00181 {\cf21 #elif defined(__rtems__)}\par
00182             {\cf19 return} rtems_task_self();\par
00183 {\cf21 #elif defined(__APPLE__)}\par
00184             uint64_t tid64;\par
00185             pthread_threadid_np(NULL, &tid64);\par
00186             {\cf19 return} {\cf17 static_cast<}{\cf18 unsigned} {\cf18 int}{\cf17 >}(tid64);\par
00187 {\cf21 #else}\par
00188             {\cf19 return} 0;\par
00189 {\cf21 #endif}\par
00190         \}\par
00191 \par
00192 {\cf21 #ifndef _GNU_SOURCE}\par
00193     {\cf17 inline} {\cf18 int} vasprintf({\cf18 char}** strp, {\cf17 const} {\cf18 char}* format, va_list ap)\par
00194     \{\par
00195         va_list ap_copy;\par
00196 {\cf21 #if defined(_MSC_VER) && _MSC_VER <= 1600}\par
00197         ap_copy = ap; {\cf20 // there is no va_copy on Visual Studio 2010}\par
00198 {\cf21 #else}\par
00199         va_copy(ap_copy, ap);\par
00200 {\cf21 #endif}\par
00201 {\cf21 #ifndef __STDC_SECURE_LIB__}\par
00202         {\cf18 int} charCount = vsnprintf(NULL, 0, format, ap_copy);\par
00203 {\cf21 #else}\par
00204         {\cf18 int} charCount = _vscprintf(format, ap_copy);\par
00205 {\cf21 #endif}\par
00206         va_end(ap_copy);\par
00207         {\cf19 if} (charCount < 0)\par
00208         \{\par
00209             {\cf19 return} -1;\par
00210         \}\par
00211 \par
00212         {\cf18 size_t} bufferCharCount = {\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(charCount) + 1;\par
00213 \par
00214         {\cf18 char}* str = {\cf17 static_cast<}{\cf18 char}*{\cf17 >}(malloc(bufferCharCount));\par
00215         {\cf19 if} (!str)\par
00216         \{\par
00217             {\cf19 return} -1;\par
00218         \}\par
00219 \par
00220 {\cf21 #ifndef __STDC_SECURE_LIB__}\par
00221         {\cf18 int} retval = vsnprintf(str, bufferCharCount, format, ap);\par
00222 {\cf21 #else}\par
00223         {\cf18 int} retval = vsnprintf_s(str, bufferCharCount, {\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(-1), format, ap);\par
00224 {\cf21 #endif}\par
00225         {\cf19 if} (retval < 0)\par
00226         \{\par
00227             free(str);\par
00228             {\cf19 return} -1;\par
00229         \}\par
00230 \par
00231         *strp = str;\par
00232         {\cf19 return} retval;\par
00233     \}\par
00234 {\cf21 #endif}\par
00235 \par
00236 {\cf21 #ifdef _WIN32}\par
00237     {\cf17 inline} {\cf18 int} vaswprintf({\cf18 wchar_t}** strp, {\cf17 const} {\cf18 wchar_t}* format, va_list ap)\par
00238     \{\par
00239 {\cf21 #if defined(__BORLANDC__)}\par
00240         {\cf18 int} charCount = 0x1000; {\cf20 // there is no _vscwprintf on Borland/Embarcadero}\par
00241 {\cf21 #else}\par
00242         {\cf18 int} charCount = _vscwprintf(format, ap);\par
00243         {\cf19 if} (charCount < 0)\par
00244         \{\par
00245             {\cf19 return} -1;\par
00246         \}\par
00247 {\cf21 #endif}\par
00248 \par
00249         {\cf18 size_t} bufferCharCount = {\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(charCount) + 1;\par
00250 \par
00251         {\cf18 wchar_t}* str = {\cf17 static_cast<}{\cf18 wchar_t}*{\cf17 >}(malloc(bufferCharCount * {\cf17 sizeof}({\cf18 wchar_t})));\par
00252         {\cf19 if} (!str)\par
00253         \{\par
00254             {\cf19 return} -1;\par
00255         \}\par
00256 \par
00257 {\cf21 #if defined(__BORLANDC__)}\par
00258         {\cf18 int} retval = vsnwprintf_s(str, bufferCharCount, format, ap);\par
00259 {\cf21 #elif defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR)}\par
00260         {\cf18 int} retval = _vsnwprintf(str, bufferCharCount, format, ap);\par
00261 {\cf21 #else}\par
00262         {\cf18 int} retval = _vsnwprintf_s(str, bufferCharCount, charCount, format, ap);\par
00263 {\cf21 #endif}\par
00264         {\cf19 if} (retval < 0)\par
00265         \{\par
00266             free(str);\par
00267             {\cf19 return} -1;\par
00268         \}\par
00269 \par
00270         *strp = str;\par
00271         {\cf19 return} retval;\par
00272     \}\par
00273 {\cf21 #endif}\par
00274 \par
00275 {\cf21 #ifdef _WIN32}\par
00276         {\cf17 inline} std::wstring toWide({\cf17 const} {\cf18 char}* str, UINT cp = codePage::kChar)\par
00277         \{\par
00278             {\cf18 size_t} len = ::strlen(str);\par
00279             std::wstring wstr(len, 0);\par
00280 \par
00281             {\cf19 if} (!wstr.empty())\par
00282             \{\par
00283                 {\cf18 int} wlen = MultiByteToWideChar(cp, 0, str, {\cf17 static_cast<}{\cf18 int}{\cf17 >}(len), &wstr[0], {\cf17 static_cast<}{\cf18 int}{\cf17 >}(wstr.size()));\par
00284                 wstr.resize(wlen);\par
00285             \}\par
00286 \par
00287             {\cf19 return} wstr;\par
00288         \}\par
00289 \par
00290         {\cf17 inline} std::wstring toWide({\cf17 const} std::string& str, UINT cp = codePage::kChar)\par
00291         \{\par
00292             {\cf19 return} toWide(str.c_str(), cp);\par
00293         \}\par
00294 \par
00295         {\cf17 inline} {\cf17 const} std::wstring& toWide({\cf17 const} std::wstring& str) {\cf20 // do nothing for already wide string}\par
00296         \{\par
00297             {\cf19 return} str;\par
00298         \}\par
00299 \par
00300         {\cf17 inline} std::string toNarrow({\cf17 const} std::wstring& wstr, {\cf18 long} page)\par
00301         \{\par
00302             {\cf18 int} len = WideCharToMultiByte(page, 0, wstr.c_str(), {\cf17 static_cast<}{\cf18 int}{\cf17 >}(wstr.size()), 0, 0, 0, 0);\par
00303             std::string str(len, 0);\par
00304 \par
00305             {\cf19 if} (!str.empty())\par
00306             \{\par
00307                 WideCharToMultiByte(page, 0, wstr.c_str(), {\cf17 static_cast<}{\cf18 int}{\cf17 >}(wstr.size()), &str[0], len, 0, 0);\par
00308             \}\par
00309 \par
00310             {\cf19 return} str;\par
00311         \}\par
00312 {\cf21 #elif PLOG_ENABLE_WCHAR_INPUT}\par
00313         {\cf17 inline} std::string toNarrow({\cf17 const} {\cf18 wchar_t}* wstr)\par
00314         \{\par
00315             {\cf18 size_t} wlen = ::wcslen(wstr);\par
00316             std::string str(wlen * {\cf17 sizeof}({\cf18 wchar_t}), 0);\par
00317 \par
00318             {\cf19 if} (!str.empty())\par
00319             \{\par
00320                 {\cf17 const} {\cf18 char}* in = {\cf17 reinterpret_cast<}{\cf17 const }{\cf18 char}*{\cf17 >}(&wstr[0]);\par
00321                 {\cf18 char}* out = &str[0];\par
00322                 {\cf18 size_t} inBytes = wlen * {\cf17 sizeof}(wchar_t);\par
00323                 {\cf18 size_t} outBytes = str.size();\par
00324 \par
00325                 iconv_t cd = ::iconv_open({\cf22 "UTF-8"}, {\cf22 "WCHAR_T"});\par
00326                 ::iconv(cd, {\cf17 const_cast<}{\cf18 char}**{\cf17 >}(&in), &inBytes, &out, &outBytes);\par
00327                 ::iconv_close(cd);\par
00328 \par
00329                 str.resize(str.size() - outBytes);\par
00330             \}\par
00331 \par
00332             {\cf19 return} str;\par
00333         \}\par
00334 {\cf21 #endif}\par
00335 \par
00336         {\cf17 inline} std::string processFuncName({\cf17 const} {\cf18 char}* func)\par
00337         \{\par
00338 {\cf21 #if (defined(_WIN32) && !defined(__MINGW32__)) || defined(__OBJC__)}\par
00339             {\cf19 return} std::string(func);\par
00340 {\cf21 #else}\par
00341             {\cf17 const} {\cf18 char}* funcBegin = func;\par
00342             {\cf17 const} {\cf18 char}* funcEnd = ::strchr(funcBegin, {\cf23 '('});\par
00343             {\cf18 int} foundTemplate = 0;\par
00344 \par
00345             {\cf19 if} (!funcEnd)\par
00346             \{\par
00347                 {\cf19 return} std::string(func);\par
00348             \}\par
00349 \par
00350             {\cf19 for} ({\cf17 const} {\cf18 char}* i = funcEnd - 1; i >= funcBegin; --i) {\cf20 // search backwards for the first space char}\par
00351             \{\par
00352                 {\cf19 if} (*i == {\cf23 '>'})\par
00353                 \{\par
00354                     foundTemplate++;\par
00355                 \}\par
00356                 {\cf19 else} {\cf19 if} (*i == {\cf23 '<'})\par
00357                 \{\par
00358                     foundTemplate--;\par
00359                 \}\par
00360                 {\cf19 else} {\cf19 if} (*i == {\cf23 ' '} && foundTemplate == 0)\par
00361                 \{\par
00362                     funcBegin = i + 1;\par
00363                     {\cf19 break};\par
00364                 \}\par
00365             \}\par
00366 \par
00367             {\cf19 return} std::string(funcBegin, funcEnd);\par
00368 {\cf21 #endif}\par
00369         \}\par
00370 \par
00371         {\cf17 inline} {\cf17 const} nchar* findExtensionDot({\cf17 const} nchar* fileName)\par
00372         \{\par
00373 {\cf21 #if PLOG_CHAR_IS_UTF8}\par
00374             {\cf19 return} std::strrchr(fileName, {\cf23 '.'});\par
00375 {\cf21 #else}\par
00376             {\cf19 return} std::wcsrchr(fileName, L{\cf23 '.'});\par
00377 {\cf21 #endif}\par
00378         \}\par
00379 \par
00380         {\cf17 inline} {\cf18 void} splitFileName({\cf17 const} nchar* fileName, nstring& fileNameNoExt, nstring& fileExt)\par
00381         \{\par
00382             {\cf17 const} nchar* dot = findExtensionDot(fileName);\par
00383 \par
00384             {\cf19 if} (dot)\par
00385             \{\par
00386                 fileNameNoExt.assign(fileName, dot);\par
00387                 fileExt.assign(dot + 1);\par
00388             \}\par
00389             {\cf19 else}\par
00390             \{\par
00391                 fileNameNoExt.assign(fileName);\par
00392                 fileExt.clear();\par
00393             \}\par
00394         \}\par
00395 \par
00396         {\cf17 class }PLOG_LINKAGE NonCopyable\par
00397         \{\par
00398         {\cf17 protected}:\par
00399             NonCopyable()\par
00400             \{\par
00401             \}\par
00402 \par
00403         {\cf17 private}:\par
00404             NonCopyable({\cf17 const} NonCopyable&);\par
00405             NonCopyable& operator=({\cf17 const} NonCopyable&);\par
00406         \};\par
00407 \par
00408         {\cf17 class }PLOG_LINKAGE_HIDDEN File : NonCopyable\par
00409         \{\par
00410         {\cf17 public}:\par
00411             File() : m_file(-1)\par
00412             \{\par
00413             \}\par
00414 \par
00415             ~File()\par
00416             \{\par
00417                 close();\par
00418             \}\par
00419 \par
00420             {\cf18 size_t} open({\cf17 const} nstring& fileName)\par
00421             \{\par
00422 {\cf21 #if defined(_WIN32) && (defined(__BORLANDC__) || defined(__MINGW32__))}\par
00423                 m_file = ::_wsopen(toWide(fileName).c_str(), _O_CREAT | _O_WRONLY | _O_BINARY | _O_NOINHERIT, SH_DENYWR, _S_IREAD | _S_IWRITE);\par
00424 {\cf21 #elif defined(_WIN32)}\par
00425                 ::_wsopen_s(&m_file, toWide(fileName).c_str(), _O_CREAT | _O_WRONLY | _O_BINARY | _O_NOINHERIT, _SH_DENYWR, _S_IREAD | _S_IWRITE);\par
00426 {\cf21 #elif defined(O_CLOEXEC)}\par
00427                 m_file = ::open(fileName.c_str(), O_CREAT | O_APPEND | O_WRONLY | O_CLOEXEC, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);\par
00428 {\cf21 #else}\par
00429                 m_file = ::open(fileName.c_str(), O_CREAT | O_APPEND | O_WRONLY, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);\par
00430 {\cf21 #endif}\par
00431                 {\cf19 return} seek(0, SEEK_END);\par
00432             \}\par
00433 \par
00434             {\cf18 size_t} write({\cf17 const} {\cf18 void}* buf, {\cf18 size_t} count)\par
00435             \{\par
00436                 {\cf19 return} m_file != -1 ? {\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(\par
00437 {\cf21 #ifdef _WIN32}\par
00438                     ::_write(m_file, buf, {\cf17 static_cast<}{\cf18 unsigned} {\cf18 int}{\cf17 >}(count))\par
00439 {\cf21 #else}\par
00440                     ::write(m_file, buf, count)\par
00441 {\cf21 #endif}\par
00442                     ) : {\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(-1);\par
00443             \}\par
00444 \par
00445             {\cf17 template}<{\cf17 class} CharType>\par
00446             {\cf18 size_t} write({\cf17 const} std::basic_string<CharType>& str)\par
00447             \{\par
00448                 {\cf19 return} write(str.data(), str.size() * {\cf17 sizeof}(CharType));\par
00449             \}\par
00450 \par
00451             {\cf18 size_t} seek({\cf18 size_t} offset, {\cf18 int} whence)\par
00452             \{\par
00453                 {\cf19 return} m_file != -1 ? {\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(\par
00454 {\cf21 #if defined(_WIN32) && (defined(__BORLANDC__) || defined(__MINGW32__))}\par
00455                     ::_lseek(m_file, {\cf17 static_cast<}off_t{\cf17 >}(offset), whence)\par
00456 {\cf21 #elif defined(_WIN32)}\par
00457                     ::_lseeki64(m_file, {\cf17 static_cast<}off_t{\cf17 >}(offset), whence)\par
00458 {\cf21 #else}\par
00459                     ::lseek(m_file, {\cf17 static_cast<}off_t{\cf17 >}(offset), whence)\par
00460 {\cf21 #endif}\par
00461                     ) : {\cf17 static_cast<}{\cf18 size_t}{\cf17 >}(-1);\par
00462             \}\par
00463 \par
00464             {\cf18 void} close()\par
00465             \{\par
00466                 {\cf19 if} (m_file != -1)\par
00467                 \{\par
00468 {\cf21 #ifdef _WIN32}\par
00469                     ::_close(m_file);\par
00470 {\cf21 #else}\par
00471                     ::close(m_file);\par
00472 {\cf21 #endif}\par
00473                     m_file = -1;\par
00474                 \}\par
00475             \}\par
00476 \par
00477             {\cf17 static} {\cf18 int} unlink({\cf17 const} nstring& fileName)\par
00478             \{\par
00479 {\cf21 #ifdef _WIN32}\par
00480                 return ::_wunlink(toWide(fileName).c_str());\par
00481 {\cf21 #else}\par
00482                 return ::unlink(fileName.c_str());\par
00483 {\cf21 #endif}\par
00484             \}\par
00485 \par
00486             {\cf17 static} {\cf18 int} rename({\cf17 const} nstring& oldFilename, {\cf17 const} nstring& newFilename)\par
00487             \{\par
00488 {\cf21 #ifdef _WIN32}\par
00489                 {\cf19 return} MoveFileW(toWide(oldFilename).c_str(), toWide(newFilename).c_str());\par
00490 {\cf21 #else}\par
00491                 return ::rename(oldFilename.c_str(), newFilename.c_str());\par
00492 {\cf21 #endif}\par
00493             \}\par
00494 \par
00495         {\cf17 private}:\par
00496             {\cf18 int} m_file;\par
00497         \};\par
00498 \par
00499         {\cf17 class }PLOG_LINKAGE_HIDDEN Mutex : NonCopyable\par
00500         \{\par
00501         {\cf17 public}:\par
00502             Mutex()\par
00503             \{\par
00504 {\cf21 #ifdef _WIN32}\par
00505                 InitializeCriticalSection(&m_sync);\par
00506 {\cf21 #elif defined(__rtems__)}\par
00507                 rtems_semaphore_create(0, 1,\par
00508                             RTEMS_PRIORITY |\par
00509                             RTEMS_BINARY_SEMAPHORE |\par
00510                             RTEMS_INHERIT_PRIORITY, 1, &m_sync);\par
00511 {\cf21 #elif defined(_POSIX_THREADS)}\par
00512                 ::pthread_mutex_init(&m_sync, 0);\par
00513 {\cf21 #endif}\par
00514             \}\par
00515 \par
00516             ~Mutex()\par
00517             \{\par
00518 {\cf21 #ifdef _WIN32}\par
00519                 DeleteCriticalSection(&m_sync);\par
00520 {\cf21 #elif defined(__rtems__)}\par
00521                 rtems_semaphore_delete(m_sync);\par
00522 {\cf21 #elif defined(_POSIX_THREADS)}\par
00523                 ::pthread_mutex_destroy(&m_sync);\par
00524 {\cf21 #endif}\par
00525             \}\par
00526 \par
00527             {\cf17 friend} {\cf17 class }MutexLock;\par
00528 \par
00529         {\cf17 private}:\par
00530             {\cf18 void} lock()\par
00531             \{\par
00532 {\cf21 #ifdef _WIN32}\par
00533                 EnterCriticalSection(&m_sync);\par
00534 {\cf21 #elif defined(__rtems__)}\par
00535                 rtems_semaphore_obtain(m_sync, RTEMS_WAIT, RTEMS_NO_TIMEOUT);\par
00536 {\cf21 #elif defined(_POSIX_THREADS)}\par
00537                 ::pthread_mutex_lock(&m_sync);\par
00538 {\cf21 #endif}\par
00539             \}\par
00540 \par
00541             {\cf18 void} unlock()\par
00542             \{\par
00543 {\cf21 #ifdef _WIN32}\par
00544                 LeaveCriticalSection(&m_sync);\par
00545 {\cf21 #elif defined(__rtems__)}\par
00546                 rtems_semaphore_release(m_sync);\par
00547 {\cf21 #elif defined(_POSIX_THREADS)}\par
00548                 ::pthread_mutex_unlock(&m_sync);\par
00549 {\cf21 #endif}\par
00550             \}\par
00551 \par
00552         {\cf17 private}:\par
00553 {\cf21 #ifdef _WIN32}\par
00554             CRITICAL_SECTION m_sync;\par
00555 {\cf21 #elif defined(__rtems__)}\par
00556             rtems_id m_sync;\par
00557 {\cf21 #elif defined(_POSIX_THREADS)}\par
00558             pthread_mutex_t m_sync;\par
00559 {\cf21 #endif}\par
00560         \};\par
00561 \par
00562         {\cf17 class }PLOG_LINKAGE_HIDDEN MutexLock : NonCopyable\par
00563         \{\par
00564         {\cf17 public}:\par
00565             MutexLock(Mutex& mutex) : m_mutex(mutex)\par
00566             \{\par
00567                 m_mutex.lock();\par
00568             \}\par
00569 \par
00570             ~MutexLock()\par
00571             \{\par
00572                 m_mutex.unlock();\par
00573             \}\par
00574 \par
00575         {\cf17 private}:\par
00576             Mutex& m_mutex;\par
00577         \};\par
00578 \par
00579         {\cf17 template}<{\cf17 class} T>\par
00580 {\cf21 #ifdef _WIN32}\par
00581         {\cf17 class }Singleton : NonCopyable\par
00582 {\cf21 #else}\par
00583         class PLOG_LINKAGE Singleton : NonCopyable\par
00584 {\cf21 #endif}\par
00585         \{\par
00586         {\cf17 public}:\par
00587 {\cf21 #if (defined(__clang__) || defined(__GNUC__) && __GNUC__ >= 8) && !defined(__BORLANDC__)}\par
00588             {\cf20 // This constructor is called before the `T` object is fully constructed, and}\par
00589             {\cf20 // pointers are not dereferenced anyway, so UBSan shouldn't check vptrs.}\par
00590             __attribute__((no_sanitize({\cf22 "vptr"})))\par
00591 {\cf21 #endif}\par
00592             Singleton()\par
00593             \{\par
00594                 assert(!m_instance);\par
00595                 m_instance = {\cf17 static_cast<}T*{\cf17 >}({\cf17 this});\par
00596             \}\par
00597 \par
00598             ~Singleton()\par
00599             \{\par
00600                 assert(m_instance);\par
00601                 m_instance = 0;\par
00602             \}\par
00603 \par
00604             {\cf17 static} T* getInstance()\par
00605             \{\par
00606                 {\cf19 return} m_instance;\par
00607             \}\par
00608 \par
00609         {\cf17 private}:\par
00610             {\cf17 static} T* m_instance;\par
00611         \};\par
00612 \par
00613         {\cf17 template}<{\cf17 class} T>\par
00614         T* Singleton<T>::m_instance = NULL;\par
00615     \}\par
00616 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/plog/WinApi.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/plog/WinApi.h}
{\xe \v src/include/plog/WinApi.h}
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WinApi.h\par \pard\plain 
{\tc\tcl2 \v src/include/plog/WinApi.h}
{\xe \v src/include/plog/WinApi.h}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #pragma once}\par
00002 \par
00003 {\cf21 #ifdef _WIN32}\par
00004 \par
00005 {\cf20 // These windows structs must be in a global namespace}\par
00006 {\cf17 struct }HKEY__;\par
00007 {\cf17 struct }_SECURITY_ATTRIBUTES;\par
00008 {\cf17 struct }_CONSOLE_SCREEN_BUFFER_INFO;\par
00009 {\cf17 struct }_RTL_CRITICAL_SECTION;\par
00010 \par
00011 {\cf17 namespace }plog\par
00012 \{\par
00013     {\cf17 typedef} {\cf18 unsigned} {\cf18 long} DWORD;\par
00014     {\cf17 typedef} {\cf18 unsigned} {\cf18 short} WORD;\par
00015     {\cf17 typedef} {\cf18 unsigned} {\cf18 char} BYTE;\par
00016     {\cf17 typedef} {\cf18 unsigned} {\cf18 int} UINT;\par
00017     {\cf17 typedef} {\cf18 int} BOOL;\par
00018     {\cf17 typedef} {\cf18 long} LSTATUS;\par
00019     {\cf17 typedef} {\cf18 char}* LPSTR;\par
00020     {\cf17 typedef} {\cf18 wchar_t}* LPWSTR;\par
00021     {\cf17 typedef} {\cf17 const} {\cf18 char}* LPCSTR;\par
00022     {\cf17 typedef} {\cf17 const} {\cf18 wchar_t}* LPCWSTR;\par
00023     {\cf17 typedef} {\cf18 void}* HANDLE;\par
00024     {\cf17 typedef} HKEY__* HKEY;\par
00025     {\cf17 typedef} {\cf18 size_t} ULONG_PTR;\par
00026 \par
00027     {\cf17 struct }CRITICAL_SECTION\par
00028     \{\par
00029         {\cf18 void}* DebugInfo;\par
00030         {\cf18 long} LockCount;\par
00031         {\cf18 long} RecursionCount;\par
00032         HANDLE OwningThread;\par
00033         HANDLE LockSemaphore;\par
00034         ULONG_PTR SpinCount;\par
00035     \};\par
00036 \par
00037     {\cf17 struct }COORD\par
00038     \{\par
00039         {\cf18 short} X;\par
00040         {\cf18 short} Y;\par
00041     \};\par
00042 \par
00043     {\cf17 struct }SMALL_RECT\par
00044     \{\par
00045         {\cf18 short} Left;\par
00046         {\cf18 short} Top;\par
00047         {\cf18 short} Right;\par
00048         {\cf18 short} Bottom;\par
00049     \};\par
00050 \par
00051     {\cf17 struct }CONSOLE_SCREEN_BUFFER_INFO\par
00052     \{\par
00053         COORD dwSize;\par
00054         COORD dwCursorPosition;\par
00055         WORD  wAttributes;\par
00056         SMALL_RECT srWindow;\par
00057         COORD dwMaximumWindowSize;\par
00058     \};\par
00059 \par
00060     {\cf17 namespace }codePage\par
00061     \{\par
00062         {\cf17 const} UINT kActive = 0;\par
00063         {\cf17 const} UINT kUTF8 = 65001;\par
00064 {\cf21 #if PLOG_CHAR_IS_UTF8}\par
00065         {\cf17 const} UINT kChar = kUTF8;\par
00066 {\cf21 #else}\par
00067         {\cf17 const} UINT kChar = kActive;\par
00068 {\cf21 #endif}\par
00069     \}\par
00070 \par
00071     {\cf17 namespace }eventLog\par
00072     \{\par
00073         {\cf17 const} WORD kErrorType = 0x0001;\par
00074         {\cf17 const} WORD kWarningType = 0x0002;\par
00075         {\cf17 const} WORD kInformationType = 0x0004;\par
00076     \}\par
00077 \par
00078     {\cf17 namespace }hkey\par
00079     \{\par
00080         {\cf17 const} HKEY kLocalMachine = {\cf17 reinterpret_cast<}HKEY{\cf17 >}({\cf17 static_cast<}ULONG_PTR{\cf17 >}(0x80000002));\par
00081     \}\par
00082 \par
00083     {\cf17 namespace }regSam\par
00084     \{\par
00085         {\cf17 const} DWORD kQueryValue = 0x0001;\par
00086         {\cf17 const} DWORD kSetValue = 0x0002;\par
00087     \}\par
00088 \par
00089     {\cf17 namespace }regType\par
00090     \{\par
00091         {\cf17 const} DWORD kExpandSz = 2;\par
00092         {\cf17 const} DWORD kDword = 4;\par
00093     \}\par
00094 \par
00095      {\cf17 namespace }stdHandle\par
00096     \{\par
00097         {\cf17 const} DWORD kOutput = {\cf17 static_cast<}DWORD{\cf17 >}(-11);\par
00098         {\cf17 const} DWORD kErrorOutput = {\cf17 static_cast<}DWORD{\cf17 >}(-12);\par
00099     \}\par
00100 \par
00101     {\cf17 namespace }foreground\par
00102     \{\par
00103         {\cf17 const} WORD kBlue = 0x0001;\par
00104         {\cf17 const} WORD kGreen = 0x0002;\par
00105         {\cf17 const} WORD kRed = 0x0004;\par
00106         {\cf17 const} WORD kIntensity = 0x0008;\par
00107     \}\par
00108 \par
00109     {\cf17 namespace }background\par
00110     \{\par
00111         {\cf17 const} WORD kBlue = 0x0010;\par
00112         {\cf17 const} WORD kGreen = 0x0020;\par
00113         {\cf17 const} WORD kRed = 0x0040;\par
00114         {\cf17 const} WORD kIntensity = 0x0080;\par
00115     \}\par
00116 \par
00117     {\cf17 extern} {\cf22 "C"}\par
00118     \{\par
00119         __declspec(dllimport) {\cf18 int} __stdcall MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, {\cf18 int} cbMultiByte, LPWSTR lpWideCharStr, {\cf18 int} cchWideChar);\par
00120         __declspec(dllimport) {\cf18 int} __stdcall WideCharToMultiByte(UINT CodePage, DWORD dwFlags, LPCWSTR lpWideCharStr, {\cf18 int} cchWideChar, LPSTR lpMultiByteStr, {\cf18 int} cbMultiByte, {\cf17 const} {\cf18 char}* lpDefaultChar, BOOL* lpUsedDefaultChar);\par
00121 \par
00122         __declspec(dllimport) DWORD __stdcall GetCurrentThreadId();\par
00123 \par
00124         __declspec(dllimport) BOOL __stdcall MoveFileW(LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName);\par
00125 \par
00126         __declspec(dllimport) {\cf18 void} __stdcall InitializeCriticalSection(_RTL_CRITICAL_SECTION* lpCriticalSection);\par
00127         __declspec(dllimport) {\cf18 void} __stdcall EnterCriticalSection(_RTL_CRITICAL_SECTION* lpCriticalSection);\par
00128         __declspec(dllimport) {\cf18 void} __stdcall LeaveCriticalSection(_RTL_CRITICAL_SECTION* lpCriticalSection);\par
00129         __declspec(dllimport) {\cf18 void} __stdcall DeleteCriticalSection(_RTL_CRITICAL_SECTION* lpCriticalSection);\par
00130 \par
00131         __declspec(dllimport) HANDLE __stdcall RegisterEventSourceW(LPCWSTR lpUNCServerName, LPCWSTR lpSourceName);\par
00132         __declspec(dllimport) BOOL __stdcall DeregisterEventSource(HANDLE hEventLog);\par
00133         __declspec(dllimport) BOOL __stdcall ReportEventW(HANDLE hEventLog, WORD wType, WORD wCategory, DWORD dwEventID, {\cf18 void}* lpUserSid, WORD wNumStrings, DWORD dwDataSize, LPCWSTR* lpStrings, {\cf18 void}* lpRawData);\par
00134 \par
00135         __declspec(dllimport) LSTATUS __stdcall RegCreateKeyExW(HKEY hKey, LPCWSTR lpSubKey, DWORD Reserved, LPWSTR lpClass, DWORD dwOptions, DWORD samDesired, _SECURITY_ATTRIBUTES* lpSecurityAttributes, HKEY* phkResult, DWORD* lpdwDisposition);\par
00136         __declspec(dllimport) LSTATUS __stdcall RegSetValueExW(HKEY hKey, LPCWSTR lpValueName, DWORD Reserved, DWORD dwType, {\cf17 const} BYTE* lpData, DWORD cbData);\par
00137         __declspec(dllimport) LSTATUS __stdcall RegCloseKey(HKEY hKey);\par
00138         __declspec(dllimport) LSTATUS __stdcall RegOpenKeyExW(HKEY hKey, LPCWSTR lpSubKey, DWORD ulOptions, DWORD samDesired, HKEY* phkResult);\par
00139         __declspec(dllimport) LSTATUS __stdcall RegDeleteKeyW(HKEY hKey, LPCWSTR lpSubKey);\par
00140 \par
00141         __declspec(dllimport) HANDLE __stdcall GetStdHandle(DWORD nStdHandle);\par
00142 \par
00143         __declspec(dllimport) BOOL __stdcall WriteConsoleW(HANDLE hConsoleOutput, {\cf17 const} {\cf18 void}* lpBuffer, DWORD nNumberOfCharsToWrite, DWORD* lpNumberOfCharsWritten, {\cf18 void}* lpReserved);\par
00144         __declspec(dllimport) BOOL __stdcall GetConsoleScreenBufferInfo(HANDLE hConsoleOutput, _CONSOLE_SCREEN_BUFFER_INFO* lpConsoleScreenBufferInfo);\par
00145         __declspec(dllimport) BOOL __stdcall SetConsoleTextAttribute(HANDLE hConsoleOutput, WORD wAttributes);\par
00146 \par
00147         __declspec(dllimport) {\cf18 void} __stdcall OutputDebugStringW(LPCWSTR lpOutputString);\par
00148     \}\par
00149 \par
00150     {\cf17 inline} {\cf18 void} InitializeCriticalSection(CRITICAL_SECTION* criticalSection)\par
00151     \{\par
00152         plog::InitializeCriticalSection({\cf17 reinterpret_cast<}_RTL_CRITICAL_SECTION*{\cf17 >}(criticalSection));\par
00153     \}\par
00154 \par
00155     {\cf17 inline} {\cf18 void} EnterCriticalSection(CRITICAL_SECTION* criticalSection)\par
00156     \{\par
00157         plog::EnterCriticalSection({\cf17 reinterpret_cast<}_RTL_CRITICAL_SECTION*{\cf17 >}(criticalSection));\par
00158     \}\par
00159 \par
00160     {\cf17 inline} {\cf18 void} LeaveCriticalSection(CRITICAL_SECTION* criticalSection)\par
00161     \{\par
00162         plog::LeaveCriticalSection({\cf17 reinterpret_cast<}_RTL_CRITICAL_SECTION*{\cf17 >}(criticalSection));\par
00163     \}\par
00164 \par
00165     {\cf17 inline} {\cf18 void} DeleteCriticalSection(CRITICAL_SECTION* criticalSection)\par
00166     \{\par
00167         plog::DeleteCriticalSection({\cf17 reinterpret_cast<}_RTL_CRITICAL_SECTION*{\cf17 >}(criticalSection));\par
00168     \}\par
00169 \par
00170     {\cf17 inline} BOOL GetConsoleScreenBufferInfo(HANDLE consoleOutput, CONSOLE_SCREEN_BUFFER_INFO* consoleScreenBufferInfo)\par
00171     \{\par
00172         {\cf19 return} plog::GetConsoleScreenBufferInfo(consoleOutput, {\cf17 reinterpret_cast<}_CONSOLE_SCREEN_BUFFER_INFO*{\cf17 >}(consoleScreenBufferInfo));\par
00173     \}\par
00174 \}\par
00175 {\cf21 #endif }{\cf20 // _WIN32}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/eventhub/file_sync.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/file_sync.cpp}
{\xe \v src/server/eventhub/file_sync.cpp}
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <plog/Log.h>}\par
{\f2 #include <sstream>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <vector>}\par
{\f2 #include "../../common/vars.hpp"}\par
{\f2 #include "file_sync.hpp"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
file_sync.cpp\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/file_sync.cpp}
{\xe \v src/server/eventhub/file_sync.cpp}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <plog/Log.h>}\par
00002 {\cf21 #include <sstream>}\par
00003 {\cf21 #include <stdlib.h>}\par
00004 {\cf21 #include <string>}\par
00005 {\cf21 #include <unistd.h>}\par
00006 {\cf21 #include <vector>}\par
00007 \par
00008 {\cf21 #include "../../common/vars.hpp"}\par
00009 {\cf21 #include "file_sync.hpp"}\par
00010 \par
00011 {\cf17 using namespace }std;\par
00012 \par
00013 FileSync::FileSync(shared_ptr<ServerContext> context) \{\par
00014     this->context = context;\par
00015 \}\par
00016 \par
00017 {\cf18 void} FileSync::sync_all() \{\par
00018     PLOGI << {\cf22 "-------------------- Connected to filesync"} << endl;\par
00019     {\cf17 const} {\cf18 string} username = context->device->username;\par
00020 \par
00021     {\cf18 string}         sync_dir = FileHandler::get_sync_dir(username, DIR_SERVER);\par
00022     vector<string> files    = FileHandler::list_files(sync_dir);\par
00023 \par
00024     vector<string>::iterator filename;\par
00025     unique_ptr<FileHandler> file_handler({\cf17 new} FileHandler(sync_dir));\par
00026     \par
00027     {\cf19 for} (filename = files.begin(); filename != files.end(); filename++) \{\par
00028         ostringstream oss;\par
00029         oss << sync_dir << {\cf22 "/"} << *filename;\par
00030         {\cf18 string} filepath = oss.str();\par
00031         PLOGD << {\cf22 "File: "} << filepath << endl;\par
00032         file_handler->open(filepath);\par
00033         file_handler->send(context->socket, context->connection->channel);\par
00034     \}\par
00035     PLOGI << {\cf22 "End of filesync cycle"} << endl;\par
00036 \}\par
00037 \par
00038 {\cf18 void} FileSync::loop() \{\par
00039     this->sync_all();\par
00040     shared_ptr<Socket>  socket  = this->context->socket;\par
00041     {\cf18 int}                 channel = this->context->connection->channel;\par
00042     shared_ptr<uint8_t> buffer((uint8_t *)calloc(BUFFER_SIZE, {\cf17 sizeof}(uint8_t)));\par
00043     close(context->connection->pipe_fd[1]);\par
00044     read(context->connection->pipe_fd[0], buffer.get(), BUFFER_SIZE - 1);\par
00045     PLOGI << {\cf22 "Received filename "} << buffer << endl;\par
00046     {\cf20 // while (context->socket->get_message_sync(buffer.get(), context->connection->channel) != 0) \{}\par
00047     {\cf20 //     PLOGI << "Filesync waiting on channel " << channel << "..." << endl;}\par
00048     {\cf20 //     sleep(1);}\par
00049     {\cf20 // \}}\par
00050 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/server/eventhub/file_sync.hpp File Reference\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/file_sync.hpp}
{\xe \v src/server/eventhub/file_sync.hpp}
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../common/file_io/file_io.hpp"}\par
{\f2 #include "../../common/socket_io/socket.hpp"}\par
{\f2 #include "../session/models.hpp"}\par
{\f2 #include "../userland/models.hpp"}\par
{\f2 #include <memory>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FileSync}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
file_sync.hpp\par \pard\plain 
{\tc\tcl2 \v src/server/eventhub/file_sync.hpp}
{\xe \v src/server/eventhub/file_sync.hpp}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
Go to the documentation of this file.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef FILE_SYNC_H}\par
00002 {\cf21 #define FILE_SYNC_H}\par
00003 \par
00004 {\cf21 #include "../../common/file_io/file_io.hpp"}\par
00005 {\cf21 #include "../../common/socket_io/socket.hpp"}\par
00006 {\cf21 #include "../session/models.hpp"}\par
00007 {\cf21 #include "../userland/models.hpp"}\par
00008 \par
00009 {\cf21 #include <memory>}\par
00010 \par
00011 {\cf17 using namespace }std;\par
00012 \par
00013 {\cf17 class }FileSync \{\par
00014     shared_ptr<ServerContext> context;\par
00015 \par
00016 {\cf17 public}:\par
00017     FileSync(shared_ptr<ServerContext> context);\par
00018     {\cf18 void} loop();\par
00019     {\cf18 void} sync_all();\par
00020     {\cf18 void} get_event();\par
00021 \};\par
00022 {\cf21 #endif}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
